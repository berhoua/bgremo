"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[752],{7964:function(t,r,s){s.d(r,{$Sz:function(){return z},OPz:function(){return L},Za9:function(){return O}});var i,a,n,o,l,u,d,c,p,h,m,f,g,_,b,y,w,x,v,M,T,k,$,C,S=s(357),P=s(6300).Buffer,E={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(t,r,s)=>{t.exports=s.p+"ort-wasm-simd-threaded.jsep.wasm"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb":(t,r,s)=>{t.exports=s.p+"ort.bundle.min.mjs"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(t,r,s)=>{s.r(r),s.d(r,{Environment:()=>Y,Interpreter:()=>Z,Template:()=>et,parse:()=>B,tokenize:()=>c});var i=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),a=Object.freeze({set:i.Set,for:i.For,in:i.In,is:i.Is,if:i.If,else:i.Else,endif:i.EndIf,elif:i.ElseIf,endfor:i.EndFor,and:i.And,or:i.Or,not:i.Not,"not in":i.NotIn,macro:i.Macro,endmacro:i.EndMacro,true:i.BooleanLiteral,false:i.BooleanLiteral,none:i.NullLiteral,True:i.BooleanLiteral,False:i.BooleanLiteral,None:i.NullLiteral}),n=class{constructor(t,r){this.value=t,this.type=r}};function o(t){return/\w/.test(t)}function l(t){return/[0-9]/.test(t)}var u=[["{%",i.OpenStatement],["%}",i.CloseStatement],["{{",i.OpenExpression],["}}",i.CloseExpression],["(",i.OpenParen],[")",i.CloseParen],["{",i.OpenCurlyBracket],["}",i.CloseCurlyBracket],["[",i.OpenSquareBracket],["]",i.CloseSquareBracket],[",",i.Comma],[".",i.Dot],[":",i.Colon],["|",i.Pipe],["<=",i.ComparisonBinaryOperator],[">=",i.ComparisonBinaryOperator],["==",i.ComparisonBinaryOperator],["!=",i.ComparisonBinaryOperator],["<",i.ComparisonBinaryOperator],[">",i.ComparisonBinaryOperator],["+",i.AdditiveBinaryOperator],["-",i.AdditiveBinaryOperator],["*",i.MultiplicativeBinaryOperator],["/",i.MultiplicativeBinaryOperator],["%",i.MultiplicativeBinaryOperator],["=",i.Equals]],d=new Map([["n","\n"],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function c(t,r={}){let s=[],c=function(t,r={}){return t.endsWith("\n")&&(t=t.slice(0,-1)),t=t.replace(/{#.*?#}/gs,"{##}"),r.lstrip_blocks&&(t=t.replace(/^[ \t]*({[#%])/gm,"$1")),r.trim_blocks&&(t=t.replace(/([#%]})\n/g,"$1")),t.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(t,r),p=0,h=t=>{let r="";for(;t(c[p]);){if("\\"===c[p]){if(++p>=c.length)throw SyntaxError("Unexpected end of input");let t=c[p++],s=d.get(t);if(void 0===s)throw SyntaxError(`Unexpected escaped character: ${t}`);r+=s;continue}if(r+=c[p++],p>=c.length)throw SyntaxError("Unexpected end of input")}return r};e:for(;p<c.length;){let t=s.at(-1)?.type;if(void 0===t||t===i.CloseStatement||t===i.CloseExpression){let t="";for(;p<c.length&&!("{"===c[p]&&("%"===c[p+1]||"{"===c[p+1]));)t+=c[p++];if(t.length>0){s.push(new n(t,i.Text));continue}}h(t=>/\s/.test(t));let r=c[p];if("-"===r||"+"===r){let t=s.at(-1)?.type;if(t===i.Text||void 0===t)throw SyntaxError(`Unexpected character: ${r}`);switch(t){case i.Identifier:case i.NumericLiteral:case i.BooleanLiteral:case i.NullLiteral:case i.StringLiteral:case i.CloseParen:case i.CloseSquareBracket:break;default:{++p;let t=h(l);s.push(new n(`${r}${t}`,t.length>0?i.NumericLiteral:i.UnaryOperator));continue}}}for(let[t,r]of u)if(c.slice(p,p+t.length)===t){s.push(new n(t,r)),p+=t.length;continue e}if("'"===r||'"'===r){++p;let t=h(t=>t!==r);s.push(new n(t,i.StringLiteral)),++p;continue}if(l(r)){let t=h(l);s.push(new n(t,i.NumericLiteral));continue}if(o(r)){let t=h(o),r=Object.hasOwn(a,t)?a[t]:i.Identifier;r===i.In&&s.at(-1)?.type===i.Not?(s.pop(),s.push(new n("not in",i.NotIn))):s.push(new n(t,r));continue}throw SyntaxError(`Unexpected character: ${r}`)}return s}var p=class{type="Statement"},h=class extends p{constructor(t){super(),this.body=t}type="Program"},m=class extends p{constructor(t,r,s){super(),this.test=t,this.body=r,this.alternate=s}type="If"},f=class extends p{constructor(t,r,s,i){super(),this.loopvar=t,this.iterable=r,this.body=s,this.defaultBlock=i}type="For"},g=class extends p{constructor(t,r){super(),this.assignee=t,this.value=r}type="Set"},_=class extends p{constructor(t,r,s){super(),this.name=t,this.args=r,this.body=s}type="Macro"},b=class extends p{type="Expression"},y=class extends b{constructor(t,r,s){super(),this.object=t,this.property=r,this.computed=s}type="MemberExpression"},w=class extends b{constructor(t,r){super(),this.callee=t,this.args=r}type="CallExpression"},x=class extends b{constructor(t){super(),this.value=t}type="Identifier"},v=class extends b{constructor(t){super(),this.value=t}type="Literal"},M=class extends v{type="NumericLiteral"},T=class extends v{type="StringLiteral"},k=class extends v{type="BooleanLiteral"},$=class extends v{type="NullLiteral"},C=class extends v{type="ArrayLiteral"},S=class extends v{type="TupleLiteral"},P=class extends v{type="ObjectLiteral"},E=class extends b{constructor(t,r,s){super(),this.operator=t,this.left=r,this.right=s}type="BinaryExpression"},I=class extends b{constructor(t,r){super(),this.operand=t,this.filter=r}type="FilterExpression"},A=class extends b{constructor(t,r){super(),this.iterable=t,this.test=r}type="SelectExpression"},F=class extends b{constructor(t,r,s){super(),this.operand=t,this.negate=r,this.test=s}type="TestExpression"},z=class extends b{constructor(t,r){super(),this.operator=t,this.argument=r}type="UnaryExpression"},O=class extends b{constructor(t,r,s){super(),this.start=t,this.stop=r,this.step=s}type="SliceExpression"},L=class extends b{constructor(t,r){super(),this.key=t,this.value=r}type="KeywordArgumentExpression"};function B(t){let r=new h([]),s=0;function a(r,i){let a=t[s++];if(!a||a.type!==r)throw Error(`Parser Error: ${i}. ${a.type} !== ${r}.`);return a}function n(...r){return s+r.length<=t.length&&r.some((r,i)=>r!==t[s+i].type)}function o(...r){return s+r.length<=t.length&&r.every((r,i)=>r===t[s+i].type)}function l(t=!1){let r=t?j:u,a=[r()],n=o(i.Comma);for(;n&&(++s,a.push(r()),o(i.Comma)););return n?new S(a):a[0]}function u(){return function(){let t=d();if(o(i.If)){++s;let r=d();return o(i.Else)?(++s,new m(r,[t],[d()])):new A(t,r)}return t}()}function d(){let r=c();for(;o(i.Or);){let i=t[s];++s,r=new E(i,r,c())}return r}function c(){let r=p();for(;o(i.And);){let i=t[s];++s,r=new E(i,r,p())}return r}function p(){let r;for(;o(i.Not);){let i=t[s];++s,r=new z(i,p())}return r??function(){let r=b();for(;o(i.ComparisonBinaryOperator)||o(i.In)||o(i.NotIn);){let i=t[s];++s,r=new E(i,r,b())}return r}()}function b(){let r=D();for(;o(i.AdditiveBinaryOperator);){let i=t[s];++s,r=new E(i,r,D())}return r}function v(t){let r=new w(t,B());return r=N(r),o(i.OpenParen)&&(r=v(r)),r}function B(){a(i.OpenParen,"Expected opening parenthesis for arguments list");let t=function(){let t=[];for(;!o(i.CloseParen);){let r=u();if(o(i.Equals)){if(++s,!(r instanceof x))throw SyntaxError("Expected identifier for keyword argument");r=new L(r,u())}t.push(r),o(i.Comma)&&++s}return t}();return a(i.CloseParen,"Expected closing parenthesis for arguments list"),t}function N(r){for(;o(i.Dot)||o(i.OpenSquareBracket);){let n;let l=t[s];++s;let d=l.type!==i.Dot;if(d)n=function(){let t=[],r=!1;for(;!o(i.CloseSquareBracket);)o(i.Colon)?(t.push(void 0),++s,r=!0):(t.push(u()),o(i.Colon)&&(++s,r=!0));if(0===t.length)throw SyntaxError("Expected at least one argument for member/slice expression");if(r){if(t.length>3)throw SyntaxError("Expected 0-3 arguments for slice expression");return new O(...t)}return t[0]}(),a(i.CloseSquareBracket,"Expected closing square bracket");else if("Identifier"!==(n=j()).type)throw SyntaxError("Expected identifier following dot operator");r=new y(r,n,d)}return r}function D(){let r=R();for(;o(i.MultiplicativeBinaryOperator);){let i=t[s];++s,r=new E(i,r,R())}return r}function R(){let t=function(){let t=function(){let t=N(j());return o(i.OpenParen)?v(t):t}();for(;o(i.Pipe);){++s;let r=j();if(!(r instanceof x))throw SyntaxError("Expected identifier for the filter");o(i.OpenParen)&&(r=v(r)),t=new I(t,r)}return t}();for(;o(i.Is);){++s;let r=o(i.Not);r&&++s;let a=j();if(a instanceof k?a=new x(a.value.toString()):a instanceof $&&(a=new x("none")),!(a instanceof x))throw SyntaxError("Expected identifier for the test");t=new F(t,r,a)}return t}function j(){let r=t[s];switch(r.type){case i.NumericLiteral:return++s,new M(Number(r.value));case i.StringLiteral:return++s,new T(r.value);case i.BooleanLiteral:return++s,new k("true"===r.value.toLowerCase());case i.NullLiteral:return++s,new $(null);case i.Identifier:return++s,new x(r.value);case i.OpenParen:{++s;let r=l();if(t[s].type!==i.CloseParen)throw SyntaxError(`Expected closing parenthesis, got ${t[s].type} instead`);return++s,r}case i.OpenSquareBracket:{++s;let t=[];for(;!o(i.CloseSquareBracket);)t.push(u()),o(i.Comma)&&++s;return++s,new C(t)}case i.OpenCurlyBracket:{++s;let t=new Map;for(;!o(i.CloseCurlyBracket);){let r=u();a(i.Colon,"Expected colon between key and value in object literal");let n=u();t.set(r,n),o(i.Comma)&&++s}return++s,new P(t)}default:throw SyntaxError(`Unexpected token: ${r.type}`)}}for(;s<t.length;)r.body.push(function r(){switch(t[s].type){case i.Text:return new T(a(i.Text,"Expected text token").value);case i.OpenStatement:return function(){let d;switch(a(i.OpenStatement,"Expected opening statement token"),t[s].type){case i.Set:++s,d=function t(){let r=u();return o(i.Equals)?(++s,new g(r,t())):r}(),a(i.CloseStatement,"Expected closing statement token");break;case i.If:++s,d=function n(){let l=u();a(i.CloseStatement,"Expected closing statement token");let d=[],c=[];for(;!(t[s]?.type===i.OpenStatement&&(t[s+1]?.type===i.ElseIf||t[s+1]?.type===i.Else||t[s+1]?.type===i.EndIf));)d.push(r());if(t[s]?.type===i.OpenStatement&&t[s+1]?.type!==i.EndIf){if(++s,o(i.ElseIf))a(i.ElseIf,"Expected elseif token"),c.push(n());else for(a(i.Else,"Expected else token"),a(i.CloseStatement,"Expected closing statement token");!(t[s]?.type===i.OpenStatement&&t[s+1]?.type===i.EndIf);)c.push(r())}return new m(l,d,c)}(),a(i.OpenStatement,"Expected {% token"),a(i.EndIf,"Expected endif token"),a(i.CloseStatement,"Expected %} token");break;case i.Macro:++s,d=function(){let t=j();if("Identifier"!==t.type)throw SyntaxError("Expected identifier following macro statement");let s=B();a(i.CloseStatement,"Expected closing statement token");let o=[];for(;n(i.OpenStatement,i.EndMacro);)o.push(r());return new _(t,s,o)}(),a(i.OpenStatement,"Expected {% token"),a(i.EndMacro,"Expected endmacro token"),a(i.CloseStatement,"Expected %} token");break;case i.For:++s,d=function(){let t=l(!0);if(!(t instanceof x||t instanceof S))throw SyntaxError(`Expected identifier/tuple for the loop variable, got ${t.type} instead`);a(i.In,"Expected `in` keyword following loop variable");let d=u();a(i.CloseStatement,"Expected closing statement token");let c=[];for(;n(i.OpenStatement,i.EndFor)&&n(i.OpenStatement,i.Else);)c.push(r());let p=[];if(o(i.OpenStatement,i.Else))for(++s,++s,a(i.CloseStatement,"Expected closing statement token");n(i.OpenStatement,i.EndFor);)p.push(r());return new f(t,d,c,p)}(),a(i.OpenStatement,"Expected {% token"),a(i.EndFor,"Expected endfor token"),a(i.CloseStatement,"Expected %} token");break;default:throw SyntaxError(`Unknown statement type: ${t[s].type}`)}return d}();case i.OpenExpression:return function(){a(i.OpenExpression,"Expected opening expression token");let t=u();return a(i.CloseExpression,"Expected closing expression token"),t}();default:throw SyntaxError(`Unexpected token type: ${t[s].type}`)}}());return r}function N(t,r,s=1){void 0===r&&(r=t,t=0);let i=[];for(let a=t;a<r;a+=s)i.push(a);return i}function D(t,r,s,i=1){let a=Math.sign(i);a>=0?(r=(r??=0)<0?Math.max(t.length+r,0):Math.min(r,t.length),s=(s??=t.length)<0?Math.max(t.length+s,0):Math.min(s,t.length)):(r=(r??=t.length-1)<0?Math.max(t.length+r,-1):Math.min(r,t.length-1),s=(s??=-1)<-1?Math.max(t.length+s,-1):Math.min(s,t.length-1));let n=[];for(let o=r;a*o<a*s;o+=i)n.push(t[o]);return n}function R(t){return t.replace(/\b\w/g,t=>t.toUpperCase())}var j=class{type="RuntimeValue";value;builtins=new Map;constructor(t){this.value=t}__bool__(){return new U(!!this.value)}},V=class extends j{type="NumericValue"},G=class extends j{type="StringValue";builtins=new Map([["upper",new Q(()=>new G(this.value.toUpperCase()))],["lower",new Q(()=>new G(this.value.toLowerCase()))],["strip",new Q(()=>new G(this.value.trim()))],["title",new Q(()=>new G(R(this.value)))],["length",new V(this.value.length)],["rstrip",new Q(()=>new G(this.value.trimEnd()))],["lstrip",new Q(()=>new G(this.value.trimStart()))],["split",new Q(t=>{let r=t[0]??new X;if(!(r instanceof G||r instanceof X))throw Error("sep argument must be a string or null");let s=t[1]??new V(-1);if(!(s instanceof V))throw Error("maxsplit argument must be a number");let i=[];if(r instanceof X){let t=this.value.trimStart();for(let{0:r,index:a}of t.matchAll(/\S+/g)){if(-1!==s.value&&i.length>=s.value&&void 0!==a){i.push(r+t.slice(a+r.length));break}i.push(r)}}else{if(""===r.value)throw Error("empty separator");i=this.value.split(r.value),-1!==s.value&&i.length>s.value&&i.push(i.splice(s.value).join(r.value))}return new H(i.map(t=>new G(t)))})]])},U=class extends j{type="BooleanValue"},q=class extends j{type="ObjectValue";__bool__(){return new U(this.value.size>0)}builtins=new Map([["get",new Q(([t,r])=>{if(!(t instanceof G))throw Error(`Object key must be a string: got ${t.type}`);return this.value.get(t.value)??r??new X})],["items",new Q(()=>new H(Array.from(this.value.entries()).map(([t,r])=>new H([new G(t),r]))))]])},W=class extends q{type="KeywordArgumentsValue"},H=class extends j{type="ArrayValue";builtins=new Map([["length",new V(this.value.length)]]);__bool__(){return new U(this.value.length>0)}},K=class extends H{type="TupleValue"},Q=class extends j{type="FunctionValue"},X=class extends j{type="NullValue"},J=class extends j{type="UndefinedValue"},Y=class{constructor(t){this.parent=t}variables=new Map([["namespace",new Q(t=>{if(0===t.length)return new q(new Map);if(1!==t.length||!(t[0]instanceof q))throw Error("`namespace` expects either zero arguments or a single object argument");return t[0]})]]);tests=new Map([["boolean",t=>"BooleanValue"===t.type],["callable",t=>t instanceof Q],["odd",t=>{if("NumericValue"!==t.type)throw Error(`Cannot apply test "odd" to type: ${t.type}`);return t.value%2!=0}],["even",t=>{if("NumericValue"!==t.type)throw Error(`Cannot apply test "even" to type: ${t.type}`);return t.value%2==0}],["false",t=>"BooleanValue"===t.type&&!t.value],["true",t=>"BooleanValue"===t.type&&t.value],["none",t=>"NullValue"===t.type],["string",t=>"StringValue"===t.type],["number",t=>"NumericValue"===t.type],["integer",t=>"NumericValue"===t.type&&Number.isInteger(t.value)],["iterable",t=>"ArrayValue"===t.type||"StringValue"===t.type],["mapping",t=>"ObjectValue"===t.type],["lower",t=>{let r=t.value;return"StringValue"===t.type&&r===r.toLowerCase()}],["upper",t=>{let r=t.value;return"StringValue"===t.type&&r===r.toUpperCase()}],["none",t=>"NullValue"===t.type],["defined",t=>"UndefinedValue"!==t.type],["undefined",t=>"UndefinedValue"===t.type],["equalto",(t,r)=>t.value===r.value],["eq",(t,r)=>t.value===r.value]]);set(t,r){return this.declareVariable(t,function t(r){switch(typeof r){case"number":return new V(r);case"string":return new G(r);case"boolean":return new U(r);case"undefined":return new J;case"object":if(null===r)return new X;if(Array.isArray(r))return new H(r.map(t));return new q(new Map(Object.entries(r).map(([r,s])=>[r,t(s)])));case"function":return new Q((s,i)=>t(r(...s.map(t=>t.value))??null));default:throw Error(`Cannot convert to runtime value: ${r}`)}}(r))}declareVariable(t,r){if(this.variables.has(t))throw SyntaxError(`Variable already declared: ${t}`);return this.variables.set(t,r),r}setVariable(t,r){return this.variables.set(t,r),r}resolve(t){if(this.variables.has(t))return this;if(this.parent)return this.parent.resolve(t);throw Error(`Unknown variable: ${t}`)}lookupVariable(t){try{return this.resolve(t).variables.get(t)??new J}catch{return new J}}},Z=class{global;constructor(t){this.global=t??new Y}run(t){return this.evaluate(t,this.global)}evaluateBinaryExpression(t,r){let s=this.evaluate(t.left,r);switch(t.operator.value){case"and":return s.__bool__().value?this.evaluate(t.right,r):s;case"or":return s.__bool__().value?s:this.evaluate(t.right,r)}let i=this.evaluate(t.right,r);switch(t.operator.value){case"==":return new U(s.value==i.value);case"!=":return new U(s.value!=i.value)}if(s instanceof J||i instanceof J)throw Error("Cannot perform operation on undefined values");if(s instanceof X||i instanceof X)throw Error("Cannot perform operation on null values");if(s instanceof V&&i instanceof V)switch(t.operator.value){case"+":return new V(s.value+i.value);case"-":return new V(s.value-i.value);case"*":return new V(s.value*i.value);case"/":return new V(s.value/i.value);case"%":return new V(s.value%i.value);case"<":return new U(s.value<i.value);case">":return new U(s.value>i.value);case">=":return new U(s.value>=i.value);case"<=":return new U(s.value<=i.value)}else if(s instanceof H&&i instanceof H){if("+"===t.operator.value)return new H(s.value.concat(i.value))}else if(i instanceof H){let r=void 0!==i.value.find(t=>t.value===s.value);switch(t.operator.value){case"in":return new U(r);case"not in":return new U(!r)}}if((s instanceof G||i instanceof G)&&"+"===t.operator.value)return new G(s.value.toString()+i.value.toString());if(s instanceof G&&i instanceof G)switch(t.operator.value){case"in":return new U(i.value.includes(s.value));case"not in":return new U(!i.value.includes(s.value))}if(s instanceof G&&i instanceof q)switch(t.operator.value){case"in":return new U(i.value.has(s.value));case"not in":return new U(!i.value.has(s.value))}throw SyntaxError(`Unknown operator "${t.operator.value}" between ${s.type} and ${i.type}`)}evaluateArguments(t,r){let s=[],i=new Map;for(let a of t)if("KeywordArgumentExpression"===a.type)i.set(a.key.value,this.evaluate(a.value,r));else{if(i.size>0)throw Error("Positional arguments must come before keyword arguments");s.push(this.evaluate(a,r))}return[s,i]}evaluateFilterExpression(t,r){let s=this.evaluate(t.operand,r);if("Identifier"===t.filter.type){let r=t.filter;if("tojson"===r.value)return new G(ee(s));if(s instanceof H)switch(r.value){case"list":return s;case"first":return s.value[0];case"last":return s.value[s.value.length-1];case"length":return new V(s.value.length);case"reverse":return new H(s.value.reverse());case"sort":return new H(s.value.sort((t,r)=>{if(t.type!==r.type)throw Error(`Cannot compare different types: ${t.type} and ${r.type}`);switch(t.type){case"NumericValue":return t.value-r.value;case"StringValue":return t.value.localeCompare(r.value);default:throw Error(`Cannot compare type: ${t.type}`)}}));case"join":return new G(s.value.map(t=>t.value).join(""));default:throw Error(`Unknown ArrayValue filter: ${r.value}`)}else if(s instanceof G)switch(r.value){case"length":return new V(s.value.length);case"upper":return new G(s.value.toUpperCase());case"lower":return new G(s.value.toLowerCase());case"title":return new G(R(s.value));case"capitalize":return new G(s.value.charAt(0).toUpperCase()+s.value.slice(1));case"trim":return new G(s.value.trim());case"indent":return new G(s.value.split("\n").map((t,r)=>0===r||0===t.length?t:"    "+t).join("\n"));case"join":case"string":return s;default:throw Error(`Unknown StringValue filter: ${r.value}`)}else if(s instanceof V){if("abs"===r.value)return new V(Math.abs(s.value));throw Error(`Unknown NumericValue filter: ${r.value}`)}else if(s instanceof q)switch(r.value){case"items":return new H(Array.from(s.value.entries()).map(([t,r])=>new H([new G(t),r])));case"length":return new V(s.value.size);default:throw Error(`Unknown ObjectValue filter: ${r.value}`)}throw Error(`Cannot apply filter "${r.value}" to type: ${s.type}`)}if("CallExpression"===t.filter.type){let i=t.filter;if("Identifier"!==i.callee.type)throw Error(`Unknown filter: ${i.callee.type}`);let a=i.callee.value;if("tojson"===a){let[,t]=this.evaluateArguments(i.args,r),a=t.get("indent")??new X;if(!(a instanceof V||a instanceof X))throw Error("If set, indent must be a number");return new G(ee(s,a.value))}if("join"===a){let t;if(s instanceof G)t=Array.from(s.value);else if(s instanceof H)t=s.value.map(t=>t.value);else throw Error(`Cannot apply filter "${a}" to type: ${s.type}`);let[n,o]=this.evaluateArguments(i.args,r),l=n.at(0)??o.get("separator")??new G("");if(!(l instanceof G))throw Error("separator must be a string");return new G(t.join(l.value))}if(s instanceof H){switch(a){case"selectattr":case"rejectattr":{let t;let n="selectattr"===a;if(s.value.some(t=>!(t instanceof q)))throw Error(`\`${a}\` can only be applied to array of objects`);if(i.args.some(t=>"StringLiteral"!==t.type))throw Error(`arguments of \`${a}\` must be strings`);let[o,l,u]=i.args.map(t=>this.evaluate(t,r));if(l){let s=r.tests.get(l.value);if(!s)throw Error(`Unknown test: ${l.value}`);t=s}else t=(...t)=>t[0].__bool__().value;return new H(s.value.filter(r=>{let s=r.value.get(o.value),i=!!s&&t(s,u);return n?i:!i}))}case"map":{let[,t]=this.evaluateArguments(i.args,r);if(t.has("attribute")){let r=t.get("attribute");if(!(r instanceof G))throw Error("attribute must be a string");let i=t.get("default");return new H(s.value.map(t=>{if(!(t instanceof q))throw Error("items in map must be an object");return t.value.get(r.value)??i??new J}))}throw Error("`map` expressions without `attribute` set are not currently supported.")}}throw Error(`Unknown ArrayValue filter: ${a}`)}if(s instanceof G){if("indent"===a){let[t,a]=this.evaluateArguments(i.args,r),n=t.at(0)??a.get("width")??new V(4);if(!(n instanceof V))throw Error("width must be a number");let o=t.at(1)??a.get("first")??new U(!1),l=t.at(2)??a.get("blank")??new U(!1),u=s.value.split("\n"),d=" ".repeat(n.value);return new G(u.map((t,r)=>(o.value||0!==r)&&(l.value||0!==t.length)?d+t:t).join("\n"))}throw Error(`Unknown StringValue filter: ${a}`)}throw Error(`Cannot apply filter "${a}" to type: ${s.type}`)}throw Error(`Unknown filter: ${t.filter.type}`)}evaluateTestExpression(t,r){let s=this.evaluate(t.operand,r),i=r.tests.get(t.test.value);if(!i)throw Error(`Unknown test: ${t.test.value}`);let a=i(s);return new U(t.negate?!a:a)}evaluateUnaryExpression(t,r){let s=this.evaluate(t.argument,r);if("not"===t.operator.value)return new U(!s.value);throw SyntaxError(`Unknown operator: ${t.operator.value}`)}evalProgram(t,r){return this.evaluateBlock(t.body,r)}evaluateBlock(t,r){let s="";for(let i of t){let t=this.evaluate(i,r);"NullValue"!==t.type&&"UndefinedValue"!==t.type&&(s+=t.value)}return new G(s)}evaluateIdentifier(t,r){return r.lookupVariable(t.value)}evaluateCallExpression(t,r){let[s,i]=this.evaluateArguments(t.args,r);i.size>0&&s.push(new W(i));let a=this.evaluate(t.callee,r);if("FunctionValue"!==a.type)throw Error(`Cannot call something that is not a function: got ${a.type}`);return a.value(s,r)}evaluateSliceExpression(t,r,s){if(!(t instanceof H||t instanceof G))throw Error("Slice object must be an array or string");let i=this.evaluate(r.start,s),a=this.evaluate(r.stop,s),n=this.evaluate(r.step,s);if(!(i instanceof V||i instanceof J))throw Error("Slice start must be numeric or undefined");if(!(a instanceof V||a instanceof J))throw Error("Slice stop must be numeric or undefined");if(!(n instanceof V||n instanceof J))throw Error("Slice step must be numeric or undefined");return t instanceof H?new H(D(t.value,i.value,a.value,n.value)):new G(D(Array.from(t.value),i.value,a.value,n.value).join(""))}evaluateMemberExpression(t,r){let s,i;let a=this.evaluate(t.object,r);if(t.computed){if("SliceExpression"===t.property.type)return this.evaluateSliceExpression(a,t.property,r);s=this.evaluate(t.property,r)}else s=new G(t.property.value);if(a instanceof q){if(!(s instanceof G))throw Error(`Cannot access property with non-string: got ${s.type}`);i=a.value.get(s.value)??a.builtins.get(s.value)}else if(a instanceof H||a instanceof G){if(s instanceof V)i=a.value.at(s.value),a instanceof G&&(i=new G(a.value.at(s.value)));else if(s instanceof G)i=a.builtins.get(s.value);else throw Error(`Cannot access property with non-string/non-number: got ${s.type}`)}else{if(!(s instanceof G))throw Error(`Cannot access property with non-string: got ${s.type}`);i=a.builtins.get(s.value)}return i instanceof j?i:new J}evaluateSet(t,r){let s=this.evaluate(t.value,r);if("Identifier"===t.assignee.type){let i=t.assignee.value;r.setVariable(i,s)}else if("MemberExpression"===t.assignee.type){let i=t.assignee,a=this.evaluate(i.object,r);if(!(a instanceof q))throw Error("Cannot assign to member of non-object");if("Identifier"!==i.property.type)throw Error("Cannot assign to member with non-identifier property");a.value.set(i.property.value,s)}else throw Error(`Invalid LHS inside assignment expression: ${JSON.stringify(t.assignee)}`);return new X}evaluateIf(t,r){let s=this.evaluate(t.test,r);return this.evaluateBlock(s.__bool__().value?t.body:t.alternate,r)}evaluateFor(t,r){let s,i;let a=new Y(r);if("SelectExpression"===t.iterable.type){let r=t.iterable;i=this.evaluate(r.iterable,a),s=r.test}else i=this.evaluate(t.iterable,a);if(!(i instanceof H))throw Error(`Expected iterable type in for loop: got ${i.type}`);let n=[],o=[];for(let r=0;r<i.value.length;++r){let l;let u=new Y(a),d=i.value[r];if("Identifier"===t.loopvar.type)l=r=>r.setVariable(t.loopvar.value,d);else if("TupleLiteral"===t.loopvar.type){let r=t.loopvar;if("ArrayValue"!==d.type)throw Error(`Cannot unpack non-iterable type: ${d.type}`);if(r.value.length!==d.value.length)throw Error(`Too ${r.value.length>d.value.length?"few":"many"} items to unpack`);l=t=>{for(let s=0;s<r.value.length;++s){if("Identifier"!==r.value[s].type)throw Error(`Cannot unpack non-identifier type: ${r.value[s].type}`);t.setVariable(r.value[s].value,d.value[s])}}}else throw Error(`Invalid loop variable(s): ${t.loopvar.type}`);(!s||(l(u),this.evaluate(s,u).__bool__().value))&&(n.push(d),o.push(l))}let l="",u=!0;for(let r=0;r<n.length;++r){let s=new Map([["index",new V(r+1)],["index0",new V(r)],["revindex",new V(n.length-r)],["revindex0",new V(n.length-r-1)],["first",new U(0===r)],["last",new U(r===n.length-1)],["length",new V(n.length)],["previtem",r>0?n[r-1]:new J],["nextitem",r<n.length-1?n[r+1]:new J]]);a.setVariable("loop",new q(s)),o[r](a),l+=this.evaluateBlock(t.body,a).value,u=!1}return u&&(l+=this.evaluateBlock(t.defaultBlock,a).value),new G(l)}evaluateMacro(t,r){return r.setVariable(t.name.value,new Q((r,s)=>{let i;let a=new Y(s);r=r.slice(),r.at(-1)?.type==="KeywordArgumentsValue"&&(i=r.pop());for(let s=0;s<t.args.length;++s){let n=t.args[s],o=r[s];if("Identifier"===n.type){if(!o)throw Error(`Missing positional argument: ${n.value}`);a.setVariable(n.value,o)}else if("KeywordArgumentExpression"===n.type){let t=o??i?.value.get(n.key.value)??this.evaluate(n.value,a);a.setVariable(n.key.value,t)}else throw Error(`Unknown argument type: ${n.type}`)}return this.evaluateBlock(t.body,a)})),new X}evaluate(t,r){if(void 0===t)return new J;switch(t.type){case"Program":return this.evalProgram(t,r);case"Set":return this.evaluateSet(t,r);case"If":return this.evaluateIf(t,r);case"For":return this.evaluateFor(t,r);case"Macro":return this.evaluateMacro(t,r);case"NumericLiteral":return new V(Number(t.value));case"StringLiteral":return new G(t.value);case"BooleanLiteral":return new U(t.value);case"NullLiteral":return new X(t.value);case"ArrayLiteral":return new H(t.value.map(t=>this.evaluate(t,r)));case"TupleLiteral":return new K(t.value.map(t=>this.evaluate(t,r)));case"ObjectLiteral":{let s=new Map;for(let[i,a]of t.value){let t=this.evaluate(i,r);if(!(t instanceof G))throw Error(`Object keys must be strings: got ${t.type}`);s.set(t.value,this.evaluate(a,r))}return new q(s)}case"Identifier":return this.evaluateIdentifier(t,r);case"CallExpression":return this.evaluateCallExpression(t,r);case"MemberExpression":return this.evaluateMemberExpression(t,r);case"UnaryExpression":return this.evaluateUnaryExpression(t,r);case"BinaryExpression":return this.evaluateBinaryExpression(t,r);case"FilterExpression":return this.evaluateFilterExpression(t,r);case"TestExpression":return this.evaluateTestExpression(t,r);default:throw SyntaxError(`Unknown node type: ${t.type}`)}}};function ee(t,r,s){let i=s??0;switch(t.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(t.value);case"ArrayValue":case"ObjectValue":{let s=r?" ".repeat(r):"",a="\n"+s.repeat(i),n=a+s;if("ArrayValue"===t.type){let s=t.value.map(t=>ee(t,r,i+1));return r?`[${n}${s.join(`,${n}`)}${a}]`:`[${s.join(", ")}]`}{let s=Array.from(t.value.entries()).map(([t,s])=>{let a=`"${t}": ${ee(s,r,i+1)}`;return r?`${n}${a}`:a});return r?`{${s.join(",")}${a}}`:`{${s.join(", ")}}`}}default:throw Error(`Cannot convert to JSON: ${t.type}`)}}var et=class{parsed;constructor(t){let r=c(t,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=B(r)}render(t){let r=new Y;if(r.set("false",!1),r.set("true",!0),r.set("raise_exception",t=>{throw Error(t)}),r.set("range",N),t)for(let[s,i]of Object.entries(t))r.set(s,i);return new Z(r).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(t,r,s)=>{s.r(r),s.d(r,{registerBackend:()=>n,resolveBackendAndExecutionProviders:()=>l});let i=new Map,a=[],n=(t,r,s)=>{if(r&&"function"==typeof r.init&&"function"==typeof r.createInferenceSessionHandler){let n=i.get(t);if(void 0===n)i.set(t,{backend:r,priority:s});else if(n.priority>s)return;else if(n.priority===s&&n.backend!==r)throw Error(`cannot register backend "${t}" using priority ${s}`);if(s>=0){let r=a.indexOf(t);-1!==r&&a.splice(r,1);for(let r=0;r<a.length;r++)if(i.get(a[r]).priority<=s){a.splice(r,0,t);return}a.push(t)}return}throw TypeError("not a valid backend")},o=async t=>{let r=i.get(t);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let s=!!r.initPromise;try{return s||(r.initPromise=r.backend.init(t)),await r.initPromise,r.initialized=!0,r.backend}catch(t){return s||(r.error=`${t}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},l=async t=>{let r;let s=t.executionProviders||[],i=s.map(t=>"string"==typeof t?t:t.name),n=0===i.length?a:i,l=[],u=new Set;for(let t of n){let s=await o(t);"string"==typeof s?l.push({name:t,err:s}):(r||(r=s),r===s&&u.add(t))}if(!r)throw Error(`no available backend found. ERR: ${l.map(t=>`[${t.name}] ${t.err}`).join(", ")}`);for(let{name:t,err:r}of l)i.includes(t)&&console.warn(`removing requested execution provider "${t}" from session options because it is not available: ${r}`);let d=s.filter(t=>u.has("string"==typeof t?t:t.name));return[r,new Proxy(t,{get:(t,r)=>"executionProviders"===r?d:Reflect.get(t,r)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(t,r,s)=>{s.r(r),s.d(r,{registerBackend:()=>i.registerBackend});var i=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(t,r,s)=>{s.r(r),s.d(r,{env:()=>n});var i=s("./node_modules/onnxruntime-common/dist/esm/version.js");let a="warning",n={wasm:{},webgl:{},webgpu:{},versions:{common:i.version},set logLevel(value){if(void 0===value)return;if("string"!=typeof value||-1===["verbose","info","warning","error","fatal"].indexOf(value))throw Error(`Unsupported logging level: ${value}`);a=value},get logLevel(){return a}};Object.defineProperty(n,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(t,r,s)=>{s.r(r),s.d(r,{env:()=>i});let i=s("./node_modules/onnxruntime-common/dist/esm/env-impl.js").env},"./node_modules/onnxruntime-common/dist/esm/index.js":(t,r,s)=>{s.r(r),s.d(r,{InferenceSession:()=>n.InferenceSession,TRACE:()=>l.TRACE,TRACE_FUNC_BEGIN:()=>l.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>l.TRACE_FUNC_END,Tensor:()=>o.Tensor,TrainingSession:()=>u.TrainingSession,env:()=>a.env,registerBackend:()=>i.registerBackend});var i=s("./node_modules/onnxruntime-common/dist/esm/backend.js"),a=s("./node_modules/onnxruntime-common/dist/esm/env.js"),n=s("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),o=s("./node_modules/onnxruntime-common/dist/esm/tensor.js");s("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),s("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var l=s("./node_modules/onnxruntime-common/dist/esm/trace.js");s("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),s("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var u=s("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(t,r,s)=>{s.r(r),s.d(r,{InferenceSession:()=>o});var i=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),a=s("./node_modules/onnxruntime-common/dist/esm/tensor.js"),n=s("./node_modules/onnxruntime-common/dist/esm/trace.js");class o{constructor(t){this.handler=t}async run(t,r,s){(0,n.TRACE_FUNC_BEGIN)();let i={},o={};if("object"!=typeof t||null===t||t instanceof a.Tensor||Array.isArray(t))throw TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let l=!0;if("object"==typeof r){if(null===r)throw TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof a.Tensor)throw TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw TypeError("'fetches' cannot be an empty array.");for(let t of(l=!1,r)){if("string"!=typeof t)throw TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(t))throw RangeError(`'fetches' contains invalid output name: ${t}.`);i[t]=null}if("object"==typeof s&&null!==s)o=s;else if(void 0!==s)throw TypeError("'options' must be an object.")}else{let t=!1,n=Object.getOwnPropertyNames(r);for(let s of this.outputNames)if(-1!==n.indexOf(s)){let n=r[s];(null===n||n instanceof a.Tensor)&&(t=!0,l=!1,i[s]=n)}if(t){if("object"==typeof s&&null!==s)o=s;else if(void 0!==s)throw TypeError("'options' must be an object.")}else o=r}}else if(void 0!==r)throw TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let r of this.inputNames)if(void 0===t[r])throw Error(`input '${r}' is missing in 'feeds'.`);if(l)for(let t of this.outputNames)i[t]=null;let u=await this.handler.run(t,i,o),d={};for(let t in u)if(Object.hasOwnProperty.call(u,t)){let r=u[t];r instanceof a.Tensor?d[t]=r:d[t]=new a.Tensor(r.type,r.data,r.dims)}return(0,n.TRACE_FUNC_END)(),d}async release(){return this.handler.dispose()}static async create(t,r,s,a){let l;(0,n.TRACE_FUNC_BEGIN)();let u={};if("string"==typeof t){if(l=t,"object"==typeof r&&null!==r)u=r;else if(void 0!==r)throw TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(l=t,"object"==typeof r&&null!==r)u=r;else if(void 0!==r)throw TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&t instanceof SharedArrayBuffer){let i=0,n=t.byteLength;if("object"==typeof r&&null!==r)u=r;else if("number"==typeof r){if(!Number.isSafeInteger(i=r))throw RangeError("'byteOffset' must be an integer.");if(i<0||i>=t.byteLength)throw RangeError(`'byteOffset' is out of range [0, ${t.byteLength}).`);if(n=t.byteLength-i,"number"==typeof s){if(!Number.isSafeInteger(n=s))throw RangeError("'byteLength' must be an integer.");if(n<=0||i+n>t.byteLength)throw RangeError(`'byteLength' is out of range (0, ${t.byteLength-i}].`);if("object"==typeof a&&null!==a)u=a;else if(void 0!==a)throw TypeError("'options' must be an object.")}else if(void 0!==s)throw TypeError("'byteLength' must be a number.")}else if(void 0!==r)throw TypeError("'options' must be an object.");l=new Uint8Array(t,i,n)}else throw TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[d,c]=await (0,i.resolveBackendAndExecutionProviders)(u),p=await d.createInferenceSessionHandler(l,c);return(0,n.TRACE_FUNC_END)(),new o(p)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(t,r,s)=>{s.r(r),s.d(r,{InferenceSession:()=>i});let i=s("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js").InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(t,r,s)=>{s.r(r)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(t,r,s)=>{s.r(r)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(t,r,s)=>{s.r(r),s.d(r,{tensorToDataURL:()=>i,tensorToImageData:()=>a});let i=(t,r)=>{let s="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);s.width=t.dims[3],s.height=t.dims[2];let i=s.getContext("2d");if(null!=i){let a,n,o,l;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(a=t.dims[2],n=t.dims[3]):(a=t.dims[3],n=t.dims[2]);let u=r?.format!==void 0?r.format:"RGB",d=r?.norm;void 0===d||void 0===d.mean?o=[255,255,255,255]:"number"==typeof d.mean?o=[d.mean,d.mean,d.mean,d.mean]:(o=[d.mean[0],d.mean[1],d.mean[2],0],void 0!==d.mean[3]&&(o[3]=d.mean[3])),void 0===d||void 0===d.bias?l=[0,0,0,0]:"number"==typeof d.bias?l=[d.bias,d.bias,d.bias,d.bias]:(l=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(l[3]=d.bias[3]));let c=n*a,p=0,h=c,m=2*c,f=-1;"RGBA"===u?(p=0,h=c,m=2*c,f=3*c):"RGB"===u?(p=0,h=c,m=2*c):"RBG"===u&&(p=0,m=c,h=2*c);for(let r=0;r<n;r++)for(let s=0;s<a;s++){let a=(t.data[p++]-l[0])*o[0],n=(t.data[h++]-l[1])*o[1],u=(t.data[m++]-l[2])*o[2],d=-1===f?255:(t.data[f++]-l[3])*o[3];i.fillStyle="rgba("+a+","+n+","+u+","+d+")",i.fillRect(s,r,1,1)}if("toDataURL"in s)return s.toDataURL();throw Error("toDataURL is not supported")}throw Error("Can not access image data")},a=(t,r)=>{let s;let i="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null!=i){let a,n,o,l,u;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(a=t.dims[2],n=t.dims[1],o=t.dims[3]):(a=t.dims[3],n=t.dims[2],o=t.dims[1]);let d=void 0!==r&&void 0!==r.format?r.format:"RGB",c=r?.norm;void 0===c||void 0===c.mean?l=[255,255,255,255]:"number"==typeof c.mean?l=[c.mean,c.mean,c.mean,c.mean]:(l=[c.mean[0],c.mean[1],c.mean[2],255],void 0!==c.mean[3]&&(l[3]=c.mean[3])),void 0===c||void 0===c.bias?u=[0,0,0,0]:"number"==typeof c.bias?u=[c.bias,c.bias,c.bias,c.bias]:(u=[c.bias[0],c.bias[1],c.bias[2],0],void 0!==c.bias[3]&&(u[3]=c.bias[3]));let p=n*a;if(void 0!==r&&(void 0!==r.format&&4===o&&"RGBA"!==r.format||3===o&&"RGB"!==r.format&&"BGR"!==r.format))throw Error("Tensor format doesn't match input tensor dims");let h=0,m=1,f=2,g=3,_=0,b=p,y=2*p,w=-1;"RGBA"===d?(_=0,b=p,y=2*p,w=3*p):"RGB"===d?(_=0,b=p,y=2*p):"RBG"===d&&(_=0,y=p,b=2*p),s=i.createImageData(a,n);for(let r=0;r<n*a;h+=4,m+=4,f+=4,g+=4,r++)s.data[h]=(t.data[_++]-u[0])*l[0],s.data[m]=(t.data[b++]-u[1])*l[1],s.data[f]=(t.data[y++]-u[2])*l[2],s.data[g]=-1===w?255:(t.data[w++]-u[3])*l[3]}else throw Error("Can not access image data");return s}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(t,r,s)=>{s.r(r)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(t,r,s)=>{s.r(r),s.d(r,{bufferToTensor:()=>a,tensorFromGpuBuffer:()=>l,tensorFromImage:()=>n,tensorFromMLTensor:()=>u,tensorFromPinnedBuffer:()=>d,tensorFromTexture:()=>o});var i=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");let a=(t,r)=>{let s,a;if(void 0===t)throw Error("Image buffer must be defined");if(void 0===r.height||void 0===r.width)throw Error("Image height and width must be defined");if("NHWC"===r.tensorLayout)throw Error("NHWC Tensor layout is not supported yet");let{height:n,width:o}=r,l=r.norm??{mean:255,bias:0};s="number"==typeof l.mean?[l.mean,l.mean,l.mean,l.mean]:[l.mean[0],l.mean[1],l.mean[2],l.mean[3]??255],a="number"==typeof l.bias?[l.bias,l.bias,l.bias,l.bias]:[l.bias[0],l.bias[1],l.bias[2],l.bias[3]??0];let u=void 0!==r.format?r.format:"RGBA",d=void 0!==r.tensorFormat&&void 0!==r.tensorFormat?r.tensorFormat:"RGB",c=n*o,p=new Float32Array("RGBA"===d?4*c:3*c),h=4,m=0,f=1,g=2,_=3,b=0,y=c,w=2*c,x=-1;"RGB"===u&&(h=3,m=0,f=1,g=2,_=-1),"RGBA"===d?x=3*c:"RBG"===d?(b=0,w=c,y=2*c):"BGR"===d&&(w=0,y=c,b=2*c);for(let r=0;r<c;r++,m+=h,g+=h,f+=h,_+=h)p[b++]=(t[m]+a[0])/s[0],p[y++]=(t[f]+a[1])/s[1],p[w++]=(t[g]+a[2])/s[2],-1!==x&&-1!==_&&(p[x++]=(t[_]+a[3])/s[3]);return"RGBA"===d?new i.Tensor("float32",p,[1,4,n,o]):new i.Tensor("float32",p,[1,3,n,o])},n=async(t,r)=>{let s;let i="undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement,n="undefined"!=typeof ImageData&&t instanceof ImageData,o="undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap,l="string"==typeof t,u=r??{},d=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw Error("Canvas is not supported")},c=t=>"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement?t.getContext("2d"):t instanceof OffscreenCanvas?t.getContext("2d"):null;if(i){let i=d();i.width=t.width,i.height=t.height;let a=c(i);if(null!=a){let i=t.height,n=t.width;if(void 0!==r&&void 0!==r.resizedHeight&&void 0!==r.resizedWidth&&(i=r.resizedHeight,n=r.resizedWidth),void 0!==r){if(u=r,void 0!==r.tensorFormat)throw Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=i,u.width=n}else u.tensorFormat="RGBA",u.height=i,u.width=n;a.drawImage(t,0,0),s=a.getImageData(0,0,n,i).data}else throw Error("Can not access image data")}else if(n){let i,a;if(void 0!==r&&void 0!==r.resizedWidth&&void 0!==r.resizedHeight?(i=r.resizedHeight,a=r.resizedWidth):(i=t.height,a=t.width),void 0!==r&&(u=r),u.format="RGBA",u.height=i,u.width=a,void 0!==r){let r=d();r.width=a,r.height=i;let n=c(r);if(null!=n)n.putImageData(t,0,0),s=n.getImageData(0,0,a,i).data;else throw Error("Can not access image data")}else s=t.data}else if(o){if(void 0===r)throw Error("Please provide image config with format for Imagebitmap");let i=d();i.width=t.width,i.height=t.height;let n=c(i);if(null!=n){let r=t.height,i=t.width;return n.drawImage(t,0,0,i,r),s=n.getImageData(0,0,i,r).data,u.height=r,u.width=i,a(s,u)}throw Error("Can not access image data")}else if(l)return new Promise((r,s)=>{let i=d(),n=c(i);if(!t||!n)return s();let o=new Image;o.crossOrigin="Anonymous",o.src=t,o.onload=()=>{i.width=o.width,i.height=o.height,n.drawImage(o,0,0,i.width,i.height);let t=n.getImageData(0,0,i.width,i.height);u.height=i.height,u.width=i.width,r(a(t.data,u))}});else throw Error("Input data provided is not supported - aborted tensor creation");if(void 0!==s)return a(s,u);throw Error("Input data provided is not supported - aborted tensor creation")},o=(t,r)=>{let{width:s,height:a,download:n,dispose:o}=r;return new i.Tensor({location:"texture",type:"float32",texture:t,dims:[1,a,s,4],download:n,dispose:o})},l=(t,r)=>{let{dataType:s,dims:a,download:n,dispose:o}=r;return new i.Tensor({location:"gpu-buffer",type:s??"float32",gpuBuffer:t,dims:a,download:n,dispose:o})},u=(t,r)=>{let{dataType:s,dims:a,download:n,dispose:o}=r;return new i.Tensor({location:"ml-tensor",type:s??"float32",mlTensor:t,dims:a,download:n,dispose:o})},d=(t,r,s)=>new i.Tensor({location:"cpu-pinned",type:t,data:r,dims:s??[r.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(t,r,s)=>{s.r(r)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(t,r,s)=>{s.r(r),s.d(r,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>a,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>i,checkTypedArray:()=>o});let i=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),a=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),n=!1,o=()=>{if(!n){n=!0;let t="undefined"!=typeof BigInt64Array&&BigInt64Array.from,r="undefined"!=typeof BigUint64Array&&BigUint64Array.from,s="undefined"!=typeof Float16Array&&Float16Array.from;t&&(i.set("int64",BigInt64Array),a.set(BigInt64Array,"int64")),r&&(i.set("uint64",BigUint64Array),a.set(BigUint64Array,"uint64")),s?(i.set("float16",Float16Array),a.set(Float16Array,"float16")):i.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(t,r,s)=>{s.r(r),s.d(r,{Tensor:()=>l});var i=s("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),a=s("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),n=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),o=s("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class l{constructor(t,r,s){let i,a;if((0,n.checkTypedArray)(),"object"==typeof t&&"location"in t)switch(this.dataLocation=t.location,i=t.type,a=t.dims,t.location){case"cpu-pinned":{let r=n.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(i);if(!r)throw TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(t.data instanceof r))throw TypeError(`buffer should be of type ${r.name}`);this.cpuData=t.data;break}case"texture":if("float32"!==i)throw TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break;case"gpu-buffer":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint8"!==i&&"bool"!==i&&"uint4"!==i&&"int4"!==i)throw TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break;case"ml-tensor":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint64"!==i&&"int8"!==i&&"uint8"!==i&&"bool"!==i)throw TypeError(`unsupported type "${i}" to create tensor from MLTensor`);this.mlTensorData=t.mlTensor,this.downloader=t.download,this.disposer=t.dispose;break;default:throw Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,l;if("string"==typeof t){if(i=t,l=s,"string"===t){if(!Array.isArray(r))throw TypeError("A string tensor's data must be a string array.");o=r}else{let s=n.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(t);if(void 0===s)throw TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if("float16"===t&&s===Uint16Array||"uint4"===t||"int4"===t)throw TypeError(`Creating a ${t} tensor from number array is not supported. Please use ${s.name} as data.`);o="uint64"===t||"int64"===t?s.from(r,BigInt):s.from(r)}else if(r instanceof s)o=r;else if(r instanceof Uint8ClampedArray){if("uint8"===t)o=Uint8Array.from(r);else throw TypeError("A Uint8ClampedArray tensor's data must be type of uint8")}else throw TypeError(`A ${i} tensor's data must be type of ${s}`)}}else if(l=r,Array.isArray(t)){if(0===t.length)throw TypeError("Tensor type cannot be inferred from an empty array.");let r=typeof t[0];if("string"===r)i="string",o=t;else if("boolean"===r)i="bool",o=Uint8Array.from(t);else throw TypeError(`Invalid element type of data array: ${r}.`)}else if(t instanceof Uint8ClampedArray)i="uint8",o=Uint8Array.from(t);else{let r=n.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(t.constructor);if(void 0===r)throw TypeError(`Unsupported type for tensor data: ${t.constructor}.`);i=r,o=t}if(void 0===l)l=[o.length];else if(!Array.isArray(l))throw TypeError("A tensor's dims must be a number array");a=l,this.cpuData=o,this.dataLocation="cpu"}let l=(0,o.calculateSize)(a);if(this.cpuData&&l!==this.cpuData.length){if(("uint4"===i||"int4"===i)&&Math.ceil(l/2)===this.cpuData.length);else throw Error(`Tensor's size(${l}) does not match data length(${this.cpuData.length}).`)}this.type=i,this.dims=a,this.size=l}static async fromImage(t,r){return(0,a.tensorFromImage)(t,r)}static fromTexture(t,r){return(0,a.tensorFromTexture)(t,r)}static fromGpuBuffer(t,r){return(0,a.tensorFromGpuBuffer)(t,r)}static fromMLTensor(t,r){return(0,a.tensorFromMLTensor)(t,r)}static fromPinnedBuffer(t,r,s){return(0,a.tensorFromPinnedBuffer)(t,r,s)}toDataURL(t){return(0,i.tensorToDataURL)(this,t)}toImageData(t){return(0,i.tensorToImageData)(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}default:throw Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw Error("Cannot reshape a tensor that owns GPU resource.");return(0,o.tensorReshape)(this,t)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(t,r,s)=>{s.r(r),s.d(r,{calculateSize:()=>a,tensorReshape:()=>n});var i=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");let a=t=>{let r=1;for(let s=0;s<t.length;s++){let i=t[s];if("number"!=typeof i||!Number.isSafeInteger(i))throw TypeError(`dims[${s}] must be an integer, got: ${i}`);if(i<0)throw RangeError(`dims[${s}] must be a non-negative integer, got: ${i}`);r*=i}return r},n=(t,r)=>{switch(t.location){case"cpu":return new i.Tensor(t.type,t.data,r);case"cpu-pinned":return new i.Tensor({location:"cpu-pinned",data:t.data,type:t.type,dims:r});case"texture":return new i.Tensor({location:"texture",texture:t.texture,type:t.type,dims:r});case"gpu-buffer":return new i.Tensor({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:r});case"ml-tensor":return new i.Tensor({location:"ml-tensor",mlTensor:t.mlTensor,type:t.type,dims:r});default:throw Error(`tensorReshape: tensor location ${t.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(t,r,s)=>{s.r(r),s.d(r,{Tensor:()=>i});let i=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js").Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(t,r,s)=>{s.r(r),s.d(r,{TRACE:()=>a,TRACE_FUNC_BEGIN:()=>o,TRACE_FUNC_END:()=>l});var i=s("./node_modules/onnxruntime-common/dist/esm/env-impl.js");let a=(t,r)=>{(void 0===i.env.trace?!i.env.wasm.trace:!i.env.trace)||console.timeStamp(`${t}::ORT::${r}`)},n=(t,r)=>{let s=Error().stack?.split(/\r\n|\r|\n/g)||[],i=!1;for(let n=0;n<s.length;n++){if(i&&!s[n].includes("TRACE_FUNC")){let i=`FUNC_${t}::${s[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),a("CPU",i);return}s[n].includes("TRACE_FUNC")&&(i=!0)}},o=t=>{(void 0===i.env.trace?!i.env.wasm.trace:!i.env.trace)||n("BEGIN",t)},l=t=>{(void 0===i.env.trace?!i.env.wasm.trace:!i.env.trace)||n("END",t)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(t,r,s)=>{s.r(r),s.d(r,{TrainingSession:()=>n});var i=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),a=s("./node_modules/onnxruntime-common/dist/esm/tensor.js");class n{constructor(t,r,s){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=s}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw Error("This training session has no evalModel loaded.")}static async create(t,r){let s=t.evalModel||"",a=t.optimizerModel||"",[o,l]=await (0,i.resolveBackendAndExecutionProviders)(r||{});if(o.createTrainingSessionHandler)return new n(await o.createTrainingSessionHandler(t.checkpointState,t.trainModel,s,a,l),!!t.optimizerModel,!!t.evalModel);throw Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(t,r,s,i,n){let o={},l={};if("object"!=typeof s||null===s||s instanceof a.Tensor||Array.isArray(s))throw TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if("object"==typeof i){if(null===i)throw TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof a.Tensor)throw TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(0===i.length)throw TypeError("'fetches' cannot be an empty array.");for(let t of(u=!1,i)){if("string"!=typeof t)throw TypeError("'fetches' must be a string array or an object.");if(-1===r.indexOf(t))throw RangeError(`'fetches' contains invalid output name: ${t}.`);o[t]=null}if("object"==typeof n&&null!==n)l=n;else if(void 0!==n)throw TypeError("'options' must be an object.")}else{let t=!1,s=Object.getOwnPropertyNames(i);for(let n of r)if(-1!==s.indexOf(n)){let r=i[n];(null===r||r instanceof a.Tensor)&&(t=!0,u=!1,o[n]=r)}if(t){if("object"==typeof n&&null!==n)l=n;else if(void 0!==n)throw TypeError("'options' must be an object.")}else l=i}}else if(void 0!==i)throw TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let r of t)if(void 0===s[r])throw Error(`input '${r}' is missing in 'feeds'.`);if(u)for(let t of r)o[t]=null;return[o,l]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let s in t)if(Object.hasOwnProperty.call(t,s)){let i=t[s];i instanceof a.Tensor?r[s]=i:r[s]=new a.Tensor(i.type,i.data,i.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,s){let[i,a]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,s),n=await this.handler.runTrainStep(t,i,a);return this.convertHandlerReturnTypeToMapOfTensors(n)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,s){if(this.hasEvalModel){let[i,a]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,s),n=await this.handler.runEvalStep(t,i,a);return this.convertHandlerReturnTypeToMapOfTensors(n)}throw Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let s=await this.getParametersSize(r);if(t.length!==4*s)throw Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(t,r,s)=>{s.r(r),s.d(r,{TrainingSession:()=>i});let i=s("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js").TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(t,r,s)=>{s.r(r),s.d(r,{version:()=>i});let i="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96":(t,r,i)=>{i.r(r),i.d(r,{InferenceSession:()=>O,TRACE:()=>E,TRACE_FUNC_BEGIN:()=>A,TRACE_FUNC_END:()=>F,Tensor:()=>P,default:()=>uP,env:()=>h,registerBackend:()=>o});var a,n,o,l,u,d,c,p,h,m,f,g,_,b,y,w,x,v,M,T,k,$,C,S,P,E,I,A,F,z,O,L=Object.defineProperty,B=Object.getOwnPropertyDescriptor,N=Object.getOwnPropertyNames,D=Object.prototype.hasOwnProperty,R=s(2406),j=(t,r)=>()=>(t&&(r=t(t=0)),r),V=(t,r)=>{for(var s in r)L(t,s,{get:r[s],enumerable:!0})},G=(t,r,s,i)=>{if(r&&"object"==typeof r||"function"==typeof r)for(let a of N(r))D.call(t,a)||a===s||L(t,a,{get:()=>r[a],enumerable:!(i=B(r,a))||i.enumerable});return t},U=t=>G(L({},"__esModule",{value:!0}),t),q=j(()=>{a=new Map,n=[],o=(t,r,s)=>{if(r&&"function"==typeof r.init&&"function"==typeof r.createInferenceSessionHandler){let i=a.get(t);if(void 0===i)a.set(t,{backend:r,priority:s});else{if(i.priority>s)return;if(i.priority===s&&i.backend!==r)throw Error(`cannot register backend "${t}" using priority ${s}`)}if(s>=0){let r=n.indexOf(t);-1!==r&&n.splice(r,1);for(let r=0;r<n.length;r++)if(a.get(n[r]).priority<=s){n.splice(r,0,t);return}n.push(t)}return}throw TypeError("not a valid backend")},l=async t=>{let r=a.get(t);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let s=!!r.initPromise;try{return s||(r.initPromise=r.backend.init(t)),await r.initPromise,r.initialized=!0,r.backend}catch(t){return s||(r.error=`${t}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},u=async t=>{let r=t.executionProviders||[],s=r.map(t=>"string"==typeof t?t:t.name),i=0===s.length?n:s,a,o=[],u=new Set;for(let t of i){let r=await l(t);"string"==typeof r?o.push({name:t,err:r}):(a||(a=r),a===r&&u.add(t))}if(!a)throw Error(`no available backend found. ERR: ${o.map(t=>`[${t.name}] ${t.err}`).join(", ")}`);for(let{name:t,err:r}of o)s.includes(t)&&console.warn(`removing requested execution provider "${t}" from session options because it is not available: ${r}`);let d=r.filter(t=>u.has("string"==typeof t?t:t.name));return[a,new Proxy(t,{get:(t,r)=>"executionProviders"===r?d:Reflect.get(t,r)})]}}),W=j(()=>{q()}),H=j(()=>{d="1.21.0-dev.20250206-d981b153d3"}),K=j(()=>{H(),c="warning",Object.defineProperty(p={wasm:{},webgl:{},webgpu:{},versions:{common:d},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw Error(`Unsupported logging level: ${e}`);c=e}},get logLevel(){return c}},"logLevel",{enumerable:!0})}),Q=j(()=>{K(),h=p}),X=j(()=>{m=(t,r)=>{let s="u">typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);s.width=t.dims[3],s.height=t.dims[2];let i=s.getContext("2d");if(null!=i){let a,n;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(a=t.dims[2],n=t.dims[3]):(a=t.dims[3],n=t.dims[2]);let o=r?.format!==void 0?r.format:"RGB",l=r?.norm,u,d;void 0===l||void 0===l.mean?u=[255,255,255,255]:"number"==typeof l.mean?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],0],void 0!==l.mean[3]&&(u[3]=l.mean[3])),void 0===l||void 0===l.bias?d=[0,0,0,0]:"number"==typeof l.bias?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(d[3]=l.bias[3]));let c=n*a,p=0,h=c,m=2*c,f=-1;"RGBA"===o?(p=0,h=c,m=2*c,f=3*c):"RGB"===o?(p=0,h=c,m=2*c):"RBG"===o&&(p=0,m=c,h=2*c);for(let r=0;r<n;r++)for(let s=0;s<a;s++){let a=(t.data[p++]-d[0])*u[0],n=(t.data[h++]-d[1])*u[1],o=(t.data[m++]-d[2])*u[2],l=-1===f?255:(t.data[f++]-d[3])*u[3];i.fillStyle="rgba("+a+","+n+","+o+","+l+")",i.fillRect(s,r,1,1)}if("toDataURL"in s)return s.toDataURL();throw Error("toDataURL is not supported")}throw Error("Can not access image data")},f=(t,r)=>{let s="u">typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),i;if(null!=s){let a,n,o;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(a=t.dims[2],n=t.dims[1],o=t.dims[3]):(a=t.dims[3],n=t.dims[2],o=t.dims[1]);let l=void 0!==r&&void 0!==r.format?r.format:"RGB",u=r?.norm,d,c;void 0===u||void 0===u.mean?d=[255,255,255,255]:"number"==typeof u.mean?d=[u.mean,u.mean,u.mean,u.mean]:(d=[u.mean[0],u.mean[1],u.mean[2],255],void 0!==u.mean[3]&&(d[3]=u.mean[3])),void 0===u||void 0===u.bias?c=[0,0,0,0]:"number"==typeof u.bias?c=[u.bias,u.bias,u.bias,u.bias]:(c=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(c[3]=u.bias[3]));let p=n*a;if(void 0!==r&&(void 0!==r.format&&4===o&&"RGBA"!==r.format||3===o&&"RGB"!==r.format&&"BGR"!==r.format))throw Error("Tensor format doesn't match input tensor dims");let h=0,m=1,f=2,g=3,_=0,b=p,y=2*p,w=-1;"RGBA"===l?(_=0,b=p,y=2*p,w=3*p):"RGB"===l?(_=0,b=p,y=2*p):"RBG"===l&&(_=0,y=p,b=2*p),i=s.createImageData(a,n);for(let r=0;r<n*a;h+=4,m+=4,f+=4,g+=4,r++)i.data[h]=(t.data[_++]-c[0])*d[0],i.data[m]=(t.data[b++]-c[1])*d[1],i.data[f]=(t.data[y++]-c[2])*d[2],i.data[g]=-1===w?255:(t.data[w++]-c[3])*d[3]}else throw Error("Can not access image data");return i}}),J=j(()=>{ee(),g=(t,r)=>{if(void 0===t)throw Error("Image buffer must be defined");if(void 0===r.height||void 0===r.width)throw Error("Image height and width must be defined");if("NHWC"===r.tensorLayout)throw Error("NHWC Tensor layout is not supported yet");let{height:s,width:i}=r,a=r.norm??{mean:255,bias:0},n,o;n="number"==typeof a.mean?[a.mean,a.mean,a.mean,a.mean]:[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],o="number"==typeof a.bias?[a.bias,a.bias,a.bias,a.bias]:[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];let l=void 0!==r.format?r.format:"RGBA",u=void 0!==r.tensorFormat&&void 0!==r.tensorFormat?r.tensorFormat:"RGB",d=s*i,c=new Float32Array("RGBA"===u?4*d:3*d),p=4,h=0,m=1,f=2,g=3,_=0,b=d,y=2*d,w=-1;"RGB"===l&&(p=3,h=0,m=1,f=2,g=-1),"RGBA"===u?w=3*d:"RBG"===u?(_=0,y=d,b=2*d):"BGR"===u&&(y=0,b=d,_=2*d);for(let r=0;r<d;r++,h+=p,f+=p,m+=p,g+=p)c[_++]=(t[h]+o[0])/n[0],c[b++]=(t[m]+o[1])/n[1],c[y++]=(t[f]+o[2])/n[2],-1!==w&&-1!==g&&(c[w++]=(t[g]+o[3])/n[3]);return"RGBA"===u?new S("float32",c,[1,4,s,i]):new S("float32",c,[1,3,s,i])},_=async(t,r)=>{let s="u">typeof HTMLImageElement&&t instanceof HTMLImageElement,i="u">typeof ImageData&&t instanceof ImageData,a="u">typeof ImageBitmap&&t instanceof ImageBitmap,n="string"==typeof t,o,l=r??{},u=()=>{if("u">typeof document)return document.createElement("canvas");if("u">typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw Error("Canvas is not supported")},d=t=>"u">typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||t instanceof OffscreenCanvas?t.getContext("2d"):null;if(s){let s=u();s.width=t.width,s.height=t.height;let i=d(s);if(null!=i){let s=t.height,a=t.width;if(void 0!==r&&void 0!==r.resizedHeight&&void 0!==r.resizedWidth&&(s=r.resizedHeight,a=r.resizedWidth),void 0!==r){if(l=r,void 0!==r.tensorFormat)throw Error("Image input config format must be RGBA for HTMLImageElement");l.tensorFormat="RGBA",l.height=s,l.width=a}else l.tensorFormat="RGBA",l.height=s,l.width=a;i.drawImage(t,0,0),o=i.getImageData(0,0,a,s).data}else throw Error("Can not access image data")}else if(i){let s,i;if(void 0!==r&&void 0!==r.resizedWidth&&void 0!==r.resizedHeight?(s=r.resizedHeight,i=r.resizedWidth):(s=t.height,i=t.width),void 0!==r&&(l=r),l.format="RGBA",l.height=s,l.width=i,void 0!==r){let r=u();r.width=i,r.height=s;let a=d(r);if(null!=a)a.putImageData(t,0,0),o=a.getImageData(0,0,i,s).data;else throw Error("Can not access image data")}else o=t.data}else if(a){if(void 0===r)throw Error("Please provide image config with format for Imagebitmap");let s=u();s.width=t.width,s.height=t.height;let i=d(s);if(null!=i){let r=t.height,s=t.width;return i.drawImage(t,0,0,s,r),o=i.getImageData(0,0,s,r).data,l.height=r,l.width=s,g(o,l)}throw Error("Can not access image data")}else{if(n)return new Promise((r,s)=>{let i=u(),a=d(i);if(!t||!a)return s();let n=new Image;n.crossOrigin="Anonymous",n.src=t,n.onload=()=>{i.width=n.width,i.height=n.height,a.drawImage(n,0,0,i.width,i.height);let t=a.getImageData(0,0,i.width,i.height);l.height=i.height,l.width=i.width,r(g(t.data,l))}});throw Error("Input data provided is not supported - aborted tensor creation")}if(void 0!==o)return g(o,l);throw Error("Input data provided is not supported - aborted tensor creation")},b=(t,r)=>{let{width:s,height:i,download:a,dispose:n}=r;return new S({location:"texture",type:"float32",texture:t,dims:[1,i,s,4],download:a,dispose:n})},y=(t,r)=>{let{dataType:s,dims:i,download:a,dispose:n}=r;return new S({location:"gpu-buffer",type:s??"float32",gpuBuffer:t,dims:i,download:a,dispose:n})},w=(t,r)=>{let{dataType:s,dims:i,download:a,dispose:n}=r;return new S({location:"ml-tensor",type:s??"float32",mlTensor:t,dims:i,download:a,dispose:n})},x=(t,r,s)=>new S({location:"cpu-pinned",type:t,data:r,dims:s??[r.length]})}),Y=j(()=>{v=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),M=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),T=!1,k=()=>{if(!T){T=!0;let t="u">typeof BigInt64Array&&BigInt64Array.from,r="u">typeof BigUint64Array&&BigUint64Array.from,s="u">typeof Float16Array&&Float16Array.from;t&&(v.set("int64",BigInt64Array),M.set(BigInt64Array,"int64")),r&&(v.set("uint64",BigUint64Array),M.set(BigUint64Array,"uint64")),s?(v.set("float16",Float16Array),M.set(Float16Array,"float16")):v.set("float16",Uint16Array)}}}),Z=j(()=>{ee(),$=t=>{let r=1;for(let s=0;s<t.length;s++){let i=t[s];if("number"!=typeof i||!Number.isSafeInteger(i))throw TypeError(`dims[${s}] must be an integer, got: ${i}`);if(i<0)throw RangeError(`dims[${s}] must be a non-negative integer, got: ${i}`);r*=i}return r},C=(t,r)=>{switch(t.location){case"cpu":return new S(t.type,t.data,r);case"cpu-pinned":return new S({location:"cpu-pinned",data:t.data,type:t.type,dims:r});case"texture":return new S({location:"texture",texture:t.texture,type:t.type,dims:r});case"gpu-buffer":return new S({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:r});case"ml-tensor":return new S({location:"ml-tensor",mlTensor:t.mlTensor,type:t.type,dims:r});default:throw Error(`tensorReshape: tensor location ${t.location} is not supported`)}}}),ee=j(()=>{X(),J(),Y(),Z(),S=class{constructor(t,r,s){let i,a;if(k(),"object"==typeof t&&"location"in t)switch(this.dataLocation=t.location,i=t.type,a=t.dims,t.location){case"cpu-pinned":{let r=v.get(i);if(!r)throw TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(t.data instanceof r))throw TypeError(`buffer should be of type ${r.name}`);this.cpuData=t.data;break}case"texture":if("float32"!==i)throw TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break;case"gpu-buffer":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint8"!==i&&"bool"!==i&&"uint4"!==i&&"int4"!==i)throw TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break;case"ml-tensor":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint64"!==i&&"int8"!==i&&"uint8"!==i&&"bool"!==i&&"uint4"!==i&&"int4"!==i)throw TypeError(`unsupported type "${i}" to create tensor from MLTensor`);this.mlTensorData=t.mlTensor,this.downloader=t.download,this.disposer=t.dispose;break;default:throw Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let n,o;if("string"==typeof t){if(i=t,o=s,"string"===t){if(!Array.isArray(r))throw TypeError("A string tensor's data must be a string array.");n=r}else{let s=v.get(t);if(void 0===s)throw TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if("float16"===t&&s===Uint16Array||"uint4"===t||"int4"===t)throw TypeError(`Creating a ${t} tensor from number array is not supported. Please use ${s.name} as data.`);n="uint64"===t||"int64"===t?s.from(r,BigInt):s.from(r)}else if(r instanceof s)n=r;else if(r instanceof Uint8ClampedArray){if("uint8"===t)n=Uint8Array.from(r);else throw TypeError("A Uint8ClampedArray tensor's data must be type of uint8")}else throw TypeError(`A ${i} tensor's data must be type of ${s}`)}}else if(o=r,Array.isArray(t)){if(0===t.length)throw TypeError("Tensor type cannot be inferred from an empty array.");let r=typeof t[0];if("string"===r)i="string",n=t;else if("boolean"===r)i="bool",n=Uint8Array.from(t);else throw TypeError(`Invalid element type of data array: ${r}.`)}else if(t instanceof Uint8ClampedArray)i="uint8",n=Uint8Array.from(t);else{let r=M.get(t.constructor);if(void 0===r)throw TypeError(`Unsupported type for tensor data: ${t.constructor}.`);i=r,n=t}if(void 0===o)o=[n.length];else if(!Array.isArray(o))throw TypeError("A tensor's dims must be a number array");a=o,this.cpuData=n,this.dataLocation="cpu"}let n=$(a);if(this.cpuData&&n!==this.cpuData.length&&!(("uint4"===i||"int4"===i)&&Math.ceil(n/2)===this.cpuData.length))throw Error(`Tensor's size(${n}) does not match data length(${this.cpuData.length}).`);this.type=i,this.dims=a,this.size=n}static async fromImage(t,r){return _(t,r)}static fromTexture(t,r){return b(t,r)}static fromGpuBuffer(t,r){return y(t,r)}static fromMLTensor(t,r){return w(t,r)}static fromPinnedBuffer(t,r,s){return x(t,r,s)}toDataURL(t){return m(this,t)}toImageData(t){return f(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}default:throw Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw Error("Cannot reshape a tensor that owns GPU resource.");return C(this,t)}}}),et=j(()=>{ee(),P=S}),er=j(()=>{K(),E=(t,r)=>{(typeof p.trace>"u"?p.wasm.trace:p.trace)&&console.timeStamp(`${t}::ORT::${r}`)},I=(t,r)=>{let s=Error().stack?.split(/\r\n|\r|\n/g)||[],i=!1;for(let a=0;a<s.length;a++){if(i&&!s[a].includes("TRACE_FUNC")){let i=`FUNC_${t}::${s[a].trim().split(" ")[1]}`;r&&(i+=`::${r}`),E("CPU",i);return}s[a].includes("TRACE_FUNC")&&(i=!0)}},A=t=>{(typeof p.trace>"u"?p.wasm.trace:p.trace)&&I("BEGIN",t)},F=t=>{(typeof p.trace>"u"?p.wasm.trace:p.trace)&&I("END",t)}}),es=j(()=>{q(),et(),er(),z=class t{constructor(t){this.handler=t}async run(t,r,s){A();let i={},a={};if("object"!=typeof t||null===t||t instanceof P||Array.isArray(t))throw TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let n=!0;if("object"==typeof r){if(null===r)throw TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof P)throw TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw TypeError("'fetches' cannot be an empty array.");for(let t of(n=!1,r)){if("string"!=typeof t)throw TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(t))throw RangeError(`'fetches' contains invalid output name: ${t}.`);i[t]=null}if("object"==typeof s&&null!==s)a=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else{let t=!1,o=Object.getOwnPropertyNames(r);for(let s of this.outputNames)if(-1!==o.indexOf(s)){let a=r[s];(null===a||a instanceof P)&&(t=!0,n=!1,i[s]=a)}if(t){if("object"==typeof s&&null!==s)a=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else a=r}}else if("u">typeof r)throw TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let r of this.inputNames)if(typeof t[r]>"u")throw Error(`input '${r}' is missing in 'feeds'.`);if(n)for(let t of this.outputNames)i[t]=null;let o=await this.handler.run(t,i,a),l={};for(let t in o)if(Object.hasOwnProperty.call(o,t)){let r=o[t];r instanceof P?l[t]=r:l[t]=new P(r.type,r.data,r.dims)}return F(),l}async release(){return this.handler.dispose()}static async create(r,s,i,a){A();let n,o={};if("string"==typeof r){if(n=r,"object"==typeof s&&null!==s)o=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,"object"==typeof s&&null!==s)o=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||"u">typeof SharedArrayBuffer&&r instanceof SharedArrayBuffer){let t=0,l=r.byteLength;if("object"==typeof s&&null!==s)o=s;else if("number"==typeof s){if(!Number.isSafeInteger(t=s))throw RangeError("'byteOffset' must be an integer.");if(t<0||t>=r.byteLength)throw RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(l=r.byteLength-t,"number"==typeof i){if(!Number.isSafeInteger(l=i))throw RangeError("'byteLength' must be an integer.");if(l<=0||t+l>r.byteLength)throw RangeError(`'byteLength' is out of range (0, ${r.byteLength-t}].`);if("object"==typeof a&&null!==a)o=a;else if("u">typeof a)throw TypeError("'options' must be an object.")}else if("u">typeof i)throw TypeError("'byteLength' must be a number.")}else if("u">typeof s)throw TypeError("'options' must be an object.");n=new Uint8Array(r,t,l)}else throw TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[l,d]=await u(o),c=await l.createInferenceSessionHandler(n,d);return F(),new t(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),ei=j(()=>{es(),O=z}),ea=j(()=>{}),en=j(()=>{}),eo=j(()=>{}),el=j(()=>{}),eu={};V(eu,{InferenceSession:()=>O,TRACE:()=>E,TRACE_FUNC_BEGIN:()=>A,TRACE_FUNC_END:()=>F,Tensor:()=>P,env:()=>h,registerBackend:()=>o});var ed=j(()=>{W(),Q(),ei(),et(),ea(),en(),er(),eo(),el()}),ec=j(()=>{}),ep={};V(ep,{default:()=>ef});var eh,em,ef,eg=j(()=>{ux(),oj(),oR(),eh="ort-wasm-proxy-worker",(em=globalThis.self?.name===eh)&&(self.onmessage=t=>{let{type:r,in:s}=t.data;try{switch(r){case"init-wasm":eD(s.wasm).then(()=>{lY(s).then(()=>{postMessage({type:r})},t=>{postMessage({type:r,err:t})})},t=>{postMessage({type:r,err:t})});break;case"init-ep":{let{epName:t,env:i}=s;lZ(i,t).then(()=>{postMessage({type:r})},t=>{postMessage({type:r,err:t})});break}case"copy-from":{let{buffer:t}=s,i=l2(t);postMessage({type:r,out:i});break}case"create":{let{model:t,options:i}=s;l3(t,i).then(t=>{postMessage({type:r,out:t})},t=>{postMessage({type:r,err:t})});break}case"release":l4(s),postMessage({type:r});break;case"run":{let{sessionId:t,inputIndices:i,inputs:a,outputIndices:n,options:o}=s;l8(t,i,a,n,Array(n.length).fill(null),o).then(t=>{t.some(t=>"cpu"!==t[3])?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:t},l9([...a,...t]))},t=>{postMessage({type:r,err:t})});break}case"end-profiling":l5(s),postMessage({type:r})}}catch(t){postMessage({type:r,err:t})}}),ef=em?null:t=>new Worker(t??ev,{type:"module",name:eh})}),e_={};V(e_,{default:()=>ew});var eb,ey,ew,ex,ev,eM,eT,ek,e$,eC,eS,eP,eE,eI,eA,eF,ez,eO,eL,eB,eN,eD,eR,ej,eV,eG,eU,eq,eW,eH,eK,eQ,eX,eJ,eY,eZ,e0,e1,e2,e3,e4,e6,e8,e5,e9,e7,te,tt,tr,ts,ti,ta,tn,to,tl,tu,td,tc,tp,th,tm,tf,tg,t_,tb,ty,tw,tx,tv,tM,tT,tk,t$,tC,tS,tP,tE,tI,tA,tF,tz,tO,tL,tB,tN,tD,tR,tj,tV,tG,tU,tq,tW,tH,tK,tQ,tX,tJ,tY,tZ,t0,t1,t2,t3,t4,t6,t8,t5,t9,t7,re,rt,rr,rs,ri,ra,rn,ro,rl,ru,rd,rc,rp,rh,rm,rf,rg,r_,rb,ry,rw,rx,rv,rM,rT,rk,r$,rC,rS,rP,rE,rI,rA,rF,rz,rO,rL,rB,rN,rD,rR,rj,rV,rG,rU,rq,rW,rH,rK,rQ,rX,rJ,rY,rZ,r0,r1,r2,r3,r4,r6,r8,r5,r9,r7,se,st,sr,ss,si,sa,sn,so,sl,su,sd,sc,sp,sh,sm,sf,sg,s_,sb,sy,sw,sx,sv,sM,sT,sk,s$,sC,sS,sP,sE,sI,sA,sF,sz,sO,sL,sB,sN,sD,sR,sj,sV,sG,sU,sq,sW,sH,sK,sQ,sX,sJ,sY,sZ,s0,s1,s2,s3,s4,s6,s8,s5,s9,s7,ie,it,ir,is,ii,ia,io,il,iu,id,ic,ip,ih,im,ig,i_,ib,iy,iw,ix,iv,iM,iT,ik,i$,iC,iS,iP,iE,iI,iA,iF,iz,iO,iL,iB,iN,iD,iR,ij,iV,iG,iU,iq,iW,iH,iK,iQ,iX,iJ,iY,iZ,i0,i1,i2,i3,i4,i6,i8,i5,i9,i7,ae,at,ar,as,ai,aa,an,ao,al,au,ad,ac,ap,ah,am,af,ag,a_,ab,ay,aw,ax,av,aM,aT,ak,a$,aC,aS,aP,aE,aI,aA,aF,az,aO,aL,aB,aN,aD,aR,aj,aV,aG,aU,aq,aW,aH,aK,aQ,aX,aJ,aY,aZ,a0,a1,a2,a3,a4,a6,a8,a5,a9,a7,ne,nt,nr,ns,ni,na,nn,no,nl,nu,nd,nc,np,nh,nm,nf,ng,n_,nb,ny,nw,nx,nv,nM,nT,nk,n$,nC,nS,nP,nE,nI,nA,nF,nz,nO,nL,nB,nN,nD,nR,nj,nV,nG,nU,nq,nW,nH,nK,nQ,nX,nJ,nY,nZ,n0,n1,n2,n3,n4,n6,n8,n5,n9,n7,oe,ot,or,os,oi,oa,on,oo,ol,ou,od,oc,op,oh,om,of,og,o_,ob,oy,ow,ox,ov,oM,oT,ok,o$,oC,oS,oP,oE,oI,oA,oF,oz,oO,oL,oB,oN,oD=j(()=>{eb="file:///D:/NextJs%20Apps%20(To%20BUILD)/Remove%20Background%20for%20images/remover/node_modules/@huggingface/transformers/dist/transformers.js",ew=ey=async function(t={}){function r(){return A.buffer!=O.buffer&&W(),O}function s(){return A.buffer!=O.buffer&&W(),L}function a(){return A.buffer!=O.buffer&&W(),B}function n(){return A.buffer!=O.buffer&&W(),N}function o(){return A.buffer!=O.buffer&&W(),D}function l(){return A.buffer!=O.buffer&&W(),R}function u(){return A.buffer!=O.buffer&&W(),j}function d(){return A.buffer!=O.buffer&&W(),U}var c,p,h=Object.assign({},t),m=new Promise((t,r)=>{c=t,p=r}),f="object"==typeof window,g="function"==typeof importScripts,_=g&&"em-pthread"==self.name;h.mountExternalData=(t,r)=>{t.startsWith("./")&&(t=t.substring(2)),(h.Fb||(h.Fb=new Map)).set(t,r)},h.unmountExternalData=()=>{delete h.Fb};var b=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let y=()=>{let t=(t,r,s)=>(...i)=>{let a=tD,n=r?.();i=t(...i);let o=r?.();return n!==o&&(t=o,s(n),r=s=null),tD!=a?new Promise((t,r)=>{tq={resolve:t,reject:r}}):i},r=t=>async(...r)=>{try{if(h.Gb)throw Error("Session already started");let s=h.Gb={hc:r[0],errors:[]},i=await t(...r);if(h.Gb!==s)throw Error("Session mismatch");h.Hb?.flush();let a=s.errors;if(0<a.length){let t=await Promise.all(a);if(t=t.filter(t=>t),0<t.length)throw Error(t.join(`
`))}return i}finally{h.Gb=null}};h._OrtCreateSession=t(h._OrtCreateSession,()=>h._OrtCreateSession,t=>h._OrtCreateSession=t),h._OrtRun=r(t(h._OrtRun,()=>h._OrtRun,t=>h._OrtRun=t)),h._OrtRunWithBinding=r(t(h._OrtRunWithBinding,()=>h._OrtRunWithBinding,t=>h._OrtRunWithBinding=t)),h._OrtBindInput=t(h._OrtBindInput,()=>h._OrtBindInput,t=>h._OrtBindInput=t),y=void 0};h.jsepInit=(t,r)=>{if(y?.(),"webgpu"===t){[h.Hb,h.Vb,h.Zb,h.Ob,h.Yb,h.kb,h.$b,h.cc,h.Wb,h.Xb,h.ac]=r;let t=h.Hb;h.jsepRegisterBuffer=(r,s,i,a)=>t.registerBuffer(r,s,i,a),h.jsepGetBuffer=r=>t.getBuffer(r),h.jsepCreateDownloader=(r,s,i)=>t.createDownloader(r,s,i),h.jsepOnCreateSession=r=>{t.onCreateSession(r)},h.jsepOnReleaseSession=r=>{t.onReleaseSession(r)},h.jsepOnRunStart=r=>t.onRunStart(r),h.dc=(r,s)=>{t.upload(r,s)}}else if("webnn"===t){[h.Hb,h.bc,h.Pb,h.jsepEnsureTensor,h.ec,h.jsepDownloadTensor]=r,h.jsepReleaseTensorId=h.Pb;let t=h.Hb;h.jsepOnRunStart=r=>t.onRunStart(r),h.jsepRegisterMLContext=(r,s)=>{t.registerMLContext(r,s)},h.jsepOnReleaseSession=r=>{t.onReleaseSession(r)},h.jsepCreateMLTensorDownloader=(r,s)=>t.createMLTensorDownloader(r,s),h.jsepRegisterMLTensor=(r,s,i)=>t.registerMLTensor(r,s,i),h.jsepCreateMLContext=r=>t.createMLContext(r),h.jsepRegisterMLConstant=(r,s,i,a,n)=>t.registerMLConstant(r,s,i,a,n,h.Fb)}};var w,x,v=Object.assign({},h),M=(t,r)=>{throw r},T="";(f||g)&&(g?T=self.location.href:"u">typeof document&&document.currentScript&&(T=document.currentScript.src),eb&&(T=eb),T=T.startsWith("blob:")?"":T.substr(0,T.replace(/[?#].*/,"").lastIndexOf("/")+1),g&&(x=t=>{var r=new XMLHttpRequest;return r.open("GET",t,!1),r.responseType="arraybuffer",r.send(null),new Uint8Array(r.response)}),w=(t,r,s)=>{var i=new XMLHttpRequest;i.open("GET",t,!0),i.responseType="arraybuffer",i.onload=()=>{200==i.status||0==i.status&&i.response?r(i.response):s()},i.onerror=s,i.send(null)});var k,$=console.log.bind(console),C=console.error.bind(console),S=$,P=C;if(Object.assign(h,v),v=null,_){let t=function(r){try{var s=r.data,i=s.cmd;if("load"===i){let r=[];for(let i of(self.onmessage=t=>r.push(t),self.startWorker=()=>{for(let s of(postMessage({cmd:"loaded"}),r))t(s);self.onmessage=t},s.handlers))h[i]&&!h[i].proxy||(h[i]=(...t)=>{postMessage({Nb:"callHandler",pc:i,args:t})},"print"==i&&(S=h[i]),"printErr"==i&&(P=h[i]));A=s.wasmMemory,W(),E(s.wasmModule)}else if("run"===i){r4(s.pthread_ptr,0,0,1,0,0),t$(s.pthread_ptr),eS(),eT(),I||(rZ(),I=!0);try{eP(s.start_routine,s.arg)}catch(t){if("unwind"!=t)throw t}}else"cancel"===i?r1()&&r9(-1):"setimmediate"!==s.target&&("checkMailbox"===i?I&&tC():i&&(P(`worker: received unknown command ${i}`),P(s)))}catch(t){throw r6(),t}};var E,I=!1;P=function(...t){console.error(t=t.join(" "))},self.alert=function(...t){postMessage({Nb:"alert",text:t.join(" "),rc:r1()})},h.instantiateWasm=(t,r)=>new Promise(t=>{E=s=>{r(s=new WebAssembly.Instance(s,en())),t()}}),self.onunhandledrejection=t=>{throw t.reason||t},self.onmessage=t}h.wasmBinary&&(k=h.wasmBinary);var A,F,z,O,L,B,N,D,R,j,V,G,U,q=!1;function W(){var t=A.buffer;h.HEAP8=O=new Int8Array(t),h.HEAP16=B=new Int16Array(t),h.HEAPU8=L=new Uint8Array(t),h.HEAPU16=N=new Uint16Array(t),h.HEAP32=D=new Int32Array(t),h.HEAPU32=R=new Uint32Array(t),h.HEAPF32=j=new Float32Array(t),h.HEAPF64=U=new Float64Array(t),h.HEAP64=V=new BigInt64Array(t),h.HEAPU64=G=new BigUint64Array(t)}if(!_){if(!((A=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof b))throw P("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");W()}var H=[],K=[],Q=[],X=0,J=null,Y=null;function Z(){if(0==--X&&(null!==J&&(clearInterval(J),J=null),Y)){var t=Y;Y=null,t()}}function ee(t){throw P(t="Aborted("+t+")"),q=!0,z=1,t=new WebAssembly.RuntimeError(t+". Build with -sASSERTIONS for more info."),p(t),t}var et,er=t=>t.startsWith("data:application/octet-stream;base64,"),es=t=>t.startsWith("file://");function ei(t){if(t==et&&k)return new Uint8Array(k);if(x)return x(t);throw"both async and sync fetching of the wasm failed"}function ea(t,r,s){return(function(t){if(!k&&(f||g)){if("function"==typeof fetch&&!es(t))return fetch(t,{credentials:"same-origin"}).then(r=>{if(!r.ok)throw`failed to load wasm binary file at '${t}'`;return r.arrayBuffer()}).catch(()=>ei(t));if(w)return new Promise((r,s)=>{w(t,t=>r(new Uint8Array(t)),s)})}return Promise.resolve().then(()=>ei(t))})(t).then(t=>WebAssembly.instantiate(t,r)).then(s,t=>{P(`failed to asynchronously prepare wasm: ${t}`),ee(t)})}function en(){return{a:{O:eu,Aa:el,b:eI,aa:eF,B:eB,qa:eN,Y:eV,_:eG,ra:eU,oa:eq,ha:eW,na:eH,L:eK,Z:eQ,W:eX,pa:eJ,X:eY,va:e1,F:e9,Q:te,P:tl,E:td,u:tc,q:tp,G:th,A:tx,R:tv,ua:tM,ka:tT,U:tS,ba:tE,H:tI,ja:t$,ta:tA,t:tO,Ba:tL,x:tK,o:tX,m:tZ,c:ts,n:t1,k:t6,w:t8,p:t5,f:t9,s:t7,l:re,e:rt,j:rr,i:rs,g:ri,d:ra,ea:rn,fa:rd,ga:rc,ca:rp,da:rh,T:rm,h:r_,D:rb,I:ry,M:rw,y:rx,sa:rM,V:rT,v:rv,z:rk,N:r$,S:rC,za:rI,ya:rA,la:rL,ma:rB,$:e_,C:rN,K:rD,ia:rR,J:rV,a:A,xa:ef,wa:rW,r:rH}}}var eo={916868:(t,r,i,a,n)=>{if(void 0===h||!h.Fb)return 1;if((t=eL(Number(t>>>0))).startsWith("./")&&(t=t.substring(2)),!(t=h.Fb.get(t)))return 2;if(r=Number(r>>>0),i=Number(i>>>0),a=Number(a>>>0),r+i>t.byteLength)return 3;try{let o=t.subarray(r,r+i);switch(n){case 0:s().set(o,a>>>0);break;case 1:h.dc(a,o);break;default:return 4}return 0}catch{return 4}},917583:(t,r,i)=>{h.ec(t,s().subarray(r>>>0,r+i>>>0))},917646:()=>h.bc(),917687:t=>{h.Pb(t)},917723:()=>{h.Wb()},917754:()=>{h.Xb()},917783:()=>{h.ac()},917808:t=>h.Vb(t),917841:t=>h.Zb(t),917873:(t,r,s)=>{h.Ob(Number(t),Number(r),Number(s),!0)},917936:(t,r,s)=>{h.Ob(Number(t),Number(r),Number(s))},917993:()=>"u">typeof wasmOffsetConverter,918050:t=>{h.kb("Abs",t,void 0)},918101:t=>{h.kb("Neg",t,void 0)},918152:t=>{h.kb("Floor",t,void 0)},918205:t=>{h.kb("Ceil",t,void 0)},918257:t=>{h.kb("Reciprocal",t,void 0)},918315:t=>{h.kb("Sqrt",t,void 0)},918367:t=>{h.kb("Exp",t,void 0)},918418:t=>{h.kb("Erf",t,void 0)},918469:t=>{h.kb("Sigmoid",t,void 0)},918524:(t,r,s)=>{h.kb("HardSigmoid",t,{alpha:r,beta:s})},918603:t=>{h.kb("Log",t,void 0)},918654:t=>{h.kb("Sin",t,void 0)},918705:t=>{h.kb("Cos",t,void 0)},918756:t=>{h.kb("Tan",t,void 0)},918807:t=>{h.kb("Asin",t,void 0)},918859:t=>{h.kb("Acos",t,void 0)},918911:t=>{h.kb("Atan",t,void 0)},918963:t=>{h.kb("Sinh",t,void 0)},919015:t=>{h.kb("Cosh",t,void 0)},919067:t=>{h.kb("Asinh",t,void 0)},919120:t=>{h.kb("Acosh",t,void 0)},919173:t=>{h.kb("Atanh",t,void 0)},919226:t=>{h.kb("Tanh",t,void 0)},919278:t=>{h.kb("Not",t,void 0)},919329:(t,r,s)=>{h.kb("Clip",t,{min:r,max:s})},919398:t=>{h.kb("Clip",t,void 0)},919450:(t,r)=>{h.kb("Elu",t,{alpha:r})},919508:t=>{h.kb("Gelu",t,void 0)},919560:t=>{h.kb("Relu",t,void 0)},919612:(t,r)=>{h.kb("LeakyRelu",t,{alpha:r})},919676:(t,r)=>{h.kb("ThresholdedRelu",t,{alpha:r})},919746:(t,r)=>{h.kb("Cast",t,{to:r})},919804:t=>{h.kb("Add",t,void 0)},919855:t=>{h.kb("Sub",t,void 0)},919906:t=>{h.kb("Mul",t,void 0)},919957:t=>{h.kb("Div",t,void 0)},920008:t=>{h.kb("Pow",t,void 0)},920059:t=>{h.kb("Equal",t,void 0)},920112:t=>{h.kb("Greater",t,void 0)},920167:t=>{h.kb("GreaterOrEqual",t,void 0)},920229:t=>{h.kb("Less",t,void 0)},920281:t=>{h.kb("LessOrEqual",t,void 0)},920340:(t,r,s,i,a)=>{h.kb("ReduceMean",t,{keepDims:!!r,noopWithEmptyAxes:!!s,axes:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},920515:(t,r,s,i,a)=>{h.kb("ReduceMax",t,{keepDims:!!r,noopWithEmptyAxes:!!s,axes:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},920689:(t,r,s,i,a)=>{h.kb("ReduceMin",t,{keepDims:!!r,noopWithEmptyAxes:!!s,axes:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},920863:(t,r,s,i,a)=>{h.kb("ReduceProd",t,{keepDims:!!r,noopWithEmptyAxes:!!s,axes:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},921038:(t,r,s,i,a)=>{h.kb("ReduceSum",t,{keepDims:!!r,noopWithEmptyAxes:!!s,axes:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},921212:(t,r,s,i,a)=>{h.kb("ReduceL1",t,{keepDims:!!r,noopWithEmptyAxes:!!s,axes:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},921385:(t,r,s,i,a)=>{h.kb("ReduceL2",t,{keepDims:!!r,noopWithEmptyAxes:!!s,axes:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},921558:(t,r,s,i,a)=>{h.kb("ReduceLogSum",t,{keepDims:!!r,noopWithEmptyAxes:!!s,axes:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},921735:(t,r,s,i,a)=>{h.kb("ReduceSumSquare",t,{keepDims:!!r,noopWithEmptyAxes:!!s,axes:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},921915:(t,r,s,i,a)=>{h.kb("ReduceLogSumExp",t,{keepDims:!!r,noopWithEmptyAxes:!!s,axes:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},922095:t=>{h.kb("Where",t,void 0)},922148:(t,r,s)=>{h.kb("Transpose",t,{perm:r?Array.from(o().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},922272:(t,r,s,i)=>{h.kb("DepthToSpace",t,{blocksize:r,mode:eL(s),format:i?"NHWC":"NCHW"})},922405:(t,r,s,i)=>{h.kb("DepthToSpace",t,{blocksize:r,mode:eL(s),format:i?"NHWC":"NCHW"})},922538:(t,s,i,a,n,l,u,d,c,p,m,f,g,_,b)=>{h.kb("ConvTranspose",t,{format:c?"NHWC":"NCHW",autoPad:s,dilations:[i],group:a,kernelShape:[n],pads:[l,u],strides:[d],wIsConst:()=>!!r()[p>>>0],outputPadding:m?Array.from(o().subarray(Number(m)>>>0,Number(f)>>>0)):[],outputShape:g?Array.from(o().subarray(Number(g)>>>0,Number(_)>>>0)):[],activation:eL(b)})},922971:(t,s,i,a,n,l,u,d,c,p,m,f,g,_)=>{h.kb("ConvTranspose",t,{format:d?"NHWC":"NCHW",autoPad:s,dilations:Array.from(o().subarray(Number(i)>>>0,2+(Number(i)>>>0)>>>0)),group:a,kernelShape:Array.from(o().subarray(Number(n)>>>0,2+(Number(n)>>>0)>>>0)),pads:Array.from(o().subarray(Number(l)>>>0,4+(Number(l)>>>0)>>>0)),strides:Array.from(o().subarray(Number(u)>>>0,2+(Number(u)>>>0)>>>0)),wIsConst:()=>!!r()[c>>>0],outputPadding:p?Array.from(o().subarray(Number(p)>>>0,Number(m)>>>0)):[],outputShape:f?Array.from(o().subarray(Number(f)>>>0,Number(g)>>>0)):[],activation:eL(_)})},923632:(t,s,i,a,n,l,u,d,c,p,m,f,g,_,b)=>{h.kb("ConvTranspose",t,{format:c?"NHWC":"NCHW",autoPad:s,dilations:[i],group:a,kernelShape:[n],pads:[l,u],strides:[d],wIsConst:()=>!!r()[p>>>0],outputPadding:m?Array.from(o().subarray(Number(m)>>>0,Number(f)>>>0)):[],outputShape:g?Array.from(o().subarray(Number(g)>>>0,Number(_)>>>0)):[],activation:eL(b)})},924065:(t,s,i,a,n,l,u,d,c,p,m,f,g,_)=>{h.kb("ConvTranspose",t,{format:d?"NHWC":"NCHW",autoPad:s,dilations:Array.from(o().subarray(Number(i)>>>0,2+(Number(i)>>>0)>>>0)),group:a,kernelShape:Array.from(o().subarray(Number(n)>>>0,2+(Number(n)>>>0)>>>0)),pads:Array.from(o().subarray(Number(l)>>>0,4+(Number(l)>>>0)>>>0)),strides:Array.from(o().subarray(Number(u)>>>0,2+(Number(u)>>>0)>>>0)),wIsConst:()=>!!r()[c>>>0],outputPadding:p?Array.from(o().subarray(Number(p)>>>0,Number(m)>>>0)):[],outputShape:f?Array.from(o().subarray(Number(f)>>>0,Number(g)>>>0)):[],activation:eL(_)})},924726:(t,r)=>{h.kb("GlobalAveragePool",t,{format:r?"NHWC":"NCHW"})},924817:(t,r,s,i,a,n,l,u,d,c,p,m,f,g)=>{h.kb("AveragePool",t,{format:g?"NHWC":"NCHW",auto_pad:r,ceil_mode:s,count_include_pad:i,storage_order:a,dilations:n?Array.from(o().subarray(Number(n)>>>0,Number(l)>>>0)):[],kernel_shape:u?Array.from(o().subarray(Number(u)>>>0,Number(d)>>>0)):[],pads:c?Array.from(o().subarray(Number(c)>>>0,Number(p)>>>0)):[],strides:m?Array.from(o().subarray(Number(m)>>>0,Number(f)>>>0)):[]})},925296:(t,r)=>{h.kb("GlobalAveragePool",t,{format:r?"NHWC":"NCHW"})},925387:(t,r,s,i,a,n,l,u,d,c,p,m,f,g)=>{h.kb("AveragePool",t,{format:g?"NHWC":"NCHW",auto_pad:r,ceil_mode:s,count_include_pad:i,storage_order:a,dilations:n?Array.from(o().subarray(Number(n)>>>0,Number(l)>>>0)):[],kernel_shape:u?Array.from(o().subarray(Number(u)>>>0,Number(d)>>>0)):[],pads:c?Array.from(o().subarray(Number(c)>>>0,Number(p)>>>0)):[],strides:m?Array.from(o().subarray(Number(m)>>>0,Number(f)>>>0)):[]})},925866:(t,r)=>{h.kb("GlobalMaxPool",t,{format:r?"NHWC":"NCHW"})},925953:(t,r,s,i,a,n,l,u,d,c,p,m,f,g)=>{h.kb("MaxPool",t,{format:g?"NHWC":"NCHW",auto_pad:r,ceil_mode:s,count_include_pad:i,storage_order:a,dilations:n?Array.from(o().subarray(Number(n)>>>0,Number(l)>>>0)):[],kernel_shape:u?Array.from(o().subarray(Number(u)>>>0,Number(d)>>>0)):[],pads:c?Array.from(o().subarray(Number(c)>>>0,Number(p)>>>0)):[],strides:m?Array.from(o().subarray(Number(m)>>>0,Number(f)>>>0)):[]})},926428:(t,r)=>{h.kb("GlobalMaxPool",t,{format:r?"NHWC":"NCHW"})},926515:(t,r,s,i,a,n,l,u,d,c,p,m,f,g)=>{h.kb("MaxPool",t,{format:g?"NHWC":"NCHW",auto_pad:r,ceil_mode:s,count_include_pad:i,storage_order:a,dilations:n?Array.from(o().subarray(Number(n)>>>0,Number(l)>>>0)):[],kernel_shape:u?Array.from(o().subarray(Number(u)>>>0,Number(d)>>>0)):[],pads:c?Array.from(o().subarray(Number(c)>>>0,Number(p)>>>0)):[],strides:m?Array.from(o().subarray(Number(m)>>>0,Number(f)>>>0)):[]})},926990:(t,r,s,i,a)=>{h.kb("Gemm",t,{alpha:r,beta:s,transA:i,transB:a})},927094:t=>{h.kb("MatMul",t,void 0)},927148:(t,r,s,i)=>{h.kb("ArgMax",t,{keepDims:!!r,selectLastIndex:!!s,axis:i})},927256:(t,r,s,i)=>{h.kb("ArgMin",t,{keepDims:!!r,selectLastIndex:!!s,axis:i})},927364:(t,r)=>{h.kb("Softmax",t,{axis:r})},927427:(t,r)=>{h.kb("Concat",t,{axis:r})},927487:(t,r,s,i,a)=>{h.kb("Split",t,{axis:r,numOutputs:s,splitSizes:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},927643:t=>{h.kb("Expand",t,void 0)},927697:(t,r)=>{h.kb("Gather",t,{axis:Number(r)})},927768:(t,r)=>{h.kb("GatherElements",t,{axis:Number(r)})},927847:(t,r)=>{h.kb("GatherND",t,{batch_dims:Number(r)})},927926:(t,r,s,i,a,n,l,u,d,c,p)=>{h.kb("Resize",t,{antialias:r,axes:s?Array.from(o().subarray(Number(s)>>>0,Number(i)>>>0)):[],coordinateTransformMode:eL(a),cubicCoeffA:n,excludeOutside:l,extrapolationValue:u,keepAspectRatioPolicy:eL(d),mode:eL(c),nearestMode:eL(p)})},928288:(t,r,s,i,a,n,l)=>{h.kb("Slice",t,{starts:r?Array.from(o().subarray(Number(r)>>>0,Number(s)>>>0)):[],ends:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[],axes:n?Array.from(o().subarray(Number(n)>>>0,Number(l)>>>0)):[]})},928552:t=>{h.kb("Tile",t,void 0)},928604:(t,r,s)=>{h.kb("InstanceNormalization",t,{epsilon:r,format:s?"NHWC":"NCHW"})},928718:(t,r,s)=>{h.kb("InstanceNormalization",t,{epsilon:r,format:s?"NHWC":"NCHW"})},928832:t=>{h.kb("Range",t,void 0)},928885:(t,r)=>{h.kb("Einsum",t,{equation:eL(r)})},928966:(t,r,s,i,a)=>{h.kb("Pad",t,{mode:r,value:s,pads:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[]})},929109:(t,r,s,i,a,n)=>{h.kb("BatchNormalization",t,{epsilon:r,momentum:s,spatial:!!a,trainingMode:!!i,format:n?"NHWC":"NCHW"})},929278:(t,r,s,i,a,n)=>{h.kb("BatchNormalization",t,{epsilon:r,momentum:s,spatial:!!a,trainingMode:!!i,format:n?"NHWC":"NCHW"})},929447:(t,r,s)=>{h.kb("CumSum",t,{exclusive:Number(r),reverse:Number(s)})},929544:(t,r,s)=>{h.kb("DequantizeLinear",t,{axis:r,blockSize:s})},929634:(t,r,s,i,a)=>{h.kb("GridSample",t,{align_corners:r,mode:eL(s),padding_mode:eL(i),format:a?"NHWC":"NCHW"})},929804:(t,r,s,i,a)=>{h.kb("GridSample",t,{align_corners:r,mode:eL(s),padding_mode:eL(i),format:a?"NHWC":"NCHW"})},929974:(t,r,s,i,a,n,l,u,d)=>{h.kb("Attention",t,{numHeads:r,isUnidirectional:s,maskFilterValue:i,scale:a,doRotary:n,qkvHiddenSizes:l?Array.from(o().subarray(Number(u)>>>0,Number(u)+l>>>0)):[],pastPresentShareBuffer:!!d})},930246:t=>{h.kb("BiasAdd",t,void 0)},930301:t=>{h.kb("BiasSplitGelu",t,void 0)},930362:t=>{h.kb("FastGelu",t,void 0)},930418:(t,s,i,a,n,l,d,c,p,m,f,g,_,b,y,w)=>{h.kb("Conv",t,{format:g?"NHWC":"NCHW",auto_pad:s,dilations:i?Array.from(o().subarray(Number(i)>>>0,Number(a)>>>0)):[],group:n,kernel_shape:l?Array.from(o().subarray(Number(l)>>>0,Number(d)>>>0)):[],pads:c?Array.from(o().subarray(Number(c)>>>0,Number(p)>>>0)):[],strides:m?Array.from(o().subarray(Number(m)>>>0,Number(f)>>>0)):[],w_is_const:()=>!!r()[Number(_)>>>0],activation:eL(b),activation_params:y?Array.from(u().subarray(Number(y)>>>0,Number(w)>>>0)):[]})},931002:t=>{h.kb("Gelu",t,void 0)},931054:(t,r,s,i,a,n,o,l,u)=>{h.kb("GroupQueryAttention",t,{numHeads:r,kvNumHeads:s,scale:i,softcap:a,doRotary:n,rotaryInterleaved:o,smoothSoftmax:l,localWindowSize:u})},931271:(t,r,s,i)=>{h.kb("LayerNormalization",t,{axis:r,epsilon:s,simplified:!!i})},931382:(t,r,s,i)=>{h.kb("LayerNormalization",t,{axis:r,epsilon:s,simplified:!!i})},931493:(t,r,s,i,a,n)=>{h.kb("MatMulNBits",t,{k:r,n:s,accuracyLevel:i,bits:a,blockSize:n})},931620:(t,r,s,i,a,n)=>{h.kb("MultiHeadAttention",t,{numHeads:r,isUnidirectional:s,maskFilterValue:i,scale:a,doRotary:n})},931779:(t,r)=>{h.kb("QuickGelu",t,{alpha:r})},931843:(t,r,s,i,a)=>{h.kb("RotaryEmbedding",t,{interleaved:!!r,numHeads:s,rotaryEmbeddingDim:i,scale:a})},931982:(t,r,s)=>{h.kb("SkipLayerNormalization",t,{epsilon:r,simplified:!!s})},932084:(t,r,s)=>{h.kb("SkipLayerNormalization",t,{epsilon:r,simplified:!!s})},932186:(t,r,s,i)=>{h.kb("GatherBlockQuantized",t,{gatherAxis:r,quantizeAxis:s,blockSize:i})},932307:t=>{h.$b(t)},932341:(t,r)=>h.cc(Number(t),Number(r),h.Gb.hc,h.Gb.errors)};function el(t,r,s){return tH(async()=>{await h.Yb(Number(t),Number(r),Number(s))})}function eu(){return"u">typeof wasmOffsetConverter}function ed(t){this.name="ExitStatus",this.message=`Program terminated with exit(${t})`,this.status=t}var ec=t=>{t.terminate(),t.onmessage=()=>{}},ep=t=>{0==ey.length&&(e$(),ek(ey[0]));var r=ey.pop();if(!r)return 6;ew.push(r),ev[t.Bb]=r,r.Bb=t.Bb;var s={cmd:"run",start_routine:t.ic,arg:t.Rb,pthread_ptr:t.Bb};return r.postMessage(s,t.nc),0},eh=0,em=(t,r,...s)=>{for(var i=2*s.length,a=ss(),n=sr(8*i),o=n>>>3,l=0;l<s.length;l++){var u=s[l];"bigint"==typeof u?(V[o+2*l]=1n,V[o+2*l+1]=u):(V[o+2*l]=0n,d()[o+2*l+1>>>0]=u)}return t=r8(t,0,i,n,r),st(a),t};function ef(t){if(_)return em(0,1,t);if(z=t,!(0<eh)){for(var r of ew)ec(r);for(r of ey)ec(r);ey=[],ew=[],ev=[],q=!0}M(0,new ed(t))}function eg(t){if(_)return em(1,0,t);e_(t)}var e_=t=>{if(z=t,_)throw eg(t),"unwind";ef(t)},ey=[],ew=[],ex=[],ev={},eM=t=>{var r=t.Bb;delete ev[r],ey.push(t),ew.splice(ew.indexOf(t),1),t.Bb=0,r5(r)};function eT(){ex.forEach(t=>t())}var ek=t=>new Promise(r=>{t.onmessage=s=>{var i=(s=s.data).cmd;if(s.targetThread&&s.targetThread!=r1()){var a=ev[s.targetThread];a?a.postMessage(s,s.transferList):P(`Internal error! Worker sent a message "${i}" to target pthread ${s.targetThread}, but that thread no longer exists!`)}else"checkMailbox"===i?tC():"spawnThread"===i?ep(s):"cleanupThread"===i?eM(ev[s.thread]):"killThread"===i?(i=ev[s=s.thread],delete ev[s],ec(i),r5(s),ew.splice(ew.indexOf(i),1),i.Bb=0):"cancelThread"===i?ev[s.thread].postMessage({cmd:"cancel"}):"loaded"===i?(t.loaded=!0,r(t)):"alert"===i?alert(`Thread ${s.threadId}: ${s.text}`):"setimmediate"===s.target?t.postMessage(s):"callHandler"===i?h[s.handler](...s.args):i&&P(`worker sent an unknown command ${i}`)},t.onerror=t=>{throw P(`worker sent an error! ${t.filename}:${t.lineno}: ${t.message}`),t};var s,i=[];for(s of[])h.hasOwnProperty(s)&&i.push(s);t.postMessage({cmd:"load",handlers:i,wasmMemory:A,wasmModule:F})});function e$(){var t=new Worker("file:///D:/NextJs%20Apps%20(To%20BUILD)/Remove%20Background%20for%20images/remover/node_modules/@huggingface/transformers/dist/transformers.js".startsWith("file:")?new URL(i("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),i.b):new URL("file:///D:/NextJs%20Apps%20(To%20BUILD)/Remove%20Background%20for%20images/remover/node_modules/@huggingface/transformers/dist/transformers.js"),{type:"module",workerData:"em-pthread",name:"em-pthread"});ey.push(t)}var eC=t=>{for(;0<t.length;)t.shift()(h)},eS=()=>{var t=r1(),r=l()[t+52>>>2>>>0];t=l()[t+56>>>2>>>0],se(r,r-t),st(r)},eP=(t,r)=>{eh=0,t=si(t,r),0<eh?z=t:r9(t)};class eE{constructor(t){this.Kb=t-24}}function eI(t,r,s){var i=new eE(t>>>=0);throw r>>>=0,s>>>=0,l()[i.Kb+16>>>2>>>0]=0,l()[i.Kb+4>>>2>>>0]=r,l()[i.Kb+8>>>2>>>0]=s,t}function eA(t,r,s,i){return _?em(2,1,t,r,s,i):eF(t,r,s,i)}function eF(t,r,s,i){if(t>>>=0,r>>>=0,s>>>=0,i>>>=0,void 0===b)return P("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];return _&&0===a.length?eA(t,r,s,i):(t={ic:s,Bb:t,Rb:i,nc:a},_?(t.Nb="spawnThread",postMessage(t,a),0):ep(t))}var ez="u">typeof TextDecoder?new TextDecoder("utf8"):void 0,eO=(t,r,s)=>{var i=(r>>>=0)+s;for(s=r;t[s]&&!(s>=i);)++s;if(16<s-r&&t.buffer&&ez)return ez.decode(t.buffer instanceof b?t.slice(r,s):t.subarray(r,s));for(i="";r<s;){var a=t[r++];if(128&a){var n=63&t[r++];if((224&a)==192)i+=String.fromCharCode((31&a)<<6|n);else{var o=63&t[r++];65536>(a=(240&a)==224?(15&a)<<12|n<<6|o:(7&a)<<18|n<<12|o<<6|63&t[r++])?i+=String.fromCharCode(a):(a-=65536,i+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else i+=String.fromCharCode(a)}return i},eL=(t,r)=>(t>>>=0)?eO(s(),t,r):"";function eB(t,r,s){return _?em(3,1,t,r,s):0}function eN(t,r){if(_)return em(4,1,t,r)}var eD=t=>{for(var r=0,s=0;s<t.length;++s){var i=t.charCodeAt(s);127>=i?r++:2047>=i?r+=2:55296<=i&&57343>=i?(r+=4,++s):r+=3}return r},eR=(t,r,s,i)=>{if(!(0<i))return 0;var a=s>>>=0;i=s+i-1;for(var n=0;n<t.length;++n){var o=t.charCodeAt(n);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++n)),127>=o){if(s>=i)break;r[s++>>>0]=o}else{if(2047>=o){if(s+1>=i)break;r[s++>>>0]=192|o>>6}else{if(65535>=o){if(s+2>=i)break;r[s++>>>0]=224|o>>12}else{if(s+3>=i)break;r[s++>>>0]=240|o>>18,r[s++>>>0]=128|o>>12&63}r[s++>>>0]=128|o>>6&63}r[s++>>>0]=128|63&o}}return r[s>>>0]=0,s-a},ej=(t,r,i)=>eR(t,s(),r,i);function eV(t,r){if(_)return em(5,1,t,r)}function eG(t,r,s){if(_)return em(6,1,t,r,s)}function eU(t,r,s){return _?em(7,1,t,r,s):0}function eq(t,r){if(_)return em(8,1,t,r)}function eW(t,r,s){if(_)return em(9,1,t,r,s)}function eH(t,r,s,i){if(_)return em(10,1,t,r,s,i)}function eK(t,r,s,i){if(_)return em(11,1,t,r,s,i)}function eQ(t,r,s,i){if(_)return em(12,1,t,r,s,i)}function eX(t){if(_)return em(13,1,t)}function eJ(t,r){if(_)return em(14,1,t,r)}function eY(t,r,s){if(_)return em(15,1,t,r,s)}var eZ,e0,e1=()=>{ee("")},e2=t=>{for(var r="";s()[t>>>0];)r+=eZ[s()[t++>>>0]];return r},e3={},e4={},e6={};function e8(t,r,s={}){if(!("argPackAdvance"in r))throw TypeError("registerType registeredInstance requires argPackAdvance");return function(t,r,s={}){var i=r.name;if(!t)throw new e0(`type "${i}" must have a positive integer typeid pointer`);if(e4.hasOwnProperty(t)){if(s.Tb)return;throw new e0(`Cannot register type '${i}' twice`)}e4[t]=r,delete e6[t],e3.hasOwnProperty(t)&&(r=e3[t],delete e3[t],r.forEach(t=>t()))}(t,r,s)}var e5=(t,i,u)=>{switch(i){case 1:return u?t=>r()[t>>>0]:t=>s()[t>>>0];case 2:return u?t=>a()[t>>>1>>>0]:t=>n()[t>>>1>>>0];case 4:return u?t=>o()[t>>>2>>>0]:t=>l()[t>>>2>>>0];case 8:return u?t=>V[t>>>3]:t=>G[t>>>3];default:throw TypeError(`invalid integer width (${i}): ${t}`)}};function e9(t,r,s){s>>>=0,e8(t>>>=0,{name:r=e2(r>>>0),fromWireType:t=>t,toWireType:function(t,r){if("bigint"!=typeof r&&"number"!=typeof r)throw r=null===r?"null":"object"==(t=typeof r)||"array"===t||"function"===t?r.toString():""+r,TypeError(`Cannot convert "${r}" to ${this.name}`);return"number"==typeof r&&(r=BigInt(r)),r},argPackAdvance:e7,readValueFromPointer:e5(r,s,-1==r.indexOf("u")),Eb:null})}var e7=8;function te(t,r,i,a){e8(t>>>=0,{name:r=e2(r>>>0),fromWireType:function(t){return!!t},toWireType:function(t,r){return r?i:a},argPackAdvance:e7,readValueFromPointer:function(t){return this.fromWireType(s()[t>>>0])},Eb:null})}var tt=[],tr=[];function ts(t){9<(t>>>=0)&&0==--tr[t+1]&&(tr[t]=void 0,tt.push(t))}var ti=t=>{if(!t)throw new e0("Cannot use deleted val. handle = "+t);return tr[t]},ta=t=>{switch(t){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let r=tt.pop()||tr.length;return tr[r]=t,tr[r+1]=1,r}};function tn(t){return this.fromWireType(l()[t>>>2>>>0])}var to={name:"emscripten::val",fromWireType:t=>{var r=ti(t);return ts(t),r},toWireType:(t,r)=>ta(r),argPackAdvance:8,readValueFromPointer:tn,Eb:null};function tl(t){return e8(t>>>0,to)}var tu=(t,r)=>{switch(r){case 4:return function(t){return this.fromWireType(u()[t>>>2>>>0])};case 8:return function(t){return this.fromWireType(d()[t>>>3>>>0])};default:throw TypeError(`invalid float width (${r}): ${t}`)}};function td(t,r,s){s>>>=0,e8(t>>>=0,{name:r=e2(r>>>0),fromWireType:t=>t,toWireType:(t,r)=>r,argPackAdvance:e7,readValueFromPointer:tu(r,s),Eb:null})}function tc(t,r,s,i,a){if(t>>>=0,s>>>=0,r=e2(r>>>0),-1===a&&(a=4294967295),a=t=>t,0===i){var n=32-8*s;a=t=>t<<n>>>n}var o=r.includes("unsigned")?function(t,r){return r>>>0}:function(t,r){return r};e8(t,{name:r,fromWireType:a,toWireType:o,argPackAdvance:e7,readValueFromPointer:e5(r,s,0!==i),Eb:null})}function tp(t,s,i){function a(t){var s=l()[t>>>2>>>0];return t=l()[t+4>>>2>>>0],new n(r().buffer,t,s)}var n=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][s];e8(t>>>=0,{name:i=e2(i>>>0),fromWireType:a,argPackAdvance:e7,readValueFromPointer:a},{Tb:!0})}function th(t,r){t>>>=0;var i="std::string"===(r=e2(r>>>0));e8(t,{name:r,fromWireType:function(t){var r=l()[t>>>2>>>0],a=t+4;if(i)for(var n=a,o=0;o<=r;++o){var u=a+o;if(o==r||0==s()[u>>>0]){if(n=eL(n,u-n),void 0===d)var d=n;else d+="\0"+n;n=u+1}}else{for(d=Array(r),o=0;o<r;++o)d[o]=String.fromCharCode(s()[a+o>>>0]);d=d.join("")}return r2(t),d},toWireType:function(t,r){r instanceof ArrayBuffer&&(r=new Uint8Array(r));var a="string"==typeof r;if(!(a||r instanceof Uint8Array||r instanceof Uint8ClampedArray||r instanceof Int8Array))throw new e0("Cannot pass non-string to std::string");var n=i&&a?eD(r):r.length,o=r3(4+n+1),u=o+4;if(l()[o>>>2>>>0]=n,i&&a)ej(r,u,n+1);else if(a)for(a=0;a<n;++a){var d=r.charCodeAt(a);if(255<d)throw r2(u),new e0("String has UTF-16 code units that do not fit in 8 bits");s()[u+a>>>0]=d}else for(a=0;a<n;++a)s()[u+a>>>0]=r[a];return null!==t&&t.push(r2,o),o},argPackAdvance:e7,readValueFromPointer:tn,Eb(t){r2(t)}})}var tm="u">typeof TextDecoder?new TextDecoder("utf-16le"):void 0,tf=(t,r)=>{for(var i=t>>1,o=i+r/2;!(i>=o)&&n()[i>>>0];)++i;if(32<(i<<=1)-t&&tm)return tm.decode(s().slice(t,i));for(i="",o=0;!(o>=r/2);++o){var l=a()[t+2*o>>>1>>>0];if(0==l)break;i+=String.fromCharCode(l)}return i},tg=(t,r,s)=>{if(2>(s??=2147483647))return 0;var i=r;s=(s-=2)<2*t.length?s/2:t.length;for(var n=0;n<s;++n){var o=t.charCodeAt(n);a()[r>>>1>>>0]=o,r+=2}return a()[r>>>1>>>0]=0,r-i},t_=t=>2*t.length,tb=(t,r)=>{for(var s=0,i="";!(s>=r/4);){var a=o()[t+4*s>>>2>>>0];if(0==a)break;++s,65536<=a?(a-=65536,i+=String.fromCharCode(55296|a>>10,56320|1023&a)):i+=String.fromCharCode(a)}return i},ty=(t,r,s)=>{if(r>>>=0,4>(s??=2147483647))return 0;var i=r;s=i+s-4;for(var a=0;a<t.length;++a){var n=t.charCodeAt(a);if(55296<=n&&57343>=n&&(n=65536+((1023&n)<<10)|1023&t.charCodeAt(++a)),o()[r>>>2>>>0]=n,(r+=4)+4>s)break}return o()[r>>>2>>>0]=0,r-i},tw=t=>{for(var r=0,s=0;s<t.length;++s){var i=t.charCodeAt(s);55296<=i&&57343>=i&&++s,r+=4}return r};function tx(t,r,s){if(t>>>=0,r>>>=0,s=e2(s>>>=0),2===r)var i=tf,a=tg,o=t_,u=t=>n()[t>>>1>>>0];else 4===r&&(i=tb,a=ty,o=tw,u=t=>l()[t>>>2>>>0]);e8(t,{name:s,fromWireType:t=>{for(var s,a=l()[t>>>2>>>0],n=t+4,o=0;o<=a;++o){var d=t+4+o*r;o!=a&&0!=u(d)||(n=i(n,d-n),void 0===s?s=n:s+="\0"+n,n=d+r)}return r2(t),s},toWireType:(t,i)=>{if("string"!=typeof i)throw new e0(`Cannot pass non-string to C++ string type ${s}`);var n=o(i),u=r3(4+n+r);return l()[u>>>2>>>0]=n/r,a(i,u+4,n+r),null!==t&&t.push(r2,u),u},argPackAdvance:e7,readValueFromPointer:tn,Eb(t){r2(t)}})}function tv(t,r){e8(t>>>=0,{Ub:!0,name:r=e2(r>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var tM=()=>1;function tT(t){r4(t>>>0,!g,1,!f,131072,!1),eT()}var tk=t=>{if(!q)try{if(t(),!(0<eh))try{_?r9(z):e_(z)}catch(t){t instanceof ed||"unwind"==t||M(0,t)}}catch(t){t instanceof ed||"unwind"==t||M(0,t)}};function t$(t){t>>>=0,"function"==typeof Atomics.oc&&(Atomics.oc(o(),t>>>2,t).value.then(tC),t+=128,Atomics.store(o(),t>>>2,1))}var tC=()=>{var t=r1();t&&(t$(t),tk(r7))};function tS(t,r){(t>>>=0)==r>>>0?setTimeout(tC):_?postMessage({targetThread:t,cmd:"checkMailbox"}):(t=ev[t])&&t.postMessage({cmd:"checkMailbox"})}var tP=[];function tE(t,r,s,i,a){for(r>>>=0,i/=2,tP.length=i,s=a>>>0>>>3,a=0;a<i;a++)tP[a]=V[s+2*a]?V[s+2*a+1]:d()[s+2*a+1>>>0];return(r?eo[r]:rX[t])(...tP)}function tI(t){t>>>=0,_?postMessage({cmd:"cleanupThread",thread:t}):eM(ev[t])}function tA(t){}var tF=(t,r)=>{var s=e4[t];if(void 0===s)throw s=e2(t=rY(t)),r2(t),new e0(`${r} has unknown type ${s}`);return s},tz=(t,r,s)=>{var i=[];return t=t.toWireType(i,s),i.length&&(l()[r>>>2>>>0]=ta(i)),t};function tO(t,r,s){return r>>>=0,s>>>=0,t=ti(t>>>0),tz(r=tF(r,"emval::as"),s,t)}function tL(t,r){return r>>>=0,t=ti(t>>>0),(r=tF(r,"emval::as")).toWireType(null,t)}var tB=t=>{try{t()}catch(t){ee(t)}},tN=0,tD=null,tR=0,tj=[],tV={},tG={},tU=0,tq=null,tW=[];function tH(t){return function(t){if(!q){if(0===tN){var r,s,i,a=!1,n=!1;t((t=0)=>{if(!q&&(tR=t,a=!0,n)){tN=2,tB(()=>so(tD)),"u">typeof Browser&&Browser.Lb.Sb&&Browser.Lb.resume(),t=!1;try{var r,s=(r=rJ[tG[r=o()[tD+8>>>2>>>0]]],--eh,r())}catch(r){s=r,t=!0}var i=!1;if(!tD){var l=tq;l&&(tq=null,(t?l.reject:l.resolve)(s),i=!0)}if(t&&!i)throw s}}),n=!0,a||(tN=1,s=(r=r3(65548))+12,l()[r>>>2>>>0]=s,l()[r+4>>>2>>>0]=s+65536,void 0===(i=tV[s=tj[0]])&&(i=tU++,tV[s]=i,tG[i]=s),s=i,o()[r+8>>>2>>>0]=s,tD=r,"u">typeof Browser&&Browser.Lb.Sb&&Browser.Lb.pause(),tB(()=>sa(tD)))}else 2===tN?(tN=0,tB(sl),r2(tD),tD=null,tW.forEach(tk)):ee(`invalid state: ${tN}`);return tR}}(r=>{t().then(r)})}function tK(t){return t>>>=0,tH(()=>(t=ti(t)).then(ta))}var tQ=[];function tX(t,r,s,i){return s>>>=0,i>>>=0,(t=tQ[t>>>0])(null,r=ti(r>>>0),s,i)}var tJ={},tY=t=>{var r=tJ[t];return void 0===r?e2(t):r};function tZ(t,r,s,i,a){return s>>>=0,i>>>=0,a>>>=0,(t=tQ[t>>>0])(r=ti(r>>>0),r[s=tY(s)],i,a)}var t0=()=>"object"==typeof globalThis?globalThis:Function("return this")();function t1(t){return 0==(t>>>=0)?ta(t0()):(t=tY(t),ta(t0()[t]))}var t2=t=>{var r=tQ.length;return tQ.push(t),r},t3=(t,r)=>{for(var s=Array(t),i=0;i<t;++i)s[i]=tF(l()[r+4*i>>>2>>>0],"parameter "+i);return s},t4=(t,r)=>Object.defineProperty(r,"name",{value:t});function t6(t,r,s){var i=(r=t3(t,r>>>0)).shift();t--;var a=`return function (obj, func, destructorsRef, args) {
`,n=0,o=[];0===s&&o.push("obj");for(var l=["retType"],u=[i],d=0;d<t;++d)o.push("arg"+d),l.push("argType"+d),u.push(r[d]),a+=`  var arg${d} = argType${d}.readValueFromPointer(args${n?"+"+n:""});
`,n+=r[d].argPackAdvance;return a+=`  var rv = ${1===s?"new func":"func.call"}(${o.join(", ")});
`,i.Ub||(l.push("emval_returnValue"),u.push(tz),a+=`  return emval_returnValue(retType, destructorsRef, rv);
`),l.push(a+`};
`),t=(function(t){var r=Function;if(!(r instanceof Function))throw TypeError(`new_ called with constructor type ${typeof r} which is not a function`);var s=t4(r.name||"unknownFunctionName",function(){});return s.prototype=r.prototype,s=new s,(t=r.apply(s,t))instanceof Object?t:s})(l)(...u),t2(t4(s=`methodCaller<(${r.map(t=>t.name).join(", ")}) => ${i.name}>`,t))}function t8(t){return ta(h[t=tY(t>>>0)])}function t5(t,r){return r>>>=0,ta((t=ti(t>>>0))[r=ti(r)])}function t9(t){9<(t>>>=0)&&(tr[t+1]+=1)}function t7(){return ta([])}function re(t){t=ti(t>>>0);for(var r=Array(t.length),s=0;s<t.length;s++)r[s]=t[s];return ta(r)}function rt(t){return ta(tY(t>>>0))}function rr(){return ta({})}function rs(t){for(var r=ti(t>>>=0);r.length;){var s=r.pop();r.pop()(s)}ts(t)}function ri(t,r,s){r>>>=0,s>>>=0,t=ti(t>>>0),r=ti(r),s=ti(s),t[r]=s}function ra(t,r){return r>>>=0,ta(t=(t=tF(t>>>0,"_emval_take_value")).readValueFromPointer(r))}function rn(t,r){t=-9007199254740992>t||9007199254740992<t?NaN:Number(t),r>>>=0,t=new Date(1e3*t),o()[r>>>2>>>0]=t.getUTCSeconds(),o()[r+4>>>2>>>0]=t.getUTCMinutes(),o()[r+8>>>2>>>0]=t.getUTCHours(),o()[r+12>>>2>>>0]=t.getUTCDate(),o()[r+16>>>2>>>0]=t.getUTCMonth(),o()[r+20>>>2>>>0]=t.getUTCFullYear()-1900,o()[r+24>>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[r+28>>>2>>>0]=t}var ro=t=>t%4==0&&(t%100!=0||t%400==0),rl=[0,31,60,91,121,152,182,213,244,274,305,335],ru=[0,31,59,90,120,151,181,212,243,273,304,334];function rd(t,r){t=-9007199254740992>t||9007199254740992<t?NaN:Number(t),r>>>=0,t=new Date(1e3*t),o()[r>>>2>>>0]=t.getSeconds(),o()[r+4>>>2>>>0]=t.getMinutes(),o()[r+8>>>2>>>0]=t.getHours(),o()[r+12>>>2>>>0]=t.getDate(),o()[r+16>>>2>>>0]=t.getMonth(),o()[r+20>>>2>>>0]=t.getFullYear()-1900,o()[r+24>>>2>>>0]=t.getDay();var s=(ro(t.getFullYear())?rl:ru)[t.getMonth()]+t.getDate()-1|0;o()[r+28>>>2>>>0]=s,o()[r+36>>>2>>>0]=-60*t.getTimezoneOffset(),s=new Date(t.getFullYear(),6,1).getTimezoneOffset();var i=new Date(t.getFullYear(),0,1).getTimezoneOffset();t=0|(s!=i&&t.getTimezoneOffset()==Math.min(i,s)),o()[r+32>>>2>>>0]=t}function rc(t){t>>>=0;var r=new Date(o()[t+20>>>2>>>0]+1900,o()[t+16>>>2>>>0],o()[t+12>>>2>>>0],o()[t+8>>>2>>>0],o()[t+4>>>2>>>0],o()[t>>>2>>>0],0),s=o()[t+32>>>2>>>0],i=r.getTimezoneOffset(),a=new Date(r.getFullYear(),6,1).getTimezoneOffset(),n=new Date(r.getFullYear(),0,1).getTimezoneOffset(),l=Math.min(n,a);return 0>s?o()[t+32>>>2>>>0]=+(a!=n&&l==i):0<s!=(l==i)&&(a=Math.max(n,a),r.setTime(r.getTime()+6e4*((0<s?l:a)-i))),o()[t+24>>>2>>>0]=r.getDay(),s=(ro(r.getFullYear())?rl:ru)[r.getMonth()]+r.getDate()-1|0,o()[t+28>>>2>>>0]=s,o()[t>>>2>>>0]=r.getSeconds(),o()[t+4>>>2>>>0]=r.getMinutes(),o()[t+8>>>2>>>0]=r.getHours(),o()[t+12>>>2>>>0]=r.getDate(),o()[t+16>>>2>>>0]=r.getMonth(),o()[t+20>>>2>>>0]=r.getYear(),BigInt(isNaN(t=r.getTime())?-1:t/1e3)}function rp(t,r,s,i,a,n,o){return _?em(16,1,t,r,s,i,a,n,o):-52}function rh(t,r,s,i,a,n){if(_)return em(17,1,t,r,s,i,a,n)}function rm(t,r,s,i){t>>>=0,r>>>=0,s>>>=0,i>>>=0;var a=new Date().getFullYear(),n=new Date(a,0,1),u=new Date(a,6,1);a=n.getTimezoneOffset();var d=u.getTimezoneOffset(),c=Math.max(a,d);l()[t>>>2>>>0]=60*c,o()[r>>>2>>>0]=+(a!=d),n=(t=t=>t.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(n),u=t(u),d<a?(ej(n,s,17),ej(u,i,17)):(ej(n,i,17),ej(u,s,17))}var rf=[],rg=(t,r)=>{rf.length=0;for(var i;i=s()[t++>>>0];){var a=105!=i;r+=(a&=112!=i)&&r%8?4:0,rf.push(112==i?l()[r>>>2>>>0]:106==i?V[r>>>3]:105==i?o()[r>>>2>>>0]:d()[r>>>3>>>0]),r+=a?8:4}return rf};function r_(t,r,s){return t>>>=0,r=rg(r>>>0,s>>>0),eo[t](...r)}function rb(t,r,s){return t>>>=0,r=rg(r>>>0,s>>>0),eo[t](...r)}var ry=()=>{},rw=()=>Date.now();function rx(t,r){return P(eL(t>>>0,r>>>0))}var rv,rM=()=>{throw eh+=1,"unwind"};function rT(){return 4294901760}rv=()=>performance.timeOrigin+performance.now();var rk=()=>navigator.hardwareConcurrency;function r$(){return ee("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function rC(t){t>>>=0;var r=s().length;if(t<=r||4294901760<t)return!1;for(var i=1;4>=i;i*=2){var a=r*(1+.2/i);a=Math.min(a,t+100663296);var n=Math;a=Math.max(t,a);t:{n=(n.min.call(n,4294901760,a+(65536-a%65536)%65536)-A.buffer.byteLength+65535)/65536;try{A.grow(n),W();var o=1;break t}catch{}o=void 0}if(o)return!0}return!1}var rS=()=>(ee("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),rP={},rE=t=>{t.forEach(t=>{var r=rS();r&&(rP[r]=t)})};function rI(){var t=Error().stack.toString().split(`
`);return"Error"==t[0]&&t.shift(),rE(t),rP.Qb=rS(),rP.fc=t,rP.Qb}function rA(t,r,s){if(t>>>=0,r>>>=0,rP.Qb==t)var i=rP.fc;else"Error"==(i=Error().stack.toString().split(`
`))[0]&&i.shift(),rE(i);for(var a=3;i[a]&&rS()!=t;)++a;for(t=0;t<s&&i[t+a];++t)o()[r+4*t>>>2>>>0]=rS();return t}var rF,rz={},rO=()=>{if(!rF){var t,r={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(t in rz)void 0===rz[t]?delete r[t]:r[t]=rz[t];var s=[];for(t in r)s.push(`${t}=${r[t]}`);rF=s}return rF};function rL(t,s){if(_)return em(18,1,t,s);t>>>=0,s>>>=0;var i=0;return rO().forEach((a,n)=>{var o=s+i;for(n=l()[t+4*n>>>2>>>0]=o,o=0;o<a.length;++o)r()[n++>>>0]=a.charCodeAt(o);r()[n>>>0]=0,i+=a.length+1}),0}function rB(t,r){if(_)return em(19,1,t,r);t>>>=0,r>>>=0;var s=rO();l()[t>>>2>>>0]=s.length;var i=0;return s.forEach(t=>i+=t.length+1),l()[r>>>2>>>0]=i,0}function rN(t){return _?em(20,1,t):52}function rD(t,r,s,i){return _?em(21,1,t,r,s,i):52}function rR(t,r,s,i){return _?em(22,1,t,r,s,i):70}var rj=[null,[],[]];function rV(t,r,i,a){if(_)return em(23,1,t,r,i,a);r>>>=0,i>>>=0,a>>>=0;for(var n=0,o=0;o<i;o++){var u=l()[r>>>2>>>0],d=l()[r+4>>>2>>>0];r+=8;for(var c=0;c<d;c++){var p=s()[u+c>>>0],h=rj[t];0===p||10===p?((1===t?S:P)(eO(h,0)),h.length=0):h.push(p)}n+=d}return l()[a>>>2>>>0]=n,0}var rG=[31,29,31,30,31,30,31,31,30,31,30,31],rU=[31,28,31,30,31,30,31,31,30,31,30,31],rq=(t,s)=>{r().set(t,s>>>0)};function rW(t,r,s,i){function a(t,r,s){for(t="number"==typeof t?t.toString():t||"";t.length<r;)t=s[0]+t;return t}function n(t,r){return a(t,r,"0")}function u(t,r){var s;function i(t){return 0>t?-1:0<t?1:0}return 0===(s=i(t.getFullYear()-r.getFullYear()))&&0===(s=i(t.getMonth()-r.getMonth()))&&(s=i(t.getDate()-r.getDate())),s}function d(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function c(t){var r=t.Cb;for(t=new Date(new Date(t.Db+1900,0,1).getTime());0<r;){var s=t.getMonth(),i=(ro(t.getFullYear())?rG:rU)[s];if(!(r>i-t.getDate())){t.setDate(t.getDate()+r);break}r-=i-t.getDate()+1,t.setDate(1),11>s?t.setMonth(s+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return s=new Date(t.getFullYear()+1,0,4),r=d(new Date(t.getFullYear(),0,4)),s=d(s),0>=u(r,t)?0>=u(s,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}t>>>=0,r>>>=0,s>>>=0,i>>>=0;var p,h,m=l()[i+40>>>2>>>0];for(var f in i={lc:o()[i>>>2>>>0],kc:o()[i+4>>>2>>>0],Ib:o()[i+8>>>2>>>0],Mb:o()[i+12>>>2>>>0],Jb:o()[i+16>>>2>>>0],Db:o()[i+20>>>2>>>0],vb:o()[i+24>>>2>>>0],Cb:o()[i+28>>>2>>>0],sc:o()[i+32>>>2>>>0],jc:o()[i+36>>>2>>>0],mc:m?eL(m):""},s=eL(s),m={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})s=s.replace(RegExp(f,"g"),m[f]);var g="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),_="January February March April May June July August September October November December".split(" ");for(f in m={"%a":t=>g[t.vb].substring(0,3),"%A":t=>g[t.vb],"%b":t=>_[t.Jb].substring(0,3),"%B":t=>_[t.Jb],"%C":t=>n((t.Db+1900)/100|0,2),"%d":t=>n(t.Mb,2),"%e":t=>a(t.Mb,2," "),"%g":t=>c(t).toString().substring(2),"%G":c,"%H":t=>n(t.Ib,2),"%I":t=>(0==(t=t.Ib)?t=12:12<t&&(t-=12),n(t,2)),"%j":t=>{for(var r=0,s=0;s<=t.Jb-1;r+=(ro(t.Db+1900)?rG:rU)[s++]);return n(t.Mb+r,3)},"%m":t=>n(t.Jb+1,2),"%M":t=>n(t.kc,2),"%n":()=>`
`,"%p":t=>0<=t.Ib&&12>t.Ib?"AM":"PM","%S":t=>n(t.lc,2),"%t":()=>"	","%u":t=>t.vb||7,"%U":t=>n(Math.floor((t.Cb+7-t.vb)/7),2),"%V":t=>{var r=Math.floor((t.Cb+7-(t.vb+6)%7)/7);if(2>=(t.vb+371-t.Cb-2)%7&&r++,r)53==r&&(4==(s=(t.vb+371-t.Cb)%7)||3==s&&ro(t.Db)||(r=1));else{r=52;var s=(t.vb+7-t.Cb-1)%7;(4==s||5==s&&ro(t.Db%400-1))&&r++}return n(r,2)},"%w":t=>t.vb,"%W":t=>n(Math.floor((t.Cb+7-(t.vb+6)%7)/7),2),"%y":t=>(t.Db+1900).toString().substring(2),"%Y":t=>t.Db+1900,"%z":t=>{var r=0<=(t=t.jc);return(r?"+":"-")+("0000"+((t=Math.abs(t)/60)/60*100+t%60)).slice(-4)},"%Z":t=>t.mc,"%%":()=>"%"},s=s.replace(/%%/g,"\0\0"),m)s.includes(f)&&(s=s.replace(RegExp(f,"g"),m[f](i)));return h=Array(eD(p=s=s.replace(/\0\0/g,"%"))+1),eR(p,h,0,h.length),(f=h).length>r?0:(rq(f,t),f.length-1)}function rH(t,r,s,i){return rW(t>>>0,r>>>0,s>>>0,i>>>0)}_||function(){for(var t=h.numThreads-1;t--;)e$();H.unshift(()=>{var t;X++,t=()=>Z(),_?t():Promise.all(ey.map(ek)).then(t)})}();for(var rK=Array(256),rQ=0;256>rQ;++rQ)rK[rQ]=String.fromCharCode(rQ);eZ=rK,e0=h.BindingError=class extends Error{constructor(t){super(t),this.name="BindingError"}},h.InternalError=class extends Error{constructor(t){super(t),this.name="InternalError"}},tr.push(0,1,void 0,1,null,1,!0,1,!1,1),h.count_emval_handles=()=>tr.length/2-5-tt.length;var rX=[ef,eg,eA,eB,eN,eV,eG,eU,eq,eW,eH,eK,eQ,eX,eJ,eY,rp,rh,rL,rB,rN,rD,rR,rV],rJ=function(){function t(t,r){var s,i,a;return rJ=t.exports,s=rJ=function(){var t={};for(let[r,s]of Object.entries(rJ))t[r]="function"==typeof s?(...t)=>{tj.push(r);try{return s(...t)}finally{q||(tj.pop(),tD&&1===tN&&0===tj.length&&(tN=0,eh+=1,tB(sn),"u">typeof Fibers&&Fibers.tc()))}}:s;return t}(),i=t=>r=>t(r)>>>0,a=t=>()=>t()>>>0,(s=Object.assign({},s)).Da=i(s.Da),s.gb=a(s.gb),s.ib=i(s.ib),s.emscripten_main_runtime_thread_id=a(s.emscripten_main_runtime_thread_id),s.tb=i(s.tb),s.ub=a(s.ub),rJ=s,ex.push(rJ.jb),K.unshift(rJ.Ca),F=r,Z(),rJ}var r,s=en();if(X++,h.instantiateWasm)try{return h.instantiateWasm(s,t)}catch(t){P(`Module.instantiateWasm callback failed with error: ${t}`),p(t)}return et||=h.locateFile?er("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":h.locateFile?h.locateFile("ort-wasm-simd-threaded.jsep.wasm",T):T+"ort-wasm-simd-threaded.jsep.wasm":new URL(i("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),i.b).href,(r=function(r){t(r.instance,r.module)},k||"function"!=typeof WebAssembly.instantiateStreaming||er(et)||es(et)||"function"!=typeof fetch?ea(et,s,r):fetch(et,{credentials:"same-origin"}).then(t=>WebAssembly.instantiateStreaming(t,s).then(r,function(t){return P(`wasm streaming compile failed: ${t}`),P("falling back to ArrayBuffer instantiation"),ea(et,s,r)}))).catch(p),{}}(),rY=t=>(rY=rJ.Da)(t),rZ=()=>(rZ=rJ.Ea)();h._OrtInit=(t,r)=>(h._OrtInit=rJ.Fa)(t,r),h._OrtGetLastError=(t,r)=>(h._OrtGetLastError=rJ.Ga)(t,r),h._OrtCreateSessionOptions=(t,r,s,i,a,n,o,l,u,d)=>(h._OrtCreateSessionOptions=rJ.Ha)(t,r,s,i,a,n,o,l,u,d),h._OrtAppendExecutionProvider=(t,r)=>(h._OrtAppendExecutionProvider=rJ.Ia)(t,r),h._OrtAddFreeDimensionOverride=(t,r,s)=>(h._OrtAddFreeDimensionOverride=rJ.Ja)(t,r,s),h._OrtAddSessionConfigEntry=(t,r,s)=>(h._OrtAddSessionConfigEntry=rJ.Ka)(t,r,s),h._OrtReleaseSessionOptions=t=>(h._OrtReleaseSessionOptions=rJ.La)(t),h._OrtCreateSession=(t,r,s)=>(h._OrtCreateSession=rJ.Ma)(t,r,s),h._OrtReleaseSession=t=>(h._OrtReleaseSession=rJ.Na)(t),h._OrtGetInputOutputCount=(t,r,s)=>(h._OrtGetInputOutputCount=rJ.Oa)(t,r,s),h._OrtGetInputName=(t,r)=>(h._OrtGetInputName=rJ.Pa)(t,r),h._OrtGetOutputName=(t,r)=>(h._OrtGetOutputName=rJ.Qa)(t,r),h._OrtFree=t=>(h._OrtFree=rJ.Ra)(t),h._OrtCreateTensor=(t,r,s,i,a,n)=>(h._OrtCreateTensor=rJ.Sa)(t,r,s,i,a,n),h._OrtGetTensorData=(t,r,s,i,a)=>(h._OrtGetTensorData=rJ.Ta)(t,r,s,i,a),h._OrtReleaseTensor=t=>(h._OrtReleaseTensor=rJ.Ua)(t),h._OrtCreateRunOptions=(t,r,s,i)=>(h._OrtCreateRunOptions=rJ.Va)(t,r,s,i),h._OrtAddRunConfigEntry=(t,r,s)=>(h._OrtAddRunConfigEntry=rJ.Wa)(t,r,s),h._OrtReleaseRunOptions=t=>(h._OrtReleaseRunOptions=rJ.Xa)(t),h._OrtCreateBinding=t=>(h._OrtCreateBinding=rJ.Ya)(t),h._OrtBindInput=(t,r,s)=>(h._OrtBindInput=rJ.Za)(t,r,s),h._OrtBindOutput=(t,r,s,i)=>(h._OrtBindOutput=rJ._a)(t,r,s,i),h._OrtClearBoundOutputs=t=>(h._OrtClearBoundOutputs=rJ.$a)(t),h._OrtReleaseBinding=t=>(h._OrtReleaseBinding=rJ.ab)(t),h._OrtRunWithBinding=(t,r,s,i,a)=>(h._OrtRunWithBinding=rJ.bb)(t,r,s,i,a),h._OrtRun=(t,r,s,i,a,n,o,l)=>(h._OrtRun=rJ.cb)(t,r,s,i,a,n,o,l),h._OrtEndProfiling=t=>(h._OrtEndProfiling=rJ.db)(t),h._JsepOutput=(t,r,s)=>(h._JsepOutput=rJ.eb)(t,r,s),h._JsepGetNodeName=t=>(h._JsepGetNodeName=rJ.fb)(t);var r0,r1=()=>(r1=rJ.gb)(),r2=h._free=t=>(r2=h._free=rJ.hb)(t),r3=h._malloc=t=>(r3=h._malloc=rJ.ib)(t),r4=(t,r,s,i,a,n)=>(r4=rJ.lb)(t,r,s,i,a,n),r6=()=>(r6=rJ.mb)(),r8=(t,r,s,i,a)=>(r8=rJ.nb)(t,r,s,i,a),r5=t=>(r5=rJ.ob)(t),r9=t=>(r9=rJ.pb)(t),r7=()=>(r7=rJ.qb)(),se=(t,r)=>(se=rJ.rb)(t,r),st=t=>(st=rJ.sb)(t),sr=t=>(sr=rJ.tb)(t),ss=()=>(ss=rJ.ub)(),si=h.dynCall_ii=(t,r)=>(si=h.dynCall_ii=rJ.wb)(t,r),sa=t=>(sa=rJ.xb)(t),sn=()=>(sn=rJ.yb)(),so=t=>(so=rJ.zb)(t),sl=()=>(sl=rJ.Ab)();function su(){0<X||(_?(c(h),_||eC(K),startWorker(h)):(eC(H),0<X||r0||(r0=!0,h.calledRun=!0,q||(_||eC(K),c(h),_||eC(Q)))))}return h.___start_em_js=932469,h.___stop_em_js=932715,h.stackSave=()=>ss(),h.stackRestore=t=>st(t),h.stackAlloc=t=>sr(t),h.setValue=function(t,s,i="i8"){switch(i.endsWith("*")&&(i="*"),i){case"i1":case"i8":r()[t>>>0]=s;break;case"i16":a()[t>>>1>>>0]=s;break;case"i32":o()[t>>>2>>>0]=s;break;case"i64":V[t>>>3]=BigInt(s);break;case"float":u()[t>>>2>>>0]=s;break;case"double":d()[t>>>3>>>0]=s;break;case"*":l()[t>>>2>>>0]=s;break;default:ee(`invalid type for setValue: ${i}`)}},h.getValue=function(t,s="i8"){switch(s.endsWith("*")&&(s="*"),s){case"i1":case"i8":return r()[t>>>0];case"i16":return a()[t>>>1>>>0];case"i32":return o()[t>>>2>>>0];case"i64":return V[t>>>3];case"float":return u()[t>>>2>>>0];case"double":return d()[t>>>3>>>0];case"*":return l()[t>>>2>>>0];default:ee(`invalid type for getValue: ${s}`)}},h.UTF8ToString=eL,h.stringToUTF8=ej,h.lengthBytesUTF8=eD,Y=function t(){r0||su(),r0||(Y=t)},su(),h.PTR_SIZE=4,m},globalThis.self?.name==="em-pthread"&&ey()}),oR=j(()=>{ec(),ex=typeof location>"u"?void 0:location.origin,ev="file:///D:/NextJs%20Apps%20(To%20BUILD)/Remove%20Background%20for%20images/remover/node_modules/@huggingface/transformers/dist/transformers.js".startsWith("file:")?new URL(new URL(i("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),i.b).href,ex).href:"file:///D:/NextJs%20Apps%20(To%20BUILD)/Remove%20Background%20for%20images/remover/node_modules/@huggingface/transformers/dist/transformers.js",eM=()=>{if(ev&&!ev.startsWith("blob:"))return ev.substring(0,ev.lastIndexOf("/")+1)},eT=(t,r)=>{try{let s=r??ev;return(s?new URL(t,s):new URL(t)).origin===ex}catch{return!1}},ek=(t,r)=>{let s=r??ev;try{return(s?new URL(t,s):new URL(t)).href}catch{return}},e$=(t,r)=>`${r??"./"}${t}`,eC=async t=>{let r=await (await fetch(t,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},eS=async t=>(await import(t)).default,eP=(eg(),U(ep)).default,eE=async()=>{if(!ev)throw Error("Failed to load proxy worker: cannot determine the script source URL.");if(eT(ev))return[void 0,eP()];let t=await eC(ev);return[t,eP(t)]},eI=(oD(),U(e_)).default,eA=async(t,r,s)=>{if(!t&&!r&&eI&&ev&&eT(ev))return[void 0,eI];{let i="ort-wasm-simd-threaded.jsep.mjs",a=t??ek(i,r),n=s&&a&&!eT(a,r),o=n?await eC(a):a??e$(i,r);return[n?o:void 0,await eS(o)]}}}),oj=j(()=>{oR(),ez=!1,eO=!1,eL=!1,eB=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return"u">typeof MessageChannel&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},eN=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},eD=async t=>{if(ez)return Promise.resolve();if(eO)throw Error("multiple calls to 'initializeWebAssembly()' detected.");if(eL)throw Error("previous call to 'initializeWebAssembly()' failed.");eO=!0;let r=t.initTimeout,s=t.numThreads;if(!eN())throw Error("WebAssembly SIMD is not supported in the current environment.");let i=eB();s>1&&!i&&("u">typeof self&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+s+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),t.numThreads=s=1);let a=t.wasmPaths,n="string"==typeof a?a:void 0,o=a?.mjs,l=o?.href??o,u=a?.wasm,d=u?.href??u,c=t.wasmBinary,[p,h]=await eA(l,n,s>1),m=!1,f=[];if(r>0&&f.push(new Promise(t=>{setTimeout(()=>{m=!0,t()},r)})),f.push(new Promise((t,r)=>{let i={numThreads:s};if(c)i.wasmBinary=c;else if(d||n)i.locateFile=t=>d??n+t;else if(l&&0!==l.indexOf("blob:"))i.locateFile=t=>new URL(t,l).href;else if(p){let t=eM();t&&(i.locateFile=r=>t+r)}h(i).then(r=>{eO=!1,ez=!0,eF=r,t(),p&&URL.revokeObjectURL(p)},t=>{eO=!1,eL=!0,r(t)})})),await Promise.race(f),m)throw Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},eR=()=>{if(ez&&eF)return eF;throw Error("WebAssembly is not initialized yet.")}}),oV=j(()=>{oj(),ej=(t,r)=>{let s=eR(),i=s.lengthBytesUTF8(t)+1,a=s._malloc(i);return s.stringToUTF8(t,a,i),r.push(a),a},eV=(t,r,s,i)=>{if("object"==typeof t&&null!==t){if(s.has(t))throw Error("Circular reference in options");s.add(t)}Object.entries(t).forEach(([t,a])=>{let n=r?r+t:t;if("object"==typeof a)eV(a,n+".",s,i);else if("string"==typeof a||"number"==typeof a)i(n,a.toString());else if("boolean"==typeof a)i(n,a?"1":"0");else throw Error(`Can't handle extra config type: ${typeof a}`)})},eG=t=>{let r=eR(),s=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);r._OrtGetLastError(i,i+s);let a=Number(r.getValue(i,4===s?"i32":"i64")),n=r.getValue(i+s,"*"),o=n?r.UTF8ToString(n):"";throw Error(`${t} ERROR_CODE: ${a}, ERROR_MESSAGE: ${o}`)}finally{r.stackRestore(s)}}}),oG=j(()=>{oj(),oV(),eU=t=>{let r=eR(),s=0,i=[],a=t||{};try{if(t?.logSeverityLevel===void 0)a.logSeverityLevel=2;else if("number"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(t?.logVerbosityLevel===void 0)a.logVerbosityLevel=0;else if("number"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);t?.terminate===void 0&&(a.terminate=!1);let n=0;return t?.tag!==void 0&&(n=ej(t.tag,i)),s=r._OrtCreateRunOptions(a.logSeverityLevel,a.logVerbosityLevel,!!a.terminate,n),0===s&&eG("Can't create run options."),t?.extra!==void 0&&eV(t.extra,"",new WeakSet,(t,a)=>{let n=ej(t,i),o=ej(a,i);0!==r._OrtAddRunConfigEntry(s,n,o)&&eG(`Can't set a run config entry: ${t} - ${a}.`)}),[s,i]}catch(t){throw 0!==s&&r._OrtReleaseRunOptions(s),i.forEach(t=>r._free(t)),t}}}),oU=j(()=>{oj(),oV(),eq=t=>{switch(t){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw Error(`unsupported graph optimization level: ${t}`)}},eW=t=>{switch(t){case"sequential":return 0;case"parallel":return 1;default:throw Error(`unsupported execution mode: ${t}`)}},eH=t=>{t.extra||(t.extra={}),t.extra.session||(t.extra.session={});let r=t.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),t.executionProviders&&t.executionProviders.some(t=>("string"==typeof t?t:t.name)==="webgpu")&&(t.enableMemPattern=!1)},eK=(t,r,s)=>{for(let i of r){let r="string"==typeof i?i:i.name;switch(r){case"webnn":if(r="WEBNN","string"!=typeof i){let r=i?.deviceType;if(r){let i=ej("deviceType",s),a=ej(r,s);0!==eR()._OrtAddSessionConfigEntry(t,i,a)&&eG(`Can't set a session config entry: 'deviceType' - ${r}.`)}}break;case"webgpu":if(r="JS","string"!=typeof i&&i?.preferredLayout){if("NCHW"!==i.preferredLayout&&"NHWC"!==i.preferredLayout)throw Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${i.preferredLayout}`);let r=ej("preferredLayout",s),a=ej(i.preferredLayout,s);0!==eR()._OrtAddSessionConfigEntry(t,r,a)&&eG(`Can't set a session config entry: 'preferredLayout' - ${i.preferredLayout}.`)}break;case"wasm":case"cpu":continue;default:throw Error(`not supported execution provider: ${r}`)}let a=ej(r,s);0!==eR()._OrtAppendExecutionProvider(t,a)&&eG(`Can't append execution provider: ${r}.`)}},eQ=t=>{let r=eR(),s=0,i=[],a=t||{};eH(a);try{let t=eq(a.graphOptimizationLevel??"all"),n=eW(a.executionMode??"sequential"),o="string"==typeof a.logId?ej(a.logId,i):0,l=a.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw Error(`log serverity level is not valid: ${l}`);let u=a.logVerbosityLevel??0;if(!Number.isInteger(u)||u<0||u>4)throw Error(`log verbosity level is not valid: ${u}`);let d="string"==typeof a.optimizedModelFilePath?ej(a.optimizedModelFilePath,i):0;if(s=r._OrtCreateSessionOptions(t,!!a.enableCpuMemArena,!!a.enableMemPattern,n,!!a.enableProfiling,0,o,l,u,d),0===s&&eG("Can't create session options."),a.executionProviders&&eK(s,a.executionProviders,i),void 0!==a.enableGraphCapture){if("boolean"!=typeof a.enableGraphCapture)throw Error(`enableGraphCapture must be a boolean value: ${a.enableGraphCapture}`);let t=ej("enableGraphCapture",i),n=ej(a.enableGraphCapture.toString(),i);0!==r._OrtAddSessionConfigEntry(s,t,n)&&eG(`Can't set a session config entry: 'enableGraphCapture' - ${a.enableGraphCapture}.`)}if(a.freeDimensionOverrides)for(let[t,n]of Object.entries(a.freeDimensionOverrides)){if("string"!=typeof t)throw Error(`free dimension override name must be a string: ${t}`);if("number"!=typeof n||!Number.isInteger(n)||n<0)throw Error(`free dimension override value must be a non-negative integer: ${n}`);let a=ej(t,i);0!==r._OrtAddFreeDimensionOverride(s,a,n)&&eG(`Can't set a free dimension override: ${t} - ${n}.`)}return void 0!==a.extra&&eV(a.extra,"",new WeakSet,(t,a)=>{let n=ej(t,i),o=ej(a,i);0!==r._OrtAddSessionConfigEntry(s,n,o)&&eG(`Can't set a session config entry: ${t} - ${a}.`)}),[s,i]}catch(t){throw 0!==s&&0!==r._OrtReleaseSessionOptions(s)&&eG("Can't release session options."),i.forEach(t=>r._free(t)),t}}}),oq=j(()=>{eX=t=>{switch(t){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw Error(`unsupported data type: ${t}`)}},eJ=t=>{switch(t){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw Error(`unsupported data type: ${t}`)}},eY=(t,r)=>{let s=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][t],i="number"==typeof r?r:r.reduce((t,r)=>t*r,1);return s>0?Math.ceil(i*s):void 0},eZ=t=>{switch(t){case"float16":return"u">typeof Float16Array&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw Error(`unsupported type: ${t}`)}},e0=t=>{switch(t){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw Error(`unsupported logging level: ${t}`)}},e1=t=>"float32"===t||"float16"===t||"int32"===t||"int64"===t||"uint32"===t||"uint8"===t||"bool"===t||"uint4"===t||"int4"===t,e2=t=>"float32"===t||"float16"===t||"int32"===t||"int64"===t||"uint32"===t||"uint64"===t||"int8"===t||"uint8"===t||"bool"===t||"uint4"===t||"int4"===t,e3=t=>{switch(t){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw Error(`unsupported data location: ${t}`)}}}),oW=j(()=>{ec(),e4=async t=>{if("string"!=typeof t)return t instanceof Blob?new Uint8Array(await t.arrayBuffer()):t instanceof Uint8Array?t:new Uint8Array(t);{let r=await fetch(t);if(!r.ok)throw Error(`failed to load external data file: ${t}`);let s=r.headers.get("Content-Length"),i=s?parseInt(s,10):0;if(i<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw Error(`failed to load external data file: ${t}, no response body.`);let s=r.body.getReader(),a;try{a=new ArrayBuffer(i)}catch(t){if(t instanceof RangeError){let t=Math.ceil(i/65536);a=new WebAssembly.Memory({initial:t,maximum:t}).buffer}else throw t}let n=0;for(;;){let{done:t,value:r}=await s.read();if(t)break;let i=r.byteLength;new Uint8Array(a,n,i).set(r),n+=i}return new Uint8Array(a,0,i)}}}}),oH=j(()=>{oq(),e6=["V","I","W","E","F"],e8=(t,r)=>{console.log(`[${e6[t]},${new Date().toISOString()}]${r}`)},e7=(t,r)=>{e5=t,e9=r},te=(t,r)=>{let s=e0(t);s>=e0(e5)&&e8(s,"function"==typeof r?r():r)},tt=(...t)=>{e9&&te(...t)}}),oK=j(()=>{oq(),tr=(t,r)=>new(eZ(r))(t)}),oQ=j(()=>{}),oX=j(()=>{oH(),oQ(),ts=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),ti=[],ta=t=>16*Math.ceil(Number(t)/16),tn=t=>{for(let r=0;r<ti.length;r++){let s=ti[r];if(t<=s)return s}return 16*Math.ceil(t/16)},to=1,tl=()=>to++,tu=async(t,r,s,i)=>{let a=ta(s),n=t.device.createBuffer({size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=t.getCommandEncoder();t.endComputePass(),o.copyBufferToBuffer(r,0,n,0,a),t.flush(),await n.mapAsync(GPUMapMode.READ);let l=n.getMappedRange();if(!i)return new Uint8Array(l.slice(0,s));{let t=i();return t.set(new Uint8Array(l,0,s)),t}}finally{n.destroy()}},td=class{constructor(t){for(let[r]of(this.backend=t,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map,ts))ti.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(t,r){let s=r.buffer,i=r.byteOffset,a=r.byteLength,n=ta(a),o=this.storageCache.get(t);if(!o)throw Error("gpu data for uploading does not exist");if(Number(o.originalSize)!==a)throw Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${a}`);let l=this.backend.device.createBuffer({mappedAtCreation:!0,size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC});new Uint8Array(l.getMappedRange()).set(new Uint8Array(s,i,a)),l.unmap();let u=this.backend.device.createCommandEncoder();u.copyBufferToBuffer(l,0,o.gpuData.buffer,0,n),this.backend.device.queue.submit([u.finish()]),l.destroy(),tt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`)}memcpy(t,r){let s=this.storageCache.get(t);if(!s)throw Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw Error("destination gpu data for memcpy does not exist");if(s.originalSize!==i.originalSize)throw Error("inconsistent source and destination gpu data size");let a=ta(s.originalSize),n=this.backend.getCommandEncoder();this.backend.endComputePass(),n.copyBufferToBuffer(s.gpuData.buffer,0,i.gpuData.buffer,0,a)}registerExternalBuffer(t,r,s){let i;if(s){if(i=s[0],t===s[1])return tt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else i=tl();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),tt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){void 0!==t&&(this.storageCache.delete(t),tt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let s=tn(t),i,a=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,n=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(a||n){let t=(a?this.freeBuffers:this.freeUniformBuffers).get(s);i=t&&t.length>0?t.pop():this.backend.device.createBuffer({size:s,usage:r})}else i=this.backend.device.createBuffer({size:s,usage:r});let o={id:tl(),type:0,buffer:i};return this.storageCache.set(o.id,{gpuData:o,originalSize:Number(t)}),tt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${o.id}`),o}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r="bigint"==typeof t?Number(t):t,s=this.storageCache.get(r);if(!s){if(0===this.storageCache.size)return 0;throw Error("releasing data does not exist")}return tt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${s.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(s.gpuData.buffer),s.originalSize}async download(t,r){let s=this.storageCache.get(Number(t));if(!s)throw Error("data does not exist");await tu(this.backend,s.gpuData.buffer,s.originalSize,r)}refreshPendingBuffers(){if(0!==this.buffersPending.length){if("default"===this.backend.sessionStatus){for(let t of this.buffersPending){let r=ts.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let s=this.freeBuffers.get(t.size)||[];void 0===r||s.length>=r?t.destroy():s.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let s=this.freeUniformBuffers.get(t.size)||[];void 0===r||s.length>=r?t.destroy():s.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);for(let r of(t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t)),this.buffersPending))t.push(r);this.buffersPending=[]}}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(t)),this.sessionCount-=1,0===this.sessionCount&&(tt("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},tc=(...t)=>new td(...t)}),oJ=j(()=>{tp=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},th=t=>new tp(t)}),oY=j(()=>{tm=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},tf=class{static calcShape(t,r,s=!1){let i=t.length,a=r.length;if(0===i)return r;if(0===a)return t;let n=Math.max(t.length,r.length),o=Array(n);if(s){if(i<2||a<2)return;let s=tm.calcMatMulShape([t[i-2],t[i-1]],[r[a-2],r[a-1]]);if(void 0===s)return;[o[n-2],o[n-1]]=s}for(let l=s?3:1;l<=n;l++){let s=i-l<0?1:t[i-l],u=a-l<0?1:r[a-l];if(s!==u&&s>1&&u>1)return;let d=Math.max(s,u);if(s&&u)o[n-l]=Math.max(s,u);else{if(d>1)return;o[n-l]=0}}return o}static isValidBroadcast(t,r){let s=t.length,i=r.length;if(s>i)return!1;for(let a=1;a<=s;a++)if(1!==t[s-a]&&t[s-a]!==r[i-a])return!1;return!0}},tg=class t{static size(r){return t.getSizeFromDimensionRange(r,0,r.length)}static convertShape(t,r=4){let s=t.length;if(0===s)return[];let i=Array(s),a=s-1;for(;a>=0;){if(t[a]%r==0){i[a]=t[a]/r;break}if(r%t[a]!=0)throw Error("cannot convert shape");i[a]=1,r/=t[a],a--}for(a--;a>=0;a--)i[a]=t[a];return i}static sizeFromDimension(r,s){if(s<0||s>r.length)throw Error(`invalid dimension of ${s} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return t.getSizeFromDimensionRange(r,s,r.length)}static sizeToDimension(r,s){if(s<0||s>r.length)throw Error(`invalid dimension of ${s} for sizeToDimension as Tensor has ${r.length} dimensions.`);return t.getSizeFromDimensionRange(r,0,s)}static getSizeFromDimensionRange(t,r,s){let i=1;for(let a=r;a<s;a++){if(t[a]<0)throw Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=Number(t[a])}return i}static computeStrides(t){let r=t.length;if(0===r)return[];if(1===r)return[1];let s=Array(r);s[r-1]=1,s[r-2]=t[r-1];for(let i=r-3;i>=0;--i)s[i]=s[i+1]*t[i+1];return s}static normalizeAxis(t,r){if(t<-r&&t>=r)throw Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(s=>this.normalizeAxis(s,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(r=>t[r]):t.slice().reverse()}static padShape(t,r){let s=t.length;return t.map((t,i)=>t+r[i]+r[i+s])}static areEqual(t,r){return t.length===r.length&&t.every((t,s)=>t===r[s])}},t_=class t{static adjustPoolAttributes(t,r,s,i,a,n){if(!t&&s.length!==r.length-2)throw Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let t=0;t<r.length-2;t++)t>=s.length?s.push(r[t+2]):s[t]=r[t+2];for(let t=0;t<s.length;t++)if(t<i.length){if(i[t]<0)throw Error("strides should be greater than or equal to 1")}else i.push(1);for(let t=0;t<s.length;t++)if(t<a.length){if(a[t]<0)throw Error("dilations should be greater than or equal to 1")}else a.push(1);for(let t=0;t<2*s.length;t++)if(t<n.length){if(n[t]<0)throw Error("pad should be greater than or equal to 1")}else n.push(0);for(let t=0;t<s.length;t++){if(s[t]<=0)throw Error("kernel shapes need to be greater than 0");if(n[t]>=s[t]||n[t+s.length]>=s[t])throw Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,s,i,a,n,o,l){if(l){if(n.length!==2*(r.length-2))throw Error("length of pads should be twice the length of data dimensions");if(s.length!==r.length-2)throw Error("length of strides should be the length of data dimensions");if(a.length!==r.length-2)throw Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<r.length-2;u++)t.adjustPadAndReturnShape(r[u+(o?1:2)],s[u],i[u],a[u],n,u,u+r.length-2,l)}}static computePoolOutputShape(r,s,i,a,n,o,l){if(s.length<=0)throw Error("input shape must be of size greater than 0");let u=[s[0],s[1]];return t.computeShapeHelper(r,s,u,i,a,n,o,l),u}static computeConvOutputShape(r,s,i,a,n,o,l){if(r.length<=0||s.length<=0)throw Error("invalid input tensor dims or invalid filter tensor dims");let u=[r[0],s[0]];return t.computeShapeHelper(!1,r,u,i,a,n,o,l),u}static computeShapeHelper(r,s,i,a,n,o,l,u){if(r)for(let t=0;t<s.length-2;t++)i.push(1);else for(let r=0;r<s.length-2;r++)i.push(t.adjustPadAndReturnShape(s[r+2],a[r],n[r],o[r],l,r,r+s.length-2,u))}static adjustPadAndReturnShape(t,r,s,i,a,n,o,l){let u=s*(i-1)+1;if(!l||"NOTSET"===l)return Math.floor((t+a[n]+a[o]-u)/r+1);switch(l){case"VALID":return a[n]=0,a[o]=0,Math.floor((t-u)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==s)throw Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let s=((t+r-1)/r-1)*r+i-t;return a[n]=Math.floor("SAME_LOWER"===l?(s+1)/2:s/2),a[o]=s-a[n],Math.floor((t+s-i)/r+1)}default:throw Error("Unsupported AutoPad type")}}},tb=class{static getShapeOfGemmResult(t,r,s,i,a){let n,o,l;if(2!==t.length||2!==s.length)throw Error("shape need to be of size 2");r?(n=t[1],o=t[0]):(n=t[0],o=t[1]);let u=-1;if(i?(l=s[0],u=1):(l=s[1],u=0),s[u]!==o)throw Error("dimension mismatch");if(n<=0||l<=0||o<=0)throw Error("invalid shape specified");if(a&&!tf.isValidBroadcast(a,[n,l]))throw Error("gemm: invalid bias shape for broadcast");return[n,l,o]}},ty=-34028234663852886e22,tw=34028234663852886e22}),oZ=j(()=>{oq(),oY(),tx=64,tv=(t,r)=>{if(3===r)throw Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(t)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==r)throw Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw Error(`Unknown data type: ${t}`)}},tM=(t,r=1)=>{let s=tv(t,r);return"string"==typeof s?s:s[0]},tT=(t,r=1)=>{let s=tv(t,r);return"string"==typeof s?s:s[1]},tk=(...t)=>{let r=[];return t.forEach(t=>{0!==t.length&&r.push({type:12,data:t},{type:12,data:tg.computeStrides(t)})}),r},t$=t=>t%4==0?4:t%2==0?2:1,tC=(t="f32",r,s="0")=>r&&1!==r?`vec${r}<${t}>(${s})`:`${t}(${s})`,tS=(t,r,s)=>"f32"===t?s:1===r?`f32(${s})`:`vec${r}<f32>(${s})`,tP=(t,r)=>4===r?`(${t}.x + ${t}.y + ${t}.z + ${t}.w)`:2===r?`(${t}.x + ${t}.y)`:3===r?`(${t}.x + ${t}.y + ${t}.z)`:t,tE=(t,r,s,i)=>t.startsWith("uniforms.")&&s>4?"string"==typeof r?"f16"===i?`${t}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${t}[(${r}) / 4][(${r}) % 4]`:"f16"===i?`${t}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${t}[${Math.floor(r/4)}][${r%4}]`:s>1?`${t}[${r}]`:t,tI=(t,r,s,i,a)=>{let n,o,l,u,d="number"==typeof s,c=d?s:s.length,p=[...Array(c).keys()],h=c<2?"u32":c<=4?`vec${c}<u32>`:`array<u32, ${c}>`,m=tv(r,a),f="string"==typeof m?m:m[1],g={indices:h,value:f,storage:"string"==typeof m?m:m[0],tensor:r},_=t=>"string"==typeof t?t:`${t}u`,b={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},y=d?"uniforms.":"",w=`${y}${t}_shape`,x=`${y}${t}_strides`,v="";for(let t=0;t<c-1;t++)v+=`
    let dim${t} = current / ${tE(x,t,c)};
    let rest${t} = current % ${tE(x,t,c)};
    indices[${t}] = dim${t};
    current = rest${t};
    `;v+=`indices[${c-1}] = current;`;let M=c<2?"":`
  fn o2i_${t}(offset: u32) -> ${g.indices} {
    var indices: ${g.indices};
    var current = offset;
    ${v}
    return indices;
  }`,T=[];if(c>=2)for(let t=c-1;t>=0;t--)T.push(`${tE(x,t,c)} * (indices[${t}])`);let k=c<2?"":`
  fn i2o_${t}(indices: ${g.indices}) -> u32 {
    return ${T.join("+")};
  }`,$=(...t)=>0===c?"0u":`${g.indices}(${t.map(_).join(",")})`,C=(t,r)=>c<2?`${t}`:`${tE(t,r,c)}`,S={},P=(r,s)=>(()=>{if(g.storage===g.value)return`${t}[${r}]=${s};`;if("vec2<u32>"===g.storage&&"i32"===g.value)return`${t}[${r}]=vec2<u32>(u32(${s}), select(0u, 0xFFFFFFFFu, ${s} < 0));`;if("vec2<u32>"===g.storage&&"u32"===g.value)return`${t}[${r}]=vec2<u32>(u32(${s}), 0u);`;if("u32"===g.storage&&"vec4<bool>"===g.value)return`${t}[${r}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${s}));`;throw Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),E=r=>(()=>{if(g.storage===g.value)return`${t}[${r}]`;if("vec2<u32>"===g.storage&&"i32"===g.value)return`i32(${t}[${r}].x)`;if("vec2<u32>"===g.storage&&"u32"===g.value)return`u32(${t}[${r}].x)`;if("u32"===g.storage&&"vec4<bool>"===g.value)return`vec4<bool>(bool(${t}[${r}] & 0xFFu), bool(${t}[${r}] & 0xFF00u), bool(${t}[${r}] & 0xFF0000u), bool(${t}[${r}] & 0xFF000000u))`;throw Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),I=c<2?"":`
  fn get_${t}ByIndices(indices: ${g.indices}) -> ${f} {
    return ${E(`i2o_${t}(indices)`)};
  }`,A=c<2?"":(n=p.map(t=>`d${t}: u32`).join(", "),o=p.map(t=>`d${t}`).join(", "),`
  fn get_${t}(${n}) -> ${f} {
    return get_${t}ByIndices(${$(o)});
  }`),F=c<2?"":`
  fn set_${t}ByIndices(indices: ${g.indices}, value: ${f}) {
    ${P(`i2o_${t}(indices)`,"value")}
  }`,z=c<2?"":(l=p.map(t=>`d${t}: u32`).join(", "),u=p.map(t=>`d${t}`).join(", "),`
  fn set_${t}(${l}, value: ${f}) {
    set_${t}ByIndices(${$(u)}, value);
  }`);return{impl:()=>{let t=[],r=!1;return b.offsetToIndices&&(t.push(M),r=!0),b.indicesToOffset&&(t.push(k),r=!0),b.broadcastedIndicesToOffset&&(Object.values(S).forEach(r=>t.push(r)),r=!0),b.set&&(t.push(z),r=!0),b.setByIndices&&(t.push(F),r=!0),b.get&&(t.push(A),r=!0),b.getByIndices&&(t.push(I),r=!0),!d&&r&&t.unshift(`const ${w} = ${g.indices}(${s.join(",")});`,`const ${x} = ${g.indices}(${tg.computeStrides(s).join(",")});`),t.join(`
`)},type:g,offsetToIndices:r=>(b.offsetToIndices=!0,c<2?r:`o2i_${t}(${r})`),indicesToOffset:r=>(b.indicesToOffset=!0,c<2?r:`i2o_${t}(${r})`),broadcastedIndicesToOffset:(r,s)=>{b.broadcastedIndicesToOffset=!0;let i=`${s.name}broadcastedIndicesTo${t}Offset`;if(i in S)return`${i}(${r})`;let a=[];for(let t=c-1;t>=0;t--){let r=s.indicesGet("outputIndices",t+s.rank-c);a.push(`${C(x,t)} * (${r} % ${C(w,t)})`)}return S[i]=`fn ${i}(outputIndices: ${s.type.indices}) -> u32 {
             return ${a.length>0?a.join("+"):"0u"};
           }`,`${i}(${r})`},indices:$,indicesGet:C,indicesSet:(t,r,s)=>c<2?`${t}=${s};`:`${tE(t,r,c)}=${s};`,set:(...r)=>{if(r.length!==c+1)throw Error(`indices length must be ${c}`);let s=r[c];if("string"!=typeof s)throw Error("value must be string");let i=r.slice(0,c).map(_).join(",");return 0===c?P("0u",s):1===c?P(i[0],s):(b.set=!0,b.setByIndices=!0,b.indicesToOffset=!0,`set_${t}(${i}, ${s})`)},setByOffset:P,setByIndices:(r,s)=>c<2?P(r,s):(b.setByIndices=!0,b.indicesToOffset=!0,`set_${t}ByIndices(${r}, ${s});`),get:(...r)=>{if(r.length!==c)throw Error(`indices length must be ${c}`);let s=r.map(_).join(",");return 0===c?E("0u"):1===c?E(s[0]):(b.get=!0,b.getByIndices=!0,b.indicesToOffset=!0,`get_${t}(${s})`)},getByOffset:E,getByIndices:r=>c<2?E(r):(b.getByIndices=!0,b.indicesToOffset=!0,`get_${t}ByIndices(${r})`),usage:i,name:t,strides:x,shape:w,rank:c}},tA=(t,r,s,i=1)=>tI(t,r,s,"input",i),tF=(t,r,s,i=1)=>tI(t,r,s,"output",i),tz=(t,r,s)=>tI(t,r,s,"atomicOutput",1),tO=(t,r,s,i=1)=>tI(t,r,s,"internal",i),tL=class{constructor(t,r){this.normalizedDispatchGroup=t,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${"number"==typeof t?`${t}u`:t}) { return; }`}mainStart(t=tx){let r="number"==typeof t?t:t[0],s="number"==typeof t?1:t[1],i="number"==typeof t?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||s>this.limits.maxComputeWorkgroupSizeY||i>this.limits.maxComputeWorkgroupSizeZ)throw Error(`workgroup size [${r}, ${s}, ${i}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*s*i>this.limits.maxComputeInvocationsPerWorkgroup)throw Error(`workgroup size [${r}, ${s}, ${i}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let a=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2],n=a?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=a?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*s*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${s}, ${i})
  fn main(${n}) {
    ${o}
  `}appendVariableUniforms(t){0!==t.rank&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if("internal"===t.usage)throw Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let s="input"===t.usage?"read":"read_write",i="atomicOutput"===t.usage?"atomic<i32>":t.type.storage;return`@group(0) @binding(${r}) var<storage, ${s}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if("internal"!==t.usage)throw Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(t,r,s=1){return this.uniforms.push({name:t,type:r,length:s}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let t=[];for(let{name:r,type:s,length:i}of this.uniforms)if(i&&i>4)"f16"===s?t.push(`@align(16) ${r}:array<mat2x4<${s}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${s}>, ${Math.ceil(i/4)}>`);else{let a=null==i||1===i?s:`vec${i}<${s}>`;t.push(`${r}:${a}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}get variablesInfo(){if(0===this.uniforms.length)return;let t=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(r=>[t(r.type),r.length??1])}},tB=(t,r)=>new tL(t,r)}),o0=j(()=>{oq(),oY(),oJ(),oZ(),tN=(t,r)=>{if(!t||1!==t.length)throw Error("Transpose requires 1 input.");if(0!==r.length&&r.length!==t[0].dims.length)throw Error(`perm size ${r.length} does not match input rank ${t[0].dims.length}`)},tD=(t,r)=>0!==r.length?r:[...Array(t).keys()].reverse(),tR=(t,r)=>tg.sortBasedOnPerm(t,tD(t.length,r)),tj=(t,r,s,i)=>{let a=`fn perm(i: ${i.type.indices}) -> ${s.type.indices} {
    var a: ${s.type.indices};`;for(let s=0;s<r;++s)a+=`a[${t[s]}]=i[${s}];`;return a+"return a;}"},tV=(t,r)=>{let s=[],i=[];for(let a=0;a<t.length;++a)1!==t[a]&&s.push(t[a]),1!==t[r[a]]&&i.push(r[a]);return{newShape:s,newPerm:i}},tG=(t,r)=>{let s=0;for(let i=0;i<t.length;++i)if(1!==r[t[i]]){if(t[i]<s)return!1;s=t[i]}return!0},tU=(t,r)=>{let s=t.dataType,i=t.dims.length,a=tD(i,r),n=tR(t.dims,a),o=t.dims,l=n;if(i<2||tG(a,t.dims))return{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let r=tg.size(n);return{outputs:[{dims:n,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(r/64/4)},programUniforms:[{type:12,data:Math.ceil(r/4)}]}},getShaderSource:t=>{let r=tA("input",s,o,4),i=tF("output",s,l,4);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,i)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`}};let{newShape:u,newPerm:d}=tV(t.dims,a),c=tg.areEqual(d,[2,3,1]),p=tg.areEqual(d,[3,1,2]);return 2===u.length||c||p?(l=[(o=c?[u[0],u[1]*u[2]]:p?[u[0]*u[1],u[2]]:u)[1],o[0]],{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let r=tg.size(n);return{outputs:[{dims:n,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(l[1]/16),y:Math.ceil(l[0]/16)},programUniforms:[{type:12,data:r},...tk(o,l)]}},getShaderSource:t=>{let r=tA("a",s,o.length),i=tF("output",s,l.length);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,i)}
  var<workgroup> tile : array<array<${i.type.value}, 17>, 16>;
  ${t.mainStart([16,16,1])}
    let stride = (uniforms.output_shape[1] - 1) / 16 + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * 16u + local_id.x;
    let input_row = workgroup_id_x * 16u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${r.getByIndices(`${r.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * 16u + local_id.x;
    let output_row = workgroup_id_y * 16u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${i.setByIndices(`${i.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`}}):{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let r=tg.size(n);return{outputs:[{dims:n,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:[{type:12,data:r},...tk(o,l)]}},getShaderSource:t=>{let r=tA("a",s,o.length),n=tF("output",s,l.length);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,n)}

  ${tj(a,i,r,n)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${n.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${n.setByOffset("global_idx",r.getByIndices("aIndices"))}
  }`}}},tq=(t,r)=>{tN(t.inputs,r.perm),t.compute(tU(t.inputs[0],r.perm))},tW=t=>th({perm:t.perm})}),o1=j(()=>{oq(),oY(),oZ(),o2(),o0(),tH={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},tK={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},tQ={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},tX={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},tJ=(t,r)=>{let s=[];for(let i=r-t;i<r;++i)s.push(i);return s},tY=(t,r)=>{let s=[],i=t.length;for(let a=0;a<i;a++)-1===r.indexOf(a)&&s.push(t[a]);return[s,r.map(r=>t[r])]},tZ=(t,r)=>{let s=t.length+r.length,i=[],a=0;for(let n=0;n<s;n++)-1===r.indexOf(n)?i.push(t[a++]):i.push(1);return i},t0=(t,r)=>{for(let s=0;s<t.length;++s)if(t[t.length-s-1]!==r-1-s)return!1;return!0},t1=(t,r)=>{let s=[];if(!t0(t,r)){for(let i=0;i<r;++i)-1===t.indexOf(i)&&s.push(i);t.forEach(t=>s.push(t))}return s},t2=(t,r,s,i,a,n,o)=>{let l=s[0].dims,u=tg.size(n),d=tg.size(o),c=tA("_A",s[0].dataType,l),p=tF("output",a,n),h=64;1===u&&(h=256);let m=`
          var<workgroup> aBestValues : array<f32, ${h}>;
       `;return{name:t,shaderCache:{hint:`${r};${h}`,inputDependencies:["type"]},getShaderSource:t=>`
        ${t.registerUniform("reduceSize","u32").declareVariables(c,p)}
        ${m}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${t.mainStart(h)}

          let outputIndex = global_idx / ${h};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${tQ[i]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${h}) {
           let candidate = f32(${c.getByOffset("offset + k")});
           bestValue = ${tH[i]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${h}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${tK[i]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${p.setByOffset("outputIndex",`${"mean"===i?`${p.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${p.type.storage}(${tX[i]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:n,dataType:a}],dispatchGroup:{x:u},programUniforms:[{type:12,data:d}]})}},t3=(t,r,s,i)=>{let a=1===t.inputs.length?s:ro(t.inputs,s),n=a.axes;0!==n.length||a.noopWithEmptyAxes||(n=t.inputs[0].dims.map((t,r)=>r));let o=tg.normalizeAxes(n,t.inputs[0].dims.length),l=o,u=t.inputs[0],d=t1(l,t.inputs[0].dims.length);d.length>0&&(u=t.compute(tU(t.inputs[0],d),{inputs:[0],outputs:[-1]})[0],l=tJ(l.length,u.dims.length));let[c,p]=tY(u.dims,l),h=c;a.keepDims&&(h=tZ(c,o)),t.compute(t2(r,a.cacheKey,[u],i,t.inputs[0].dataType,h,p),{inputs:[u]})},t4=(t,r)=>{t3(t,"ReduceMeanShared",r,"mean")},t6=(t,r)=>{t3(t,"ReduceL1Shared",r,"l1")},t8=(t,r)=>{t3(t,"ReduceL2Shared",r,"l2")},t5=(t,r)=>{t3(t,"ReduceLogSumExpShared",r,"logSumExp")},t9=(t,r)=>{t3(t,"ReduceMaxShared",r,"max")},t7=(t,r)=>{t3(t,"ReduceMinShared",r,"min")},re=(t,r)=>{t3(t,"ReduceProdShared",r,"prod")},rt=(t,r)=>{t3(t,"ReduceSumShared",r,"sum")},rr=(t,r)=>{t3(t,"ReduceSumSquareShared",r,"sumSquare")},rs=(t,r)=>{t3(t,"ReduceLogSumShared",r,"logSum")}}),o2=j(()=>{oq(),oY(),oJ(),oZ(),o1(),ri=t=>{if(!t||0===t.length||t.length>2)throw Error("Reduce op requires 1 or 2 inputs.");if(2===t.length&&1!==t[1].dims.length)throw Error("Invalid axes input dims.")},ra=t=>["","",`var value = ${t.getByIndices("input_indices")};`,""],rn=(t,r,s,i,a,n,o=!1,l=!1)=>{let u=[],d=s[0].dims,c=d.length,p=tg.normalizeAxes(a,c),h=!l&&0===p.length;d.forEach((t,r)=>{h||p.indexOf(r)>=0?o&&u.push(1):u.push(t)});let m=u.length,f=tg.size(u);return{name:t,shaderCache:r,getShaderSource:t=>{let r=[],a=tA("_A",s[0].dataType,c),l=tF("output",n,m),u=i(a,l,p),f=u[2];for(let t=0,s=0;t<c;t++)h||p.indexOf(t)>=0?(o&&s++,f=`for(var j${t}: u32 = 0; j${t} < ${d[t]}; j${t}++) {
                  ${u[2].includes("last_index")?`let last_index = j${t};`:""}
                  ${a.indicesSet("input_indices",t,`j${t}`)}
                  ${f}
                }`):(r.push(`${a.indicesSet("input_indices",t,l.indicesGet("output_indices",s))};`),s++);return`

        ${t.registerUniform("output_size","u32").declareVariables(a,l)}

        ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${a.type.indices};
          let output_indices = ${l.offsetToIndices("global_idx")};

          ${r.join(`
`)}
          ${u[0]}       // init ops for reduce max/min
          ${u[1]}
          ${f}
          ${u[3]}
          ${4===u.length?l.setByOffset("global_idx","value"):u.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...tk(d,u)]})}},ro=(t,r)=>{let s=[];return t[1].dims[0]>0&&t[1].getBigInt64Array().forEach(t=>s.push(Number(t))),th({axes:s,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},rl=(t,r,s,i)=>{let a=t.inputs,n=1===a.length?s:ro(a,s);t.compute(rn(r,{hint:n.cacheKey,inputDependencies:["rank"]},[a[0]],n.noopWithEmptyAxes&&0===n.axes.length?ra:i,n.axes,a[0].dataType,n.keepDims,n.noopWithEmptyAxes),{inputs:[0]})},ru=(t,r)=>{ri(t.inputs),rl(t,"ReduceLogSum",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},rd=(t,r)=>{ri(t.inputs),rl(t,"ReduceL1",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},rc=(t,r)=>{ri(t.inputs),rl(t,"ReduceL2",r,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},rp=(t,r)=>{ri(t.inputs),rl(t,"ReduceLogSumExp",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},rh=(t,r)=>{ri(t.inputs),rl(t,"ReduceMax",r,(t,r,s)=>{let i=[];for(let r=0;r<t.rank;r++)(s.indexOf(r)>=0||0===s.length)&&i.push(t.indicesSet("input_indices",r,0));return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},rm=(t,r)=>{ri(t.inputs),rl(t,"ReduceMean",r,(r,s,i)=>{let a=1;for(let s=0;s<r.rank;s++)(i.indexOf(s)>=0||0===i.length)&&(a*=t.inputs[0].dims[s]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${a});`]})},rf=(t,r)=>{ri(t.inputs),rl(t,"ReduceMin",r,(t,r,s)=>{let i=[];for(let r=0;r<t.rank;r++)(s.indexOf(r)>=0||0===s.length)&&i.push(`input_indices[${r}] = 0;`);return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},rg=(t,r)=>{ri(t.inputs),rl(t,"ReduceProd",r,(t,r)=>[`var value = ${r.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},r_=(t,r)=>{ri(t.inputs),rl(t,"ReduceSum",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},rb=(t,r)=>{ri(t.inputs),rl(t,"ReduceSumSquare",r,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},ry=(t,r,s)=>{if(0===r.length)return s;let i=1,a=1;for(let s=0;s<r.length;s++)-1===r.indexOf(s)?i*=t[s]:a*=t[s];return a<32&&i>1024},rw=(t,r)=>{ry(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rm(t,r):t4(t,r)},rx=(t,r)=>{ry(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rd(t,r):t6(t,r)},rv=(t,r)=>{ry(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rc(t,r):t8(t,r)},rM=(t,r)=>{ry(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rp(t,r):t5(t,r)},rT=(t,r)=>{ry(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rh(t,r):t9(t,r)},rk=(t,r)=>{ry(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rf(t,r):t7(t,r)},r$=(t,r)=>{ry(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rg(t,r):re(t,r)},rC=(t,r)=>{ry(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?r_(t,r):rt(t,r)},rS=(t,r)=>{ry(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rb(t,r):rr(t,r)},rP=(t,r)=>{ry(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?ru(t,r):rs(t,r)}}),o3=j(()=>{oq(),oJ(),o2(),rE=t=>{if(!t||0===t.length||t.length>2)throw Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==t[0].dataType)throw Error("Invalid input type.")},rI=(t,r)=>{rE(t.inputs),t.compute(rn("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],(t,s,i)=>{let a=[];for(let r=0;r<t.rank;r++)(i.indexOf(r)>=0||0===i.length)&&a.push(`input_indices[${r}] = 0;`);return[`${a.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]},[r.axis],7,r.keepDims),{inputs:[0]})},rA=(t,r)=>{rE(t.inputs),t.compute(rn("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],(t,s,i)=>{let a=[];for(let r=0;r<t.rank;r++)(i.indexOf(r)>=0||0===i.length)&&a.push(`input_indices[${r}] = 0;`);return[`${a.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]},[r.axis],7,r.keepDims),{inputs:[0]})},rF=t=>th(t)}),o4=j(()=>{oq(),oY(),oQ(),oZ(),rz=(t,r)=>{let s=t[0],i=t[1],a=t[2],n=t[3],o=t[4],l=t[5];if(o&&l)throw Error("Attention cannot have both past and attention_bias");if(3!==s.dims.length)throw Error('Input "input" must have 3 dimensions');let u=s.dims[0],d=s.dims[1],c=s.dims[2];if(1!==a.dims.length)throw Error('Input "bias" is expected to have 1 dimensions');if(2!==i.dims.length)throw Error('Input "weights" is expected to have 2 dimensions');if(i.dims[0]!==c)throw Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(a.dims[0]!==i.dims[1])throw Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let p=a.dims[0]/3,h=p,m=h;if(r.qkvHiddenSizes.length>0){if(3!==r.qkvHiddenSizes.length)throw Error("qkv_hidden_sizes attribute should have 3 elements");for(let t of r.qkvHiddenSizes)if(t%r.numHeads!=0)throw Error("qkv_hidden_sizes should be divisible by num_heads");p=r.qkvHiddenSizes[0],h=r.qkvHiddenSizes[1],m=r.qkvHiddenSizes[2]}if(p!==h)throw Error("qkv_hidden_sizes first element should be same as the second");if(a.dims[0]!==p+h+m)throw Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let f=0;if(o){if(h!==m)throw Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==o.dims.length)throw Error('Input "past" must have 5 dimensions');if(2!==o.dims[0])throw Error('Input "past" first dimension must be 2');if(o.dims[1]!==u)throw Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==r.numHeads)throw Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==h/r.numHeads)throw Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(f=o.dims[3])}let g=d+f;if(n)throw Error("Mask not supported");if(o)throw Error("past is not supported");if(l){if(4!==l.dims.length)throw Error('Input "attention_bias" must have 4 dimensions');if(l.dims[0]!==u||l.dims[1]!==r.numHeads||l.dims[2]!==d||l.dims[3]!==g)throw Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:u,sequenceLength:d,pastSequenceLength:f,kvSequenceLength:d,totalSequenceLength:g,maxSequenceLength:-1,inputHiddenSize:c,hiddenSize:p,vHiddenSize:m,headSize:Math.floor(p/r.numHeads),vHeadSize:Math.floor(m/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:0,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},rO=(t,r,s)=>r&&t?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${t?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${s?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,rL=(t,r,s,i,a,n,o,l)=>{let u=t$(o?1:n),d=64,c=n/u;c<64&&(d=32);let p=[{type:12,data:r},{type:12,data:s},{type:12,data:i},{type:12,data:a},{type:12,data:c},{type:12,data:Math.ceil(n/u/d)}],h=tM(t.dataType,u),m=tT(1,u),f=["type"];return o&&f.push("type"),l&&f.push("type"),{name:"AttentionProbsSoftmax",shaderCache:{hint:`${d};${h};${u}`,inputDependencies:f},getShaderSource:r=>{let s=tF("x",t.dataType,t.dims,u),i=[s],a=o?tA("seq_lens",o.dataType,o.dims):void 0;a&&i.push(a);let n=l?tA("total_sequence_length_input",l.dataType,l.dims):void 0;n&&i.push(n);let c=tT(t.dataType);return`
  var<workgroup> thread_max: array<f32, ${d}>;
  var<workgroup> thread_sum: array<f32, ${d}>;
  ${r.registerUniforms([{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(...i)}
  ${r.mainStart([d,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${rO(a,n,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${d}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${m}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${m}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(u){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw Error(`Unsupported components: ${u}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${d}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${m}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${m}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(u){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw Error(`Unsupported components: ${u}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${d}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${s.type.value}(${c}(1.0) / ${c}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${m}(x[offset + i]);
        x[offset + i] = ${s.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${s.type.value}(${c}(0));
        }`:""};
  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(n/d),y:a,z:r*s},programUniforms:p})}},rB=(t,r,s,i,a,n,o,l,u)=>{let d=o+n.kvSequenceLength,c=[n.batchSize,n.numHeads,n.sequenceLength,d],p=t>1&&i,h=n.kvNumHeads?n.kvNumHeads:n.numHeads,m=p?[n.batchSize,h,d,n.headSize]:void 0,f=n.nReps?n.nReps:1,g=0===n.scale?1/Math.sqrt(n.headSize):n.scale,_=t$(n.headSize),b=n.headSize/_,y={x:Math.ceil(d/12),y:Math.ceil(n.sequenceLength/12),z:n.batchSize*n.numHeads},w=[{type:12,data:n.sequenceLength},{type:12,data:b},{type:12,data:d},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:1,data:g},{type:12,data:o},{type:12,data:n.kvSequenceLength},{type:12,data:f}],x=p&&i&&tg.size(i.dims)>0,v=["type","type"];x&&v.push("type"),a&&v.push("type"),l&&v.push("type"),u&&v.push("type");let M=[{dims:c,dataType:r.dataType,gpuDataType:0}];return p&&M.push({dims:m,dataType:r.dataType,gpuDataType:0}),{name:"AttentionProbs",shaderCache:{hint:`${_};${void 0!==a};${void 0!==i};${t}`,inputDependencies:v},getRunData:()=>({outputs:M,dispatchGroup:y,programUniforms:w}),getShaderSource:t=>{let n=tA("q",r.dataType,r.dims,_),o=[n,tA("key",s.dataType,s.dims,_)];if(x){let t=tA("past_key",i.dataType,i.dims,_);o.push(t)}a&&o.push(tA("attention_bias",a.dataType,a.dims));let d=l?tA("seq_lens",l.dataType,l.dims):void 0;d&&o.push(d);let h=u?tA("total_sequence_length_input",u.dataType,u.dims):void 0;h&&o.push(h);let g=tF("output",r.dataType,c),b=[g];p&&b.push(tF("present_key",r.dataType,m,_));let y=tT(1,_);return`
  const TILE_SIZE = 12u;

  var<workgroup> tileQ: array<${n.type.storage}, 144>;
  var<workgroup> tileK: array<${n.type.storage}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...o,...b)}
  ${t.mainStart([12,12,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${1===f?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${1===f?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${rO(d,h,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${x&&p?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${p?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${y}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${x&&p?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${p?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${y}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(_){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw Error(`Unsupported components: ${_}`)}})()};
        output[outputIdx] = ${g.type.value} (sum * uniforms.alpha) + ${a?"attention_bias[outputIdx]":"0.0"};
    }
  }`}}},rN=(t,r,s,i,a,n,o,l)=>{let u=n+a.kvSequenceLength,d=a.nReps?a.nReps:1,c=a.vHiddenSize*d,p=t>1&&i,h=a.kvNumHeads?a.kvNumHeads:a.numHeads,m=p?[a.batchSize,h,u,a.headSize]:void 0,f=[a.batchSize,a.sequenceLength,c],g={x:Math.ceil(a.vHeadSize/12),y:Math.ceil(a.sequenceLength/12),z:a.batchSize*a.numHeads},_=[{type:12,data:a.sequenceLength},{type:12,data:u},{type:12,data:a.vHeadSize},{type:12,data:a.numHeads},{type:12,data:a.headSize},{type:12,data:c},{type:12,data:n},{type:12,data:a.kvSequenceLength},{type:12,data:d}],b=p&&i&&tg.size(i.dims)>0,y=["type","type"];b&&y.push("type"),o&&y.push("type"),l&&y.push("type");let w=[{dims:f,dataType:r.dataType,gpuDataType:0}];return p&&w.push({dims:m,dataType:r.dataType,gpuDataType:0}),{name:"AttentionScore",shaderCache:{hint:`${void 0!==i};${t}`,inputDependencies:y},getRunData:()=>({outputs:w,dispatchGroup:g,programUniforms:_}),getShaderSource:t=>{let a=tA("probs",r.dataType,r.dims),n=[a,tA("v",s.dataType,s.dims)];b&&n.push(tA("past_value",i.dataType,i.dims));let u=o?tA("seq_lens",o.dataType,o.dims):void 0;o&&n.push(u);let c=l?tA("total_sequence_length_input",l.dataType,l.dims):void 0;l&&n.push(c);let h=[tF("output",r.dataType,f)];return p&&h.push(tF("present_value",r.dataType,m)),`
  const TILE_SIZE = 12u;
  var<workgroup> tileQ: array<${a.type.value}, 144>;
  var<workgroup> tileV: array<${a.type.value}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...n,...h)}
  ${t.mainStart([12,12,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${1===d?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${1===d?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${rO(u,c,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${b&&p?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${p?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${a.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${b&&p?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${p?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},rD=(t,r,s,i,a,n,o,l,u,d,c,p)=>{let h=Math.min(t.outputCount,1+(o?1:0)+(l?1:0)),m=h>1?d.pastSequenceLength:0,f=m+d.kvSequenceLength,g=u&&tg.size(u.dims)>0?u:void 0,_=[r,s];h>1&&o&&tg.size(o.dims)>0&&_.push(o),g&&_.push(g),c&&_.push(c),p&&_.push(p);let b=t.compute(rB(h,r,s,o,g,d,m,c,p),{inputs:_,outputs:h>1?[-1,1]:[-1]})[0];t.compute(rL(b,d.batchSize,d.numHeads,m,d.sequenceLength,f,c,p),{inputs:c&&p?[b,c,p]:[b],outputs:[]});let y=[b,i];h>1&&l&&tg.size(l.dims)>0&&y.push(l),c&&y.push(c),p&&y.push(p),t.compute(rN(h,b,i,l,d,m,c,p),{inputs:y,outputs:h>1?[0,2]:[0]})},rR=(t,r)=>{let s=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],i=r.sequenceLength,a=r.inputHiddenSize,n=r.headSize,o={x:Math.ceil(r.headSize/12),y:Math.ceil(r.sequenceLength/12),z:r.batchSize*r.numHeads},l=[t.inputs[0],t.inputs[1],t.inputs[2]],u=[{type:12,data:i},{type:12,data:a},{type:12,data:n},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}];return t.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:s,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:s,dataType:t.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:u}),getShaderSource:t=>{let r=tF("output_q",l[0].dataType,s),i=tF("output_k",l[0].dataType,s),a=tF("output_v",l[0].dataType,s),n=tA("input",l[0].dataType,l[0].dims),o=tA("weight",l[1].dataType,l[1].dims),u=tA("bias",l[2].dataType,l[2].dims),d=n.type.storage;return`
  const TILE_SIZE = 12u;
  var<workgroup> tileInput: array<${d}, 144>;
  var<workgroup> tileWeightQ: array<${d}, 144>;
  var<workgroup> tileWeightK: array<${d}, 144>;
  var<workgroup> tileWeightV: array<${d}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(n,o,u,r,i,a)}
  ${t.mainStart([12,12,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${d}(0);
    var valueK = ${d}(0);
    var valueV = ${d}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`}},{inputs:l,outputs:[-1,-1,-1]})},rj=(t,r)=>{let s=rz(t.inputs,r),[i,a,n]=rR(t,s);return rD(t,i,a,n,t.inputs[4],void 0,void 0,void 0,t.inputs[5],s)}}),o6=j(()=>{ed(),oq(),oY(),oJ(),oZ(),rV=(t,r)=>{if(!t||5!==t.length)throw Error("BatchNormalization requires 5 inputs");let s=(t,r,s)=>{let i=r.length;if(i!==t.length)throw Error(`${s}: num dimensions != ${i}`);r.forEach((r,i)=>{if(r!==t[i])throw Error(`${s}: dim[${i}] do not match`)})};if(t[0].dims.length>1){let i="NHWC"===r.format?r.spatial?t[0].dims.slice(-1):t[0].dims.slice(-1).concat(t[0].dims.slice(1,t[0].dims.length-1)):t[0].dims.slice(1,r.spatial?2:void 0);s(t[1].dims,i,"Invalid input scale"),s(t[2].dims,i,"Invalid input B"),s(t[3].dims,i,"Invalid input mean"),s(t[4].dims,i,"Invalid input var")}else s(t[1].dims,[1],"Invalid input scale"),s(t[2].dims,[1],"Invalid input B"),s(t[3].dims,[1],"Invalid input mean"),s(t[4].dims,[1],"Invalid input var")},rG=(t,r)=>{let{epsilon:s,spatial:i,format:a}=r,n=t[0].dims,o=i?t$(n[n.length-1]):1,l="NHWC"===a&&n.length>1?o:1,u=tg.size(n)/o,d=i?n.length:n,c=tA("x",t[0].dataType,t[0].dims,o),p=tA("scale",t[1].dataType,t[1].dims,l),h=tA("bias",t[2].dataType,t[2].dims,l),m=tA("inputMean",t[3].dataType,t[3].dims,l),f=tA("inputVar",t[4].dataType,t[4].dims,l),g=tF("y",t[0].dataType,d,o),_=()=>{let t="";if(i)t=`let cOffset = ${1===n.length?"0u":"NHWC"===a?`outputIndices[${n.length-1}] / ${o}`:"outputIndices[1]"};`;else if("NCHW"===a)t=`
            ${g.indicesSet("outputIndices","0","0")}
            let cOffset = ${g.indicesToOffset("outputIndices")};`;else{t=`var cIndices = ${p.type.indices}(0);
                       cIndices[0] = outputIndices[${n.length-1}];`;for(let r=1;r<p.rank;r++)t+=`cIndices[${r}] = outputIndices[${r}];`;t+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return t};return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${i}_${o}`,inputDependencies:i?["rank","type","type","type","type"]:void 0},getShaderSource:t=>`
  const epsilon = ${s};
  ${t.registerUniform("outputSize","u32").declareVariables(c,p,h,m,f,g)}
  ${t.mainStart()}
  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${g.offsetToIndices(`global_idx * ${o}`)};
    ${_()}
    let scale = ${p.getByOffset("cOffset")};
    let bias = ${h.getByOffset("cOffset")};
    let inputMean = ${m.getByOffset("cOffset")};
    let inputVar = ${f.getByOffset("cOffset")};
    let x = ${c.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${g.setByOffset("global_idx","value")}
  }`,getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:i?[{type:12,data:u},...tk(n)]:[{type:12,data:u}]})}},rU=t=>th(t),rq=(t,r)=>{let{inputs:s,outputCount:i}=t,a=rU({...r,outputCount:i});if(h.webgpu.validateInputContent&&rV(s,a),r.trainingMode)throw Error("BatchNormalization trainingMode is not supported yet.");t.compute(rG(s,a))}}),o8=j(()=>{oY(),oZ(),rW=t=>{if(3!==t[0].dims.length)throw Error("input should have 3 dimensions");if(![320,640,1280].includes(t[0].dims[2]))throw Error("number of channels should be 320, 640 or 1280");if(1!==t[1].dims.length)throw Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw Error("last dimension of input and bias are not the same")},rH=t=>{let r=t[0].dims,s=t[0].dims[2],i=tg.size(r)/4,a=t[0].dataType,n=tA("input",a,r,4),o=tA("bias",a,[s],4),l=tA("residual",a,r,4),u=tF("output",a,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:t=>`
  const channels = ${s}u / 4;
  ${t.declareVariables(n,o,l,u)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let value = ${n.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${l.getByOffset("global_idx")};
    ${u.setByOffset("global_idx","value")}
  }`}},rK=t=>{rW(t.inputs),t.compute(rH(t.inputs))}}),o5=j(()=>{oq(),oY(),oJ(),oZ(),rQ=(t,r,s,i,a,n,o)=>{let l=Math.ceil(r/4),u="";u="string"==typeof a?`${a}(a)`:a("a");let d=tA("inputData",s,[l],4),c=tF("outputData",i,[l],4),p=[{name:"vec_size",type:"u32"}];return o&&p.push(...o),`
      ${t.registerUniforms(p).declareVariables(d,c)}

  ${n??""}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${d.getByOffset("global_idx")};
    ${c.setByOffset("global_idx",u)}
  }`},rX=(t,r,s,i,a,n=t.dataType,o,l)=>{let u=[{type:12,data:Math.ceil(tg.size(t.dims)/4)}];return o&&u.push(...o),{name:r,shaderCache:{hint:a,inputDependencies:["type"]},getShaderSource:r=>rQ(r,tg.size(t.dims),t.dataType,n,s,i,l),getRunData:r=>({outputs:[{dims:t.dims,dataType:n}],dispatchGroup:{x:Math.ceil(tg.size(r[0].dims)/64/4)},programUniforms:u})}},rJ=t=>{t.compute(rX(t.inputs[0],"Abs","abs"))},rY=t=>{t.compute(rX(t.inputs[0],"Acos","acos"))},rZ=t=>{t.compute(rX(t.inputs[0],"Acosh","acosh"))},r0=t=>{t.compute(rX(t.inputs[0],"Asin","asin"))},r1=t=>{t.compute(rX(t.inputs[0],"Asinh","asinh"))},r2=t=>{t.compute(rX(t.inputs[0],"Atan","atan"))},r3=t=>{t.compute(rX(t.inputs[0],"Atanh","atanh"))},r4=t=>th(t),r6=(t,r)=>{let s;switch(r.to){case 10:s="vec4<f16>";break;case 1:s="vec4<f32>";break;case 12:s="vec4<u32>";break;case 6:s="vec4<i32>";break;case 9:s="vec4<bool>";break;default:throw RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}t.compute(rX(t.inputs[0],"Cast",s,void 0,r.cacheKey,r.to))},r8=t=>{let r,s,i=t.length>=2&&0!==t[1].data,a=t.length>=3&&0!==t[2].data;switch(t[0].dataType){case 1:r=i?t[1].getFloat32Array()[0]:-34028234663852886e22,s=a?t[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=i?t[1].getUint16Array()[0]:64511,s=a?t[2].getUint16Array()[0]:31743;break;default:throw Error("Unsupport data type")}return th({min:r,max:s})},r5=(t,r)=>{let s=r||r8(t.inputs),i=tT(t.inputs[0].dataType);t.compute(rX(t.inputs[0],"Clip",t=>`clamp(${t}, vec4<${i}>(uniforms.min), vec4<${i}>(uniforms.max))`,void 0,s.cacheKey,void 0,[{type:t.inputs[0].dataType,data:s.min},{type:t.inputs[0].dataType,data:s.max}],[{name:"min",type:i},{name:"max",type:i}]),{inputs:[0]})},r9=t=>{t.compute(rX(t.inputs[0],"Ceil","ceil"))},r7=t=>{t.compute(rX(t.inputs[0],"Cos","cos"))},se=t=>{t.compute(rX(t.inputs[0],"Cosh","cosh"))},st=t=>th(t),sr=(t,r)=>{let s=tT(t.inputs[0].dataType);t.compute(rX(t.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${s}(${r.alpha});

  fn elu_f32(a: ${s}) -> ${s} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${s}>) -> vec4<${s}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},ss=(t="f32")=>`
const r0: ${t} = 0.3275911;
const r1: ${t} = 0.254829592;
const r2: ${t} = -0.284496736;
const r3: ${t} = 1.421413741;
const r4: ${t} = -1.453152027;
const r5: ${t} = 1.061405429;

fn erf_vf32(v: vec4<${t}>) -> vec4<${t}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,si=t=>{let r=tT(t.inputs[0].dataType);t.compute(rX(t.inputs[0],"Erf",t=>`erf_vf32(${t})`,ss(r)))},sa=t=>{t.compute(rX(t.inputs[0],"Exp","exp"))},sn=t=>{t.compute(rX(t.inputs[0],"Floor","floor"))},so=t=>{let r=tT(t.inputs[0].dataType);t.compute(rX(t.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,ss(r)))},sl=(t,r)=>{let s=tT(t.inputs[0].dataType);t.compute(rX(t.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${s}>(0.0))`,`const leaky_relu_alpha_ = ${s}(${r.alpha});`,r.cacheKey))},su=t=>{t.compute(rX(t.inputs[0],"Not",t=>`!${t}`))},sd=t=>{t.compute(rX(t.inputs[0],"Neg",t=>`-${t}`))},sc=t=>{t.compute(rX(t.inputs[0],"Reciprocal",t=>`1.0/${t}`))},sp=t=>{let r=tT(t.inputs[0].dataType);t.compute(rX(t.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},sh=t=>{t.compute(rX(t.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},sm=t=>th(t),sf=(t,r)=>{let s=tT(t.inputs[0].dataType);t.compute(rX(t.inputs[0],"HardSigmoid",t=>`max(vec4<${s}>(0.0), min(vec4<${s}>(1.0), ${r.alpha} * ${t} + vec4<${s}>(${r.beta})))`,void 0,r.cacheKey))},sg=t=>{t.compute(rX(t.inputs[0],"Sin","sin"))},s_=t=>{t.compute(rX(t.inputs[0],"Sinh","sinh"))},sb=t=>{t.compute(rX(t.inputs[0],"Sqrt","sqrt"))},sy=t=>{t.compute(rX(t.inputs[0],"Tan","tan"))},sw=t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`,sx=t=>{t.compute(rX(t.inputs[0],"Tanh",sw))},sv=(t="f32")=>`
const fast_gelu_a: ${t} = 0.5;
const fast_gelu_b: ${t} = 0.7978845608028654;
const fast_gelu_c: ${t} = 0.035677408136300125;

fn tanh_v(v: vec4<${t}>) -> vec4<${t}> {
  return ${sw("v")};
}
`,sM=t=>`(fast_gelu_a + fast_gelu_a * tanh_v(${t} * (fast_gelu_c * ${t} * ${t} + fast_gelu_b))) * ${t}`,sT=t=>{let r=tT(t.inputs[0].dataType);t.compute(rX(t.inputs[0],"FastGelu",sM,sv(r),void 0,t.inputs[0].dataType))},sk=(t,r)=>{let s=tT(t.inputs[0].dataType);return t.compute(rX(t.inputs[0],"ThresholdedRelu",t=>`select(vec4<${s}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${s}>(${r.alpha});`,r.cacheKey)),0},s$=t=>{t.compute(rX(t.inputs[0],"Log","log"))},sC=(t,r)=>`
const alpha = vec4<${t}>(${r});
const one = ${t}(1.0);
const zero = ${t}(0.0);

fn quick_gelu_impl(x: vec4<${t}>) -> vec4<${t}> {
  let v = x *alpha;
  var x1 : vec4<${t}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,sS=t=>`quick_gelu_impl(${t})`,sP=(t,r)=>{let s=tT(t.inputs[0].dataType);t.compute(rX(t.inputs[0],"QuickGelu",sS,sC(s,r.alpha),r.cacheKey,t.inputs[0].dataType))}}),o9=j(()=>{oY(),oZ(),o5(),sE=t=>{if(3!==t[0].dims.length)throw Error("input should have 3 dimensions");if(![2560,5120,10240].includes(t[0].dims[2]))throw Error("hidden state should be 2560, 5120 or 10240");if(1!==t[1].dims.length)throw Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw Error("last dimension of input and bias are not the same")},sI=t=>{let r=t[0].dims.slice();r[2]=r[2]/2;let s=tA("input",t[0].dataType,t[0].dims,4),i=tA("bias",t[0].dataType,[t[0].dims[2]],4),a=tF("output",t[0].dataType,r,4),n=tg.size(r)/4,o=tM(t[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:r=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${t[0].dims[2]/4/2}u;

  ${r.declareVariables(s,i,a)}

  ${ss(o)}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${a.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},sA=t=>{sE(t.inputs),t.compute(sI(t.inputs))}}),o7=j(()=>{oq(),oY(),oZ(),sF=(t,r,s,i,a,n,o,l,u,d,c,p)=>{let h,m;"string"==typeof l?h=m=(t,r)=>`${l}((${t}),(${r}))`:"function"==typeof l?h=m=l:(h=l.scalar,m=l.vector);let f=tF("outputData",c,i.length,4),g=tA("aData",u,r.length,4),_=tA("bData",d,s.length,4),b;if(a){if(n){let t=1===tg.size(r),i=1===tg.size(s),a=r.length>0&&r[r.length-1]%4==0,n=s.length>0&&s[s.length-1]%4==0;b=t||i?f.setByOffset("global_idx",m(t?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"),i?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"))):`
            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};
            let offsetA = ${g.broadcastedIndicesToOffset("outputIndices",f)};
            let offsetB = ${_.broadcastedIndicesToOffset("outputIndices",f)};
            ${f.setByOffset("global_idx",m(o||a?g.getByOffset("offsetA / 4u"):`${g.type.value}(${g.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||n?_.getByOffset("offsetB / 4u"):`${_.type.value}(${_.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else b=f.setByOffset("global_idx",m(g.getByOffset("global_idx"),_.getByOffset("global_idx")))}else{if(!n)throw Error("no necessary to use scalar implementation for element-wise binary op implementation.");let t=(t,r,s="")=>{let i=`aData[indexA${r}][componentA${r}]`,a=`bData[indexB${r}][componentB${r}]`;return`
            let outputIndices${r} = ${f.offsetToIndices(`global_idx * 4u + ${r}u`)};
            let offsetA${r} = ${g.broadcastedIndicesToOffset(`outputIndices${r}`,f)};
            let offsetB${r} = ${_.broadcastedIndicesToOffset(`outputIndices${r}`,f)};
            let indexA${r} = offsetA${r} / 4u;
            let indexB${r} = offsetB${r} / 4u;
            let componentA${r} = offsetA${r} % 4u;
            let componentB${r} = offsetB${r} % 4u;
            ${t}[${r}] = ${s}(${h(i,a)});
          `};b=9===c?`
            var data = vec4<u32>(0);
            ${t("data",0,"u32")}
            ${t("data",1,"u32")}
            ${t("data",2,"u32")}
            ${t("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${t("outputData[global_idx]",0)}
            ${t("outputData[global_idx]",1)}
            ${t("outputData[global_idx]",2)}
            ${t("outputData[global_idx]",3)}
          `}return`
        ${t.registerUniform("vec_size","u32").declareVariables(g,_,f)}

        ${p??""}

        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${b}
      }`},sz=(t,r,s,i,a,n,o=s.dataType)=>{let l=s.dims.map(t=>Number(t)??1),u=i.dims.map(t=>Number(t)??1),d=!tg.areEqual(l,u),c=l,p=tg.size(l),h=!1,m=!1,f=[d];if(d){let t=tf.calcShape(l,u,!1);if(!t)throw Error("Can't perform binary op on the given tensors");c=t.slice(),p=tg.size(c);let r=1===tg.size(l),s=1===tg.size(u),i=l.length>0&&l[l.length-1]%4==0,a=u.length>0&&u[u.length-1]%4==0;f.push(r),f.push(s),f.push(i),f.push(a);let n=1;for(let t=1;t<c.length;t++){let r=l[l.length-t];if(r===u[u.length-t])n*=r;else break}n%4==0?(m=!0,h=!0):(r||s||i||a)&&(h=!0)}else h=!0;return f.push(h),{name:t,shaderCache:{hint:r+f.map(t=>t.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:t=>sF(t,l,u,c,h,d,m,a,s.dataType,i.dataType,o,n),getRunData:()=>({outputs:[{dims:c,dataType:o}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:12,data:Math.ceil(tg.size(c)/4)},...tk(l,u,c)]})}},sO=(t,r,s,i,a,n)=>{t.compute(sz(r,a??"",t.inputs[0],t.inputs[1],s,i,n))},sL=t=>{sO(t,"Add",(t,r)=>`${t}+${r}`)},sB=t=>{sO(t,"Div",(t,r)=>`${t}/${r}`)},sN=t=>{sO(t,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},sD=t=>{sO(t,"Mul",(t,r)=>`${t}*${r}`)},sR=t=>{let r=tA("input",t.inputs[0].dataType,t.inputs[0].dims).type.value;sO(t,"Pow",{scalar:(t,r)=>`pow_custom(${t},${r})`,vector:(t,r)=>`pow_vector_custom(${t},${r})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${"i32"===r?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},sj=t=>{sO(t,"Sub",(t,r)=>`${t}-${r}`)},sV=t=>{sO(t,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},sG=t=>{sO(t,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},sU=t=>{sO(t,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},sq=t=>{sO(t,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),le=j(()=>{oq(),oY(),oJ(),oZ(),sW=(t,r)=>{if(!t||t.length<1)throw Error("too few inputs");let s=t[0],i=s.dataType,a=s.dims.length;t.forEach((t,n)=>{if(0!==n){if(t.dataType!==i)throw Error("input tensors should be one type");if(t.dims.length!==a)throw Error("input tensors should have the same shape");t.dims.forEach((t,i)=>{if(i!==r&&t!==s.dims[i])throw Error("non concat dimensions must match")})}})},sH=(t,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${t}u>(${r});
    for (var i: u32 = 0u; i < ${t}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${t}u;
  }`,sK=(t,r)=>{let s=t.length,i=[];for(let a=0;a<s;++a){let n=r.setByOffset("global_idx",t[a].getByIndices("indices"));1===s?i.push(n):0===a?i.push(`if (inputIndex == ${a}u) { ${n} }`):a===s-1?i.push(`else { ${n} }`):i.push(`else if (inputIndex == ${a}) { ${n} }`)}return i.join(`
`)},sQ=(t,r,s,i)=>{let a=tg.size(s),n=Array(t.length),o=Array(t.length),l=0,u=[],d=[],c=[{type:12,data:a}];for(let s=0;s<t.length;++s)l+=t[s].dims[r],n[s]=l,d.push(t[s].dims.length),o[s]=tA(`input${s}`,i,d[s]),u.push("rank"),c.push({type:12,data:n[s]});for(let r=0;r<t.length;++r)c.push(...tk(t[r].dims));c.push(...tk(s));let p=tF("output",i,s.length),h=p.indicesGet("indices",r),m=Array.from(Array(n.length).keys()).map(t=>`uniforms.sizeInConcatAxis${t}`).join(",");return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c}),getShaderSource:r=>`

  ${(()=>{r.registerUniform("outputSize","u32");for(let s=0;s<t.length;s++)r.registerUniform(`sizeInConcatAxis${s}`,"u32");return r.declareVariables(...o,p)})()}

  ${sH(n.length,m)}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${p.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${h});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${n.length}u>(${m});
      ${h} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${sK(o,p)}
  }`}},sX=(t,r)=>{let s=t.inputs,i=s[0].dims,a=tg.normalizeAxis(r.axis,i.length);sW(s,a);let n=i.slice();n[a]=s.reduce((t,r)=>t+(r.dims.length>a?r.dims[a]:0),0);let o=s.filter(t=>tg.size(t.dims)>0);t.compute(sQ(o,a,n,s[0].dataType),{inputs:o})},sJ=t=>th({axis:t.axis})}),lt=j(()=>{oq(),oY(),sY=(t,r,s="f32")=>{switch(t.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${s}(uniforms.clip_min)), ${r}(${s}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${s}(uniforms.alpha) * value + ${s}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${s}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw Error(`Unsupported activation ${t.activation}`)}},sZ=(t,r)=>{"Clip"===t.activation?r.push({type:1,data:t.clipMax},{type:1,data:t.clipMin}):"HardSigmoid"===t.activation?r.push({type:1,data:t.alpha},{type:1,data:t.beta}):"LeakyRelu"===t.activation&&r.push({type:1,data:t.alpha})},s0=(t,r)=>{"Clip"===t.activation?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===t.activation?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===t.activation&&r.push({name:"alpha",type:"f32"})},s1=t=>{let r=t?.activation||"";if("HardSigmoid"===r){let[s,i]=t?.activation_params||[.2,.5];return{activation:r,alpha:s,beta:i}}if("Clip"===r){let[s,i]=t?.activation_params||[ty,tw];return{activation:r,clipMax:i,clipMin:s}}if("LeakyRelu"===r){let[s]=t?.activation_params||[.01];return{activation:r,alpha:s}}return{activation:r}}}),lr=j(()=>{s2=(t,r)=>{switch(t){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw Error(`${t}-component is not supported.`)}},s3=t=>`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      `}),ls=j(()=>{s4=t=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${t}.x), i32(${t}.y), i32(${t}.z), 1));
}
`}),li=j(()=>{oq(),oY(),oZ(),lt(),s6=(t,r,s,i,a)=>{let n=i-s;return`
      ${Array.from({length:s}).map((s,o)=>`
      if (${tE(r.shape,o,r.rank)} != 1) {
        ${r.indicesSet(t,o,tE(a,o+n,i))}
      } else {
        ${r.indicesSet(t,o,0)}
      }`).join("")}
`},s8=(t,r,s,i,a=!1,n)=>{let o=t[0].dims,l=t[1].dims,u=o[o.length-2],d=l[l.length-1],c=o[o.length-1],p=t$(d),h=t$(c),m=t$(u),f=tg.size(s)/p/m,g=t.length>2,_=i?i.slice(0,-2):s.slice(0,-2),b=[tg.size(_),u,d],y=[{type:12,data:f},{type:12,data:u},{type:12,data:d},{type:12,data:c}];return sZ(r,y),y.push(...tk(_,o,l)),g&&y.push(...tk(t[2].dims)),y.push(...tk(b)),{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${p};${h};${m};${a}`,inputDependencies:g?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(s):s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:y}),getShaderSource:i=>{let n=tO("batch_dims",t[0].dataType,_.length),u=tA("a",t[0].dataType,o.length,h),d=tA("b",t[1].dataType,l.length,p),c=tF("output",t[0].dataType,b.length,p),f=tM(c.type.tensor),y=sY(r,c.type.value,f),w=[u,d],x="";if(g){let r=a?p:1;w.push(tA("bias",t[2].dataType,t[2].dims.length,r)),x=`${a?`value += bias[col / ${r}];`:`value += ${c.type.value}(bias[row + i]);`}`}let v=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];return s0(r,v),`
  ${i.registerUniforms(v).registerInternalVariables(n).declareVariables(...w,c)}
  ${i.mainStart()}
    ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${p})) * ${p};
    var index1 = global_idx / (uniforms.N / ${p});
    let stride1 = uniforms.M / ${m};
    let row = (index1 % stride1) * ${m};
    let batch = index1 / stride1;

    ${2===s.length?"":`let batch_indices = ${n.offsetToIndices("batch")};`}

    var a_indices: ${u.type.indices};
    ${s6("a_indices",u,u.rank-2,n.rank,"batch_indices")}
    ${u.indicesSet("a_indices",u.rank-2,0)}
    ${u.indicesSet("a_indices",u.rank-1,0)}
    let a_offset = ${u.indicesToOffset("a_indices")};

    var b_indices: ${d.type.indices};
    ${s6("b_indices",d,d.rank-2,n.rank,"batch_indices")}
    ${d.indicesSet("b_indices",d.rank-2,0)}
    ${d.indicesSet("b_indices",d.rank-1,0)}
    let b_offset = ${d.indicesToOffset("b_indices")};
    var values: array<${c.type.value}, ${m}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${h}) {
      ${(()=>{let t=`var a_data: ${u.type.value};`;for(let r=0;r<h;r++)t+=`
              let b_data${r} = b[(b_offset + (k + ${r}) * uniforms.N + col) / ${p}];`;for(let r=0;r<m;r++){t+=`a_data = a[(a_offset + (row + ${r}) * uniforms.K + k) / ${h}];`;for(let s=0;s<h;s++)t+=`
            values[${r}] = fma(${d.type.value}(a_data${1===h?"":`[${s}]`}), b_data${s}, values[${r}]);
`}return t})()}
    }
    for (var i = 0u; i < ${m}u; i++) {
      var value = values[i];
      ${x}
      ${y}
      let cur_indices = ${c.type.indices}(batch, row + i, col);
      let offset = ${c.indicesToOffset("cur_indices")};
      ${c.setByOffset(`offset / ${p}`,"value")};
    }
  }
  `}}}}),la=j(()=>{oq(),oY(),oZ(),lt(),li(),lr(),s5=(t,r)=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,s9=(t,r)=>t?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${3===r?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${3===r?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${3===r?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,s7=(t,r,s="f32",i,a=!1,n=32,o=!1,l=32)=>{let u=r[1]*t[1],d=r[0]*t[0],c=a?u:n,p=a?n:u,h=c/r[0],m=n/r[1];if(!((a&&4===h&&4===t[1]||!a&&(3===h||4===h))&&c%r[0]==0&&n%r[1]==0&&4===t[0]))throw Error(`If transposeA ${a} is true, innerElementSize ${h} and workPerThread[1] ${t[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${c} must be divisible by workgroupSize[0]${r[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${t[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${s}>, ${c/h}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${s}>, ${d/t[0]}>, ${n}>;

const rowPerThread = ${t[1]};
const colPerThread = ${t[0]};
const innerElementSize = ${h};
const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${i?`let batchIndices = ${i.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${u};

  let num_tiles = ${o?`${Math.ceil(l/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${l}`:"0"};

  var acc: array<vec4<${s}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${m};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${s5(a,i)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${m}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${i?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${3===h?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${s9(a,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},ie=(t,r)=>t?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,it=t=>t?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ir=(t,r,s="f32",i,a=!1,n=32,o=!1,l=32,u=!1)=>{let d=t[1]*r[1],c=t[0]*r[0],p=a?d:n,h=a?n:d;if(!(h%r[1]==0&&p%r[0]==0&&n%r[1]==0))throw Error(`tileAHight ${h} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}, tileInner ${n} must be divisible by workgroupSize[1]${r[1]}`);let m=h/r[1],f=p/r[0],g=n/r[1],_=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${d};
    let globalColStart = i32(workgroupId.x) * ${c};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          ${ie(a,i)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${i?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${s}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${a?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${d};

let tileRowA = i32(localId.y) * ${m};
let tileColA = i32(localId.x) * ${f};
let tileRowB = i32(localId.y) * ${g};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${m}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${ie(a,i)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${i?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${s}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${it(a)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${s}, ${p}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${s}, ${c}>, ${n}>;
  const rowPerThread = ${t[1]};
  const colPerThread = ${t[0]};
  const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${i?`let batchIndices = ${i.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(l/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${l}`:"0"};

    var acc : array<array<${s}, colPerThread>, rowPerThread>;
    ${_}
  }
`},is=(t,r,s,i,a=!1)=>{let[n,o,l,u]=i,d=tM(i[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${s2(t,d)} {
      var value = ${s2(t,d)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${o.type.indices};
        ${s6("aIndices",o,o.rank-2,n.rank,"batchIndices")}
        ${o.indicesSet("aIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("aIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${s2(t,d)} {
      var value = ${s2(t,d)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${l.type.indices};
        ${s6("bIndices",l,l.rank-2,n.rank,"batchIndices")}
        ${l.indicesSet("bIndices",l.rank-2,"u32(row)")}
        ${l.indicesSet("bIndices",l.rank-1,"u32(colIn)")}
        value = ${l.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${s2(t,d)}) {
      let col = colIn * ${t};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${a?"bias[colIn]":`${s2(t,d)}(bias[row])`};`:""}
        ${s}
        ${u.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ii=(t,r,s,i,a=!1,n)=>{let o=t[0].dims,l=t[1].dims,u=o.slice(0,-2),d=l.slice(0,-2),c=i?i.slice(0,-2):s.slice(0,-2),p=tg.size(c),h=o[o.length-2],m=o[o.length-1],f=l[l.length-1],g=m%4==0&&f%4==0,_=h<=8?[4,1,1]:[4,4,1],b=[8,8,1],y=[Math.ceil(f/b[0]/_[0]),Math.ceil(h/b[1]/_[1]),Math.ceil(p/b[2]/_[2])],w=g?4:1,x=[...u,h,m/w],v=x.length,M=[...d,m,f/w],T=M.length,k=[p,h,f/w],$=[{type:6,data:h},{type:6,data:f},{type:6,data:m}];sZ(r,$),$.push(...tk(c,x,M));let C=["rank","rank"],S=t.length>2;return S&&($.push(...tk(t[2].dims)),C.push("rank")),$.push(...tk(k)),{name:"MatMul",shaderCache:{hint:`${_};${r.activation};${g};${a}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:n?n(s):s,dataType:t[0].dataType}],dispatchGroup:{x:y[0],y:y[1],z:y[2]},programUniforms:$}),getShaderSource:s=>{let i=c.length,n=tO("batchDims",t[0].dataType,i,1),o=tM(t[0].dataType),l=tA("a",t[0].dataType,v,w),u=tA("b",t[1].dataType,T,w),d=tF("result",t[0].dataType,k.length,w),p=[l,u];if(S){let r=a?w:1;p.push(tA("bias",t[2].dataType,t[2].dims.length,r))}let h=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];s0(r,h);let m=tM(d.type.tensor),f=is(w,S,sY(r,d.type.value,m),[n,l,u,d],a);return`
  ${s.registerUniforms(h).registerInternalVariables(n).declareVariables(...p,d)}
  ${f}
  ${g?s7(_,b,o,n):ir(_,b,o,n)}
                   `}}}}),ln=j(()=>{oq(),oH(),oZ(),lt(),lr(),ls(),la(),ia=(t,r,s,i,a=!1,n,o=4,l=4,u=4,d="f32")=>{let c=t=>{switch(t){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw Error(`innerElementSize ${t} is not supported.`)}},p=t?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,h=t?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,m=t?"row":"col",f=t?"col":"row",g=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${m} / outWidth;
    let outCol = ${m} % outWidth;

    let WRow = ${f} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${f} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${f} % inChannels;
    var resData = ${s2(o,d)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${t?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])"} && xCol >= 0 && xCol < ${t?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])"}) {
      ${p}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${(t=>{switch(t){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${d}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw Error(`innerElementSize ${t} is not supported.`)}})(o)}
    }
    return resData;`,_=t?r&&i?`
    let col = colIn * ${o};
    ${g}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${g}
    }
    return ${s2(o,d)}(0.0);`:i&&s?`
    let col = colIn * ${o};
    ${g}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${g}
    }
    return ${s2(o,d)}(0.0);`,b=t?i&&s?c(l):`
    let col = colIn * ${l};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${c(l)}
    }
    return ${s2(l,d)}(0.0);`:`
    let col = colIn * ${l};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${c(l)}
    }
    return ${s2(l,d)}(0.0);`,y=s2(u,d),w=t?s2(o,d):s2(l,d),x=t?s2(l,d):s2(o,d),v=sY(n,y,d);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${w} {
      ${t?_:b}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {
      ${t?b:_}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${y}) {
      let col = colIn * ${u};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${h}
      ${s3(a)}
      ${v}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},io=(t,r,s,i,a,n,o,l,u)=>{let d="NHWC"===r.format,c=d?t[0].dims[3]:t[0].dims[1],p=s[0],h=d?s[2]:s[3],m=d?s[1]:s[2],f=d?s[3]:s[1],g=d&&(c%4==0||c%3==0)&&f%4==0,_=d?f:h*m,b=d?h*m:f,y=[8,8,1],w=i<=8?[4,1,1]:[4,4,1],x=[Math.ceil(_/y[0]/w[0]),Math.ceil(b/y[1]/w[1]),Math.ceil(p/y[2]/w[2])];tt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${x}`);let v=g?d&&c%4!=0?3:4:1,M=y[1]*w[1],T=y[0]*w[0],k=Math.max(y[0]*v,y[1]),$=i%M==0,C=a%T==0,S=n%k==0,P=g?[v,4,4]:[1,1,1],E=[{type:6,data:i},{type:6,data:a},{type:6,data:n},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];sZ(r,E),E.push(...tk(t[0].dims,t[1].dims));let I=["rank","rank"];return o&&(E.push(...tk(t[2].dims)),I.push("rank")),E.push(...tk(s)),{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${v};${g};${$};${C};${S};${M};${T};${k}`,inputDependencies:I},getRunData:()=>({outputs:[{dims:u?u(s):s,dataType:t[0].dataType}],dispatchGroup:{x:x[0],y:x[1],z:x[2]},programUniforms:E}),getShaderSource:i=>{let a=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];s0(r,a);let n=g?4:1,u=tM(t[0].dataType),c=`
      fn setOutputAtIndex(flatIndex : i32, value : ${g?`vec4<${u}>`:u}) {
        result[flatIndex] = ${g?`vec4<${u}>`:u}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${g?`vec4<${u}>`:u}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${g?"/ 4":""}, value);
      }`,p=[tA("x",t[0].dataType,t[0].dims.length,3===v?1:v),tA("w",t[1].dataType,t[1].dims.length,n)],h=tF("result",t[0].dataType,s.length,n);if(o){let r=tA("bias",t[2].dataType,t[2].dims.length,n);p.push(r),c+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${g?`vec4<${u}>`:u} {
          return bias[coords.${d?"w":"y"}${g?"/ 4":""}];
        }`}return`
        ${s4("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${i.registerUniforms(a).declareVariables(...p,h)}
        ${c}
        ${ia(d,$,C,S,o,r,P[0],P[1],P[2],u)}
        ${g?s7(w,y,u,void 0,!d,k):ir(w,y,u,void 0,!d,k,!1,void 0,l)}`}}}}),lo=j(()=>{oq(),oH(),oY(),oZ(),lt(),lr(),il=t=>{let r=1;for(let s=0;s<t.length;s++)r*=t[s];return r},iu=t=>"number"==typeof t?[t,t,t]:t,id=(t,r)=>r<=1?t:t+(t-1)*(r-1),ic=(t,r,s,i=1)=>{let a=id(r,i);return Math.floor((t[0]*(s-1)-s+a)/2)},ip=(t,r,s,i,a)=>{null==a&&(a=ic(t,r[0],i[0]));let n=[0,0,0,s];for(let s=0;s<3;s++)t[s]+2*a>=r[s]&&(n[s]=Math.trunc((t[s]-r[s]+2*a)/i[s]+1));return n},ih=(t,r,s,i,a,n,o,l,u,d)=>{let c,p,h,m;if("VALID"===t&&(t=0),"number"==typeof t){c={top:t,bottom:t,left:t,right:t,front:t,back:t};let f=ip([r,s,i,1],[l,u,d],1,[a,n,o],t);p=f[0],h=f[1],m=f[2]}else if(Array.isArray(t)){if(!t.every((t,r,s)=>t===s[0]))throw Error(`Unsupported padding parameter: ${t}`);c={top:t[0],bottom:t[1],left:t[2],right:t[3],front:t[4],back:t[5]};let f=ip([r,s,i,1],[l,u,d],1,[a,n,o],t[0]);p=f[0],h=f[1],m=f[2]}else if("SAME_UPPER"===t){p=Math.ceil(r/a),h=Math.ceil(s/n),m=Math.ceil(i/o);let t=(p-1)*a+l-r,f=(h-1)*n+u-s,g=(m-1)*o+d-i,_=Math.floor(t/2),b=Math.floor(f/2),y=Math.floor(g/2);c={top:b,bottom:f-b,left:y,right:g-y,front:_,back:t-_}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:c,outDepth:p,outHeight:h,outWidth:m}},im=(t,r,s,i,a,n=!1,o="channelsLast")=>{let l,u,d,c,p;if("channelsLast"===o)[l,u,d,c,p]=t;else if("channelsFirst"===o)[l,p,u,d,c]=t;else throw Error(`Unknown dataFormat ${o}`);let[h,,m,f,g]=r,[_,b,y]=iu(s),[w,x,v]=iu(i),M=id(m,w),T=id(f,x),k=id(g,v),{padInfo:$,outDepth:C,outHeight:S,outWidth:P}=ih(a,u,d,c,_,b,y,M,T,k),E=n?h*p:h,I=[0,0,0,0,0];return"channelsFirst"===o?I=[l,E,C,S,P]:"channelsLast"===o&&(I=[l,C,S,P,E]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:d,inWidth:c,inChannels:p,outDepth:C,outHeight:S,outWidth:P,outChannels:E,padInfo:$,strideDepth:_,strideHeight:b,strideWidth:y,filterDepth:m,filterHeight:f,filterWidth:g,effectiveFilterDepth:M,effectiveFilterHeight:T,effectiveFilterWidth:k,dilationDepth:w,dilationHeight:x,dilationWidth:v,inShape:t,outShape:I,filterShape:r}},ig=(t,r,s,i,a,n)=>{let o="channelsLast"===n,l=(o?t[0].dims[3]:t[0].dims[1],[Math.ceil(il(({x:s.map((t,r)=>r)}).x.map(t=>s[t]))/64),1,1]);tt("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${l}`);let u=[{type:12,data:tg.size(s)},{type:12,data:i},{type:12,data:a},{type:12,data:r.strides},{type:12,data:r.dilations}];sZ(r,u),u.push(...tk(t[0].dims,t[1].dims));let d=["rank","rank"],c=3===t.length;return c&&(u.push(...tk(t[2].dims)),d.push("rank")),u.push(...tk(s)),{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${o};1;${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:l[0],y:l[1],z:l[2]},programUniforms:u}),getShaderSource:n=>{let l=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:i.length},{name:"pads",type:"u32",length:a.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];s0(r,l);let u=tM(t[0].dataType),d=tA("x",t[0].dataType,t[0].dims.length,1),p=tA("W",t[1].dataType,t[1].dims.length,1),h=[d,p],m=tF("result",t[0].dataType,s.length,1),f="";if(c){let r=tA("bias",t[2].dataType,t[2].dims.length,1);h.push(r),f+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${u} {
          return bias[${o?tE("coords",4,5):tE("coords",1,5)}];
        }`}let g=s2(1,u),_=sY(r,g,u);return`
            ${f}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${d.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${p.getByIndices("aIndices")};
            }
          ${n.registerUniforms(l).declareVariables(...h,m)}
          ${n.mainStart()}
          ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${m.offsetToIndices("global_idx")};
              let batch = ${tE("coords",0,d.rank)};
              let d2 = ${o?tE("coords",d.rank-1,d.rank):tE("coords",1,d.rank)};
              let xFRCCorner = vec3<u32>(${o?tE("coords",1,d.rank):tE("coords",2,d.rank)},
              ${o?tE("coords",2,d.rank):tE("coords",3,d.rank)},
              ${o?tE("coords",3,d.rank):tE("coords",4,d.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?tE("uniforms.x_shape",1,d.rank):tE("uniforms.x_shape",2,d.rank)};
              let xShapeZ = ${o?tE("uniforms.x_shape",2,d.rank):tE("uniforms.x_shape",3,d.rank)};
              let xShapeW = ${o?tE("uniforms.x_shape",3,d.rank):tE("uniforms.x_shape",4,d.rank)};
              let xShapeU = ${o?tE("uniforms.x_shape",4,d.rank):tE("uniforms.x_shape",1,d.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${c?"value = value + getBiasByOutputCoords(coords)":""};
              ${_}
              result[global_idx] = f32(value);
          }`}}}}),ll=j(()=>{oq(),oY(),oZ(),lt(),i_=(t,r,s,i)=>{let a=t.length>2,n=a?"value += b[output_channel];":"",o=t[0].dims,l=t[1].dims,u="NHWC"===r.format,d=u?s[3]:s[1],c=d/r.group,p=u&&c>=4?t$(d):1,h=tg.size(s)/p,m=[{type:12,data:h},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:c}];return sZ(r,m),m.push(...tk(o,[l[0],l[1],l[2],l[3]/p])),m.push(...tk([s[0],s[1],s[2],s[3]/p])),{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${p}`,inputDependencies:a?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(s):s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:m}),getShaderSource:i=>{let d=tF("output",t[0].dataType,s.length,p),c=tM(d.type.tensor),h=sY(r,d.type.value,c),m=tA("x",t[0].dataType,o.length),f=tA("w",t[1].dataType,l.length,p),g=[m,f];a&&g.push(tA("b",t[2].dataType,t[2].dims,p));let _=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];s0(r,_);let b=u?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${m.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${f.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${m.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${f.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${i.registerUniforms(_).declareVariables(...g,d)}

  ${i.mainStart()}
    ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${d.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${p} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${u?2:1}];

    var value: ${d.type.value} = ${d.type.value}(0);
    ${b}
    ${n}
    ${h}
    ${d.setByOffset("global_idx","value")}
  }`}}},ib=(t,r,s,i)=>{let a=t.length>2,n=t$(s[3]),o=t$(s[2]),l=tg.size(s)/n/o,u=[t[0].dims[0],t[0].dims[1],t[0].dims[2],t[0].dims[3]/n],d=[t[1].dims[0],t[1].dims[1],t[1].dims[2],t[1].dims[3]/n],c=[s[0],s[1],s[2],s[3]/n],p=[{type:12,data:l},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];sZ(r,p),p.push(...tk(u,d,c));let h=(o-1)*r.strides[1]+d[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${n};${o};${h};${d[0]};${d[1]}`,inputDependencies:a?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(s):s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p}),getShaderSource:s=>{let i=tF("output",t[0].dataType,c.length,n),l=tM(i.type.tensor),p=sY(r,i.type.value,l),m=tA("x",t[0].dataType,u.length,n),f=tA("w",t[1].dataType,d.length,n),g=[m,f];a&&g.push(tA("b",t[2].dataType,t[2].dims,n));let _=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return s0(r,_),`
  ${s.registerUniforms(_).declareVariables(...g,i)}
  ${s.mainStart()}
    ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${m.type.value}, ${h}>;
    var values: array<${i.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${d[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${h}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${m.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${m.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${d[1]}; w_width++) {
          let w_val = ${f.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${a?"value += b[output_channel];":""}
      ${p}
      ${i.set("batch","row","col + i","output_channel","value")};
    }
  }`}}}}),lu=j(()=>{oY(),ln(),lo(),la(),ll(),lt(),li(),o0(),iy=(t,r,s,i,a,n)=>{let o=t[0],l=t.slice(n?1:2,n?3:4),u=l.length,d=r[0],c=r.slice(2).map((t,r)=>t+(t-1)*(s[r]-1)),p=l.map((t,r)=>t+i[r]+i[r+u]).map((t,r)=>Math.floor((t-c[r]+a[r])/a[r]));return p.splice(0,0,o),p.splice(n?3:1,0,d),p},iw=[2,3,1,0],ix=(t,r)=>{if(!t||2!==t.length&&3!==t.length)throw Error("Conv requires 2 or 3 inputs");if(t[0].dims.length>5)throw Error("greater than 5D is not supported");if(t[0].dims.length!==t[1].dims.length)throw Error("filter does not have same dimension as input");if(t[0].dims["NHWC"===r.format?t[0].dims.length-1:1]!==t[1].dims[1]*r.group)throw Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===t.length&&(1!==t[2].dims.length||t[1].dims[0]!==t[2].dims[0]))throw Error("invalid bias");let s=t[0].dims.length-2;if(r.dilations.length!==s)throw Error(`dilations should be ${s}D`);if(r.strides.length!==s)throw Error(`strides should be ${s}D`);if(r.pads.length!==2*s)throw Error(`pads should be ${2*s}D`);if(0!==r.kernelShape.length&&r.kernelShape.length!==t[1].dims.length-2)throw Error("invalid kernel shape")},iv=(t,r)=>{let s=t.kernelShape.slice();s.length<r[1].dims.length-2&&s.push(...Array(r[1].dims.length-2-s.length).fill(0));for(let t=2;t<r[1].dims.length;++t)0===s[t-2]&&(s[t-2]=r[1].dims[t]);let i=t.pads.slice();t_.adjustPadsBasedOnAutoPad(r[0].dims,t.strides,t.dilations,s,i,"NHWC"===t.format,t.autoPad);let a=Object.assign({},t);return Object.assign(a,{kernelShape:s,pads:i}),a},iM=t=>{let r=s1(t),s=t.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],format:s,dilations:t.dilations,group:t.group,kernelShape:t.kernel_shape,pads:t.pads,strides:t.strides,wIsConst:t.w_is_const(),...r,cacheKey:`${t.format};${r.activation};`}},iT=(t,r,s,i)=>{let a="NHWC"===s.format,n=iy(r[0].dims,r[1].dims,s.dilations,s.pads,s.strides,a);if(1!==s.group){let o=[r[0]];if(a){let i=t.kernelCustomData.wT??t.compute(tU(r[1],iw),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=i),o.push(i)}else o.push(r[1]);3===r.length&&o.push(r[2]),!t.adapterInfo.isArchitecture("ampere")&&a&&r[1].dims[0]===s.group&&1===r[1].dims[1]&&1===s.dilations[0]&&1===s.dilations[1]?t.compute(ib(o,s,n,i),{inputs:o}):t.compute(i_(o,s,n,i),{inputs:o});return}let o=3===r.length,l=r[0].dims[a?1:2],u=r[0].dims[a?2:3],d=r[0].dims[a?3:1],c=r[1].dims[2],p=r[1].dims[3],h=n[a?1:2],m=n[a?2:3],f=n[a?3:1],g=a&&c===l&&p===u&&0===s.pads[0]&&0===s.pads[1];if(g||1===c&&1===p&&1===s.dilations[0]&&1===s.dilations[1]&&1===s.strides[0]&&1===s.strides[1]&&0===s.pads[0]&&0===s.pads[1]){let c=n[0],p,_,b,y=[];if(a){let i=t.kernelCustomData.wT??t.compute(tU(r[1],iw),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];if(s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=i),g){let t=l*u*d;p=r[0].reshape([1,c,t]),_=i.reshape([1,t,f]),b=[1,c,f]}else p=r[0].reshape([c,l*u,d]),_=i.reshape([1,d,f]),b=[c,h*m,f];y.push(p),y.push(_)}else p=r[0].reshape([c,d,l*u]),_=r[1].reshape([1,f,d]),b=[c,f,h*m],y.push(_),y.push(p);o&&y.push(r[2]);let w=b[2],x=y[0].dims[y[0].dims.length-1];w<8&&x<8?t.compute(s8(y,s,n,b,a,i),{inputs:y}):t.compute(ii(y,s,n,b,a,i),{inputs:y});return}let _=t.kernelCustomData.wT??t.compute(tU(r[1],iw),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=_);let b=[r[0],_];o&&b.push(r[2]);let y=a?h*m:f,w=a?f:h*m,x=c*p*d;t.compute(io(b,s,n,y,w,x,o,!0,i),{inputs:b})},ik=(t,r)=>{let s="NHWC"===r.format,i=[t.inputs[0].reshape(s?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];3===t.inputs.length&&i.push(t.inputs[2]);let a=[0,r.pads[0],0,r.pads[1]],n=[1].concat(r.strides),o=[1].concat(r.dilations),l=[1].concat(r.kernelShape),u=iv({...r,pads:a,strides:n,dilations:o,kernelShape:l},i);iT(t,i,u,t=>s?[t[0],t[2],t[3]]:[t[0],t[1],t[3]])},i$=(t,r,s)=>{let i="NHWC"===s.format?"channelsLast":"channelsFirst",a=iv(s,r),n="NOTSET"===s.autoPad?s.pads:s.autoPad,o=im(r[0].dims,r[1].dims,s.strides,s.dilations,n,!1,i);t.compute(ig(r,a,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],i))},iC=(t,r)=>{if(ix(t.inputs,r),3===t.inputs[0].dims.length)ik(t,r);else if(5===t.inputs[0].dims.length)i$(t,t.inputs,r);else{let s=iv(r,t.inputs);iT(t,t.inputs,s)}}}),ld=j(()=>{oq(),oH(),oY(),oZ(),iS=(t,r,s)=>{let i=t.length>2,a=r.outputShape,n="NHWC"===r.format,o=r.group,l=t[1].dims,u=l[2]/o,d=l[3],c=n?t$(u):1,p=n?t$(d):1,h=n?1===d?c:p:1,m=tg.size(a)/p,f=[Math.ceil(m/64),1,1];tt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${f}`);let g=["rank","rank"],_=[r.strides[0],r.strides[1]],b=[r.kernelShape[n?1:2],r.kernelShape[n?2:3]],y=[r.dilations[0],r.dilations[1]],w=[b[0]+(r.dilations[0]<=1?0:(r.kernelShape[n?1:2]-1)*(r.dilations[0]-1)),b[1]+(r.dilations[1]<=1?0:(r.kernelShape[n?2:3]-1)*(r.dilations[1]-1))],x=[w[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),w[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],v=[{type:12,data:m},{type:12,data:_},{type:12,data:b},{type:12,data:y},{type:12,data:w},{type:6,data:x},{type:12,data:u},{type:12,data:d},...tk(t[0].dims,t[1].dims)];return i&&(v.push(...tk(t[2].dims)),g.push("rank")),v.push(...tk(a)),{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${c}${h}${p}${1===d}`,inputDependencies:g},getRunData:()=>({dispatchGroup:{x:f[0],y:f[1],z:f[2]},outputs:[{dims:s?s(a):a,dataType:t[0].dataType}],programUniforms:v}),getShaderSource:r=>{let s=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:_.length},{name:"filter_dims",type:"u32",length:b.length},{name:"dilations",type:"u32",length:b.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:x.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],o=tM(t[0].dataType),l=n?1:2,u=n?2:3,m=n?3:1,f=tA("W",t[1].dataType,t[1].dims.length,h),g=tA("Dy",t[0].dataType,t[0].dims.length,c),y=[g,f];i&&y.push(tA("bias",t[2].dataType,[a[m]].length,p));let v=tF("result",t[0].dataType,a.length,p),M=`
            let outputIndices = ${v.offsetToIndices(`global_idx * ${p}`)};
            let batch = ${v.indicesGet("outputIndices",0)};
            let d1 = ${v.indicesGet("outputIndices",m)};
            let r = ${v.indicesGet("outputIndices",l)};
            let c = ${v.indicesGet("outputIndices",u)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${v.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${l}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }

              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${u}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + ${c}) {
                  let xValue = ${n?g.getByOffset(`${g.indicesToOffset(`${g.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${c}`):g.get("batch","inputChannel","idyR","idyC")};
                  ${(()=>{let t="";if(1===c)t+=`
        let w_offset = ${f.indicesToOffset(`${f.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
        let wValue = ${f.getByOffset(`w_offset / ${h}`)};
        dotProd = dotProd + xValue * wValue;`;else if(1===d)t+=`
          let wValue = ${f.getByOffset(`${f.indicesToOffset(`${f.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)} / ${h}`)};
          dotProd = dotProd + dot(xValue, wValue);`;else for(let r=0;r<c;r++)t+=`
            let wValue${r} = ${f.getByOffset(`${f.indicesToOffset(`${f.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${r}, wOutChannel)`)} / ${h}`)};
            dotProd = dotProd + xValue[${r}] * wValue${r};`;return t})()}
                  inputChannel = inputChannel + ${c};
                }
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${i?` + bias[d1 / ${p}]`:""};
            ${v.setByOffset("global_idx","value")};
          `;return`
    ${r.registerUniforms(s).declareVariables(...y,v)}
      ${r.mainStart()}
      ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${M}}`}}}}),lc=j(()=>{ld(),lt(),o0(),iP=(t,r,s,i,a,n)=>(t-1)*r+s+(i-1)*a+1-n,iE=(t,r,s,i,a)=>{let n=Math.floor(t/2);"SAME_UPPER"===r?(s[i]=n,s[a]=t-n):"SAME_LOWER"===r&&(s[i]=t-n,s[a]=n)},iI=(t,r,s,i,a,n,o,l,u,d)=>{let c=t.length-2,p=0===d.length;u.length<c&&u.push(...Array(c-u.length).fill(0));let h=t[0],m=r[l?3:1]*a;for(let a=0,h=t.length-c-(l?1:0);a<c;++a,++h){let l=t[h],m=p?l*o[a]:d[a];iE(iP(l,o[a],n[a],r[h],s[a],m),i,n,a,a+c),p&&d.push(o[a]*(l-1)+u[a]+(r[h]-1)*s[a]+1-n[a]-n[a+c])}d.splice(0,0,h),d.splice(l?3:1,0,m)},iA=(t,r)=>{let s=t.kernelShape.slice();if(0===t.kernelShape.length||0===t.kernelShape.reduce((t,r)=>t*r,1)){s.length=0;for(let t=2;t<r[1].dims.length;++t)s.push(r[1].dims[t])}let i="NHWC"===t.format;s.splice(0,0,r[1].dims[0]),s.splice(i?3:1,0,r[1].dims[1]);let a=t.pads.slice(),n=t.outputShape.slice(),o=t.outputPadding.slice(),l=r[0].dims,u=t.dilations.slice();0===u.reduce((t,r)=>t+r,0)&&(u=Array(r[0].dims.length-2).fill(1));let d=t.strides.slice();0===d.reduce((t,r)=>t+r,0)&&(d=Array(r[0].dims.length-2).fill(1)),iI(l,s,u,t.autoPad,t.group,a,d,i,o,n);let c=Object.assign({},t);return Object.assign(c,{kernelShape:s,pads:a,outputPadding:o,outputShape:n,dilations:u,strides:d}),c},iF=t=>{let r=s1(t),s=t.format,i=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof t.autoPad>"u"?0:t.autoPad],a=t.dilations,n=t.group,o=t.kernelShape,l=t.pads,u=t.strides,d=t.wIsConst();return{autoPad:i,format:s,dilations:a,group:n,kernelShape:o,outputPadding:t.outputPadding,outputShape:t.outputShape,pads:l,strides:u,wIsConst:d,...r,cacheKey:`${t.format};${r.activation};`}},iz=(t,r)=>{if(!t||2!==t.length&&3!==t.length)throw Error("Conv requires 2 or 3 inputs");if(4!==t[0].dims.length&&3!==t[0].dims.length)throw Error("currently only support 2-dimensional conv");if(t[0].dims.length!==t[1].dims.length)throw Error("filter does not have same dimension as input");if(t[0].dims["NHWC"===r.format?t[0].dims.length-1:1]!==t[1].dims[0])throw Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let s=t[1].dims[1]*r.group;if(3===t.length&&(1!==t[2].dims.length||t[2].dims[0]!==s))throw Error("invalid bias");let i=t[0].dims.length-2;if(r.dilations.reduce((t,r)=>t+r,0)>0&&r.dilations.length!==i)throw Error(`dilations should be ${i}D`);if(r.strides.reduce((t,r)=>t+r,0)>0&&r.strides.length!==i)throw Error(`strides should be ${i}D`);if(r.pads.reduce((t,r)=>t+r,0)>0&&r.pads.length!==2*i)throw Error(`pads should be ${2*i}D`);if(r.outputPadding.length!==i&&0!==r.outputPadding.length)throw Error(`output_padding should be ${i}D`);if(r.kernelShape.reduce((t,r)=>t+r,0)>0&&0!==r.kernelShape.length&&r.kernelShape.length!==t[1].dims.length-2)throw Error("invalid kernel shape");if(0!==r.outputShape.length&&r.outputShape.length!==t[0].dims.length-2)throw Error("invalid output shape")},iO=(t,r,s,i)=>{let a=t.kernelCustomData.wT??t.compute(tU(r[1],[2,3,0,1]),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=a);let n=[r[0],a];3===r.length&&n.push(r[2]),t.compute(iS(n,s,i),{inputs:n})},iL=(t,r)=>{let s="NHWC"===r.format,i=[t.inputs[0].reshape(s?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];3===t.inputs.length&&i.push(t.inputs[2]);let a=r.kernelShape;(0===a.length||0===a[0])&&(a=[t.inputs[1].dims[2]]);let n=r.dilations;(0===n.length||0===n[0])&&(n=[1]);let o=r.strides;(0===o.length||0===o[0])&&(o=[1]);let l=r.pads;0===l.length&&(l=[0,0]),l=[0,l[0],0,l[1]],o=[1].concat(o),n=[1].concat(n),a=[1].concat(a);let u=r.outputPadding;u=[0].concat(u);let d=iA({...r,pads:l,strides:o,dilations:n,kernelShape:a,outputPadding:u},i);iO(t,i,d,t=>s?[t[0],t[2],t[3]]:[t[0],t[1],t[3]])},iB=(t,r)=>{if(iz(t.inputs,r),3===t.inputs[0].dims.length)iL(t,r);else{let s=iA(r,t.inputs);iO(t,t.inputs,s)}}}),lp=j(()=>{oq(),oY(),oJ(),oZ(),iN=(t,r,s,i)=>{let a=tg.size(r),n=r.length,o=tA("input",t,n),l=tF("output",t,n),u=6===s.dataType?s.getInt32Array()[0]:Number(s.getBigInt64Array()[0]),d=tg.normalizeAxis(u,n);return{name:"CumSum",shaderCache:{hint:i.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},{type:12,data:d},...tk(r,r)]}),getShaderSource:t=>{let r=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,s=tE("uniforms.input_shape","uniforms.axis",n),a=i.reverse?r+(i.exclusive?" + 1":""):"0",u=i.reverse?s:r+(i.exclusive?"":" + 1");return`
                ${t.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,l)}
                ${t.mainStart()}
                  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${l.offsetToIndices("global_idx")};
                  var sum = ${l.type.value}(0);
                  let first : i32 = ${a};
                  let last : i32 = ${u};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${l.setByOffset("global_idx","sum")};
                }`}}},iD=(t,r)=>{let s=t.inputs[0].dims,i=t.inputs[0].dataType,a=t.inputs[1];t.compute(iN(i,s,a,r),{inputs:[0]})},iR=t=>{let r=1===t.exclusive,s=1===t.reverse;return th({exclusive:r,reverse:s})}}),lh=j(()=>{oq(),oY(),oJ(),oZ(),ij=t=>{if(!t||1!==t.length)throw Error("DepthToSpace requires 1 input.");if(4!==t[0].dims.length)throw Error("DepthToSpace requires 4D input.")},iV=(t,r,s,i)=>{let a=[];a.push(`fn perm(i: ${i.type.indices}) -> ${s.type.indices} {
    var a: ${s.type.indices};`);for(let i=0;i<r;++i)a.push(s.indicesSet("a",t[i],`i[${i}]`));return a.push("return a;}"),a.join(`
`)},iG=(t,r)=>{let s,i,a,n,o,l,u="NHWC"===r.format,d=r.blocksize,c="DCR"===r.mode;u?([s,i,a,n]=t.dims,o=c?[s,i,a,d,d,n/d**2]:[s,i,a,n/d**2,d,d],l=c?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([s,i,a,n]=[t.dims[0],t.dims[2],t.dims[3],t.dims[1]],o=c?[s,d,d,n/d**2,i,a]:[s,n/d**2,d,d,i,a],l=c?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let p=t.reshape(o),h=p.dims.length,m=t.dataType,f=tA("a",m,h),g=tF("output",m,h);return{name:"DepthToSpace",shaderCache:{hint:`${t.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:t=>{let r=u?[s,i*d,a*d,n/d**2]:[s,n/d**2,i*d,a*d],o=tg.size(r),c=p.dims,h=tg.sortBasedOnPerm(c,l);return{outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...tk(c,h)]}},getShaderSource:t=>`
  ${t.registerUniform("output_size","u32").declareVariables(f,g)}

  ${iV(l,h,f,g)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${g.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${g.setByOffset("global_idx",f.getByIndices("aIndices"))}
  }`}},iU=(t,r)=>{ij(t.inputs),t.compute(iG(t.inputs[0],r))},iq=t=>th({blocksize:t.blocksize,mode:t.mode,format:t.format})}),lm=j(()=>{oq(),oY(),oJ(),oZ(),iK="^"+(iH="("+(iW="[a-zA-Z]|\\.\\.\\.")+")+")+"$",iQ="^("+iH+",)*"+iH+"$",iX=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let s=this.symbolToIndices.get(t);void 0===s?s=[r]:s.push(r),this.symbolToIndices.set(t,s)}},iJ=class{constructor(t,r){this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=[],this.outputDims=[];let[s,i]=r.includes("->")?r.split("->",2):[r,""];if(!s.match(RegExp(iQ)))throw Error("Invalid LHS term");if(s.split(",").forEach((r,s)=>{let i=t[s].dims.slice();if(!r.match(RegExp(iK)))throw Error("Invalid LHS term");let a=this.processTerm(r,!0,i,s);this.lhs.push(a)}),""===i)i+=[...this.symbolToInfo.entries()].filter(([t,r])=>1===r.count||"..."===t).map(([t])=>t).join("");else if(!i.match(RegExp(iH)))throw Error("Invalid RHS");i.match(RegExp(iW,"g"))?.forEach(t=>{if("..."===t)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let r=this.symbolToInfo.get(t);if(void 0===r)throw Error("Invalid RHS symbol");this.outputDims.push(r.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,s){let i=this.symbolToInfo.get(t);if(void 0!==i){if(i.dimValue!==r&&1!==i.count)throw Error("Dimension mismatch");i.count++,i.inputIndices.push(s)}else i={count:1,dimValue:r,inputIndices:[s]};this.symbolToInfo.set(t,i)}processTerm(t,r,s,i=-1){let a=s.length,n=!1,o=[],l=0;if(!t.match(RegExp(iK))&&!r&&""!==t)throw Error("Invalid LHS term");let u=t.match(RegExp(iW,"g")),d=new iX(i);return u?.forEach((t,c)=>{if("..."===t){if(n)throw Error("Only one ellipsis is allowed per input term");n=!0;let t=a-u.length+1;if(t<0)throw Error("Ellipsis out of bounds");if(o=s.slice(l,l+t),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=o;else throw Error("Ellipsis must be specified in the LHS");for(let t=0;t<o.length;t++){let r=String.fromCharCode(48+t);d.addSymbol(r,c+t),this.addSymbol(r,s[l++],i)}}else d.addSymbol(t,c+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(t,s[l++],i)}),d}},iY=t=>t+"_max",iZ=(t,r,s,i)=>{let a=t.map(t=>t.length).map((t,s)=>tA(`input${s}`,r,t)),n=tg.size(i),o=tF("output",r,i.length),l=[...s.symbolToInfo.keys()].filter(t=>!s.rhs.symbolToIndices.has(t));return{name:"Einsum",shaderCache:{hint:s.equation,inputDependencies:t.map(()=>"rank")},getRunData:()=>{let a=l.filter(t=>s.symbolToInfo.has(t)).map(t=>({type:12,data:s.symbolToInfo.get(t)?.dimValue||0}));a.push({type:12,data:n});let o=t.map((t,r)=>[...tk(t)]).reduce((t,r)=>t.concat(r),a);return o.push(...tk(i)),{outputs:[{dims:i,dataType:r}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:o}},getShaderSource:t=>{let r=[],i=[],n=[],u=[],d=[],c=s.symbolToInfo.size===s.rhs.symbolToIndices.size;s.symbolToInfo.forEach((t,l)=>{if(s.rhs.symbolToIndices.has(l)){let i=s.rhs.symbolToIndices.get(l)?.[0];void 0!==i&&s.lhs.forEach((s,n)=>{if(t.inputIndices.includes(n)){let t=s.symbolToIndices.get(l);if(void 0===t)throw Error("Invalid symbol error");t.forEach(t=>{r.push(`${a[n].indicesSet(`input${n}Indices`,t,o.indicesGet("outputIndices",i))}`)})}})}else s.lhs.forEach((r,s)=>{if(t.inputIndices.includes(s)){let t=r.symbolToIndices.get(l);if(void 0===t)throw Error("Invalid symbol error");t.forEach(t=>{i.push(`${a[s].indicesSet(`input${s}Indices`,t,`${l}`)}`)}),d.push(`prod *= ${a[s].getByIndices(`input${s}Indices`)};`)}}),n.push(`for(var ${l}: u32 = 0; ${l} < uniforms.${iY(l)}; ${l}++) {`),u.push("}")});let p=c?[...r,`let sum = ${a.map((t,r)=>t.getByIndices(`input${r}Indices`)).join(" * ")};`]:[...r,"var sum = 0.0;",...n,...i,"var prod = 1.0;",...d,"sum += prod;",...u];return`
            ${t.registerUniforms(l.map(t=>({name:`${iY(t)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...a,o)}

            ${t.mainStart()}
            ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${a.map((t,r)=>`var input${r}Indices: ${a[r].type.indices};`).join(`
`)}
            ${p.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`}}},i0=(t,r)=>{let s=new iJ(t.inputs,r.equation),i=s.outputDims,a=t.inputs.map((t,r)=>t.dims);t.compute(iZ(a,t.inputs[0].dataType,s,i))},i1=t=>{let r=t.equation.replace(/\s+/g,"");return th({equation:r})}}),lf=j(()=>{oq(),oY(),oZ(),i2=t=>{if(!t||2!==t.length)throw Error("Expand requires 2 input.");let r=t[0].dims,s=Array.from(t[1].getBigInt64Array(),Number),i=s.length<r.length?0:s.length-r.length,a=r.length<s.length?0:r.length-s.length;for(;i<s.length&&a<r.length;++i,++a)if(s[i]!==r[a]&&1!==s[i]&&1!==r[a])throw Error("Expand requires shape to be broadcastable to input")},i3=(t,r)=>{let s=t.length-r.length,i=[];for(let r=0;r<s;++r)i.push(t[r]);for(let a=0;a<r.length;++a)i.push(1===r[a]?t[a+s]:r[a]);return i},i4=(t,r)=>t.length>r.length?i3(t,r):i3(r,t),i6=t=>{let r=t[0].dims,s=i4(r,Array.from(t[1].getBigInt64Array(),Number)),i=t[0].dataType,a=9===i||1===tg.size(r),n=9===i||r.length>0&&r[r.length-1]%4==0?4:1,o=a||s.length>0&&s[s.length-1]%4==0?4:1,l=Math.ceil(tg.size(s)/o),u=[{type:12,data:l},...tk(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${n}${o}`,inputDependencies:["rank"]},getShaderSource:t=>{let a=tA("input",i,r.length,n),l=tF("output",i,s.length,o),u;if(9===i){let t=(t,r,s="")=>`
          let outputIndices${r} = ${l.offsetToIndices(`outputOffset + ${r}u`)};
          let offset${r} = ${a.broadcastedIndicesToOffset(`outputIndices${r}`,l)};
          let index${r} = offset${r} / 4u;
          let component${r} = offset${r} % 4u;
          ${t}[${r}] = ${s}(${a.getByOffset(`index${r}`)}[component${r}]);
        `;u=`
        let outputOffset = global_idx * ${o};
        var data = vec4<u32>(0);
        ${t("data",0,"u32")}
        ${t("data",1,"u32")}
        ${t("data",2,"u32")}
        ${t("data",3,"u32")}
        ${l.setByOffset("global_idx","data")}
      }`}else u=`
        let outputIndices = ${l.offsetToIndices(`global_idx * ${o}`)};
        let inputOffset = ${a.broadcastedIndicesToOffset("outputIndices",l)};
        let data = ${l.type.value}(${a.getByOffset(`inputOffset / ${n}`)});
        ${l.setByOffset("global_idx","data")}
      }`;return`
    ${t.registerUniform("vec_size","u32").declareVariables(a,l)}
    ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${u}`},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u})}},i8=t=>{i2(t.inputs),t.compute(i6(t.inputs),{inputs:[0]})}}),lg=j(()=>{oq(),oY(),oZ(),o5(),i5=t=>{let r=t[0].dataType,s=tg.size(t[0].dims),i=tg.size(t[1].dims),a=i%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${a}`,inputDependencies:["type","type"]},getShaderSource:t=>{let s=tA("x",r,[1],4),i=tA("bias",r,[1],4),n=tF("y",r,[1],4),o=t=>`
      let bias${t}_offset: u32 = (global_idx * 4 + ${t}) % uniforms.bias_size;
      let bias${t} = ${i.getByOffset(`bias${t}_offset / 4`)}[bias${t}_offset % 4];`,l=a?`
      let bias = ${i.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${o(0)}${o(1)}${o(2)}${o(3)}
      let bias = ${s.type.value}(bias0, bias1, bias2, bias3);`;return`${t.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(s,i,n)}

    ${sv(tT(r))}

    ${t.mainStart(tx)}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${s.getByOffset("global_idx")};
      ${l}
      let x_in = x + bias;
      ${n.setByOffset("global_idx",sM("x_in"))}
    }`},getRunData:t=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],programUniforms:[{type:12,data:Math.ceil(s/4)},{type:12,data:i}],dispatchGroup:{x:Math.ceil(s/tx/4)}})}},i9=t=>{t.inputs.length<2||0===tg.size(t.inputs[1].dims)?sT(t):t.compute(i5(t.inputs))}}),l_=j(()=>{oq(),oY(),oJ(),oZ(),i7=t=>{if(!t||2!==t.length)throw Error("Gather requires 2 inputs.")},ae=(t,r)=>{let s=t[0].dims,i=t[1].dims,a=s.length,n=tg.normalizeAxis(r.axis,a),o=s.slice(0);o.splice(n,1,...i);let l=s[n],u=9===t[0].dataType?4:1,d=Math.ceil(tg.size(o)/u),c=[{type:12,data:d},{type:6,data:l},{type:12,data:n},...tk(t[0].dims,t[1].dims,o)];return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:r=>{let s=tA("data",t[0].dataType,t[0].dims.length,u),l=tA("inputIndices",t[1].dataType,t[1].dims.length),d=tF("output",t[0].dataType,o.length,u),c=t=>{let r=i.length,u=`var indicesIndices${t}  = ${l.type.indices}(0);`;for(let s=0;s<r;s++)u+=`${r>1?`indicesIndices${t}[${s}]`:`indicesIndices${t}`} = ${o.length>1?`outputIndices${t}[uniforms.axis + ${s}]`:`outputIndices${t}`};`;u+=`
          var idx${t} = ${l.getByIndices(`indicesIndices${t}`)};
          if (idx${t} < 0) {
            idx${t} = idx${t} + uniforms.axisDimLimit;
          }
          var dataIndices${t} : ${s.type.indices};
        `;for(let s=0,i=0;s<a;s++)s===n?(u+=`${a>1?`dataIndices${t}[${s}]`:`dataIndices${t}`} = u32(idx${t});`,i+=r):(u+=`${a>1?`dataIndices${t}[${s}]`:`dataIndices${t}`} = ${o.length>1?`outputIndices${t}[${i}]`:`outputIndices${t}`};`,i++);return u},p;if(9===t[0].dataType){let t=(t,r,i="")=>`
          let outputIndices${r} = ${d.offsetToIndices(`outputOffset + ${r}u`)};
          ${c(r)};
          let offset${r} = ${s.indicesToOffset(`dataIndices${r}`)};
          let index${r} = offset${r} / 4u;
          let component${r} = offset${r} % 4u;
          ${t}[${r}] = ${i}(${s.getByOffset(`index${r}`)}[component${r}]);
        `;p=`
        let outputOffset = global_idx * ${u};
        var value = vec4<u32>(0);
        ${t("value",0,"u32")}
        ${t("value",1,"u32")}
        ${t("value",2,"u32")}
        ${t("value",3,"u32")}
        ${d.setByOffset("global_idx","value")}
      `}else p=`
      let outputIndices = ${d.offsetToIndices("global_idx")};
      ${c("")};
      let value = ${s.getByIndices("dataIndices")};
      ${d.setByOffset("global_idx","value")};
      `;return`
      ${r.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(s,l,d)}
      ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${p}
      }`}}},at=t=>th({axis:t.axis}),ar=(t,r)=>{i7(t.inputs),t.compute(ae(t.inputs,r))}}),lb=j(()=>{oq(),oY(),oZ(),as=(t,r,s,i,a,n,o,l,u)=>{let d=[{type:12,data:n},{type:12,data:i},{type:12,data:a},{type:12,data:s},{type:12,data:o},{type:12,data:l},{type:12,data:u}],c=[n];return d.push(...tk(r.dims,c)),t.compute({name:"computeSliceOffsets",shaderCache:{hint:`${a.length}_${s.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:c,dataType:t.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:d}),getShaderSource:t=>{let i=tA("indices_data",r.dataType,r.dims.length),n=tF("input_slice_offsets_data",12,1,1),o=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:a.length},{name:"sizes_from_slice_dims_data",type:"u32",length:s.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${t.registerUniforms(o).declareVariables(i,n)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${1===a.length?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${1===s.length?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`}},{inputs:[r],outputs:[-1]})[0]},ai=(t,r)=>{let s=t.inputs,i=s[0].dims,a=s[0].dataType,n=s[1].dims,o=n[n.length-1],l=tg.sizeToDimension(n,n.length-1),u=tg.sizeFromDimension(i,r.batchDims+o),d=tg.sizeToDimension(i,r.batchDims),c=tg.sizeFromDimension(i,r.batchDims),p=Array(o),h=u;for(let t=0;t<o;++t)p[o-1-t]=h,h*=i[r.batchDims+o-1-t];let m=as(t,s[1],p,r.batchDims,i,l,l/d,c,o),f=r.batchDims+o;if(f>i.length)throw Error("last dimension of indices must not be larger than rank of input tensor");let g=n.slice(0,-1).concat(i.slice(f)),_=tg.size(g),b=[{type:12,data:_},{type:12,data:u},...tk(s[0].dims,m.dims,g)];t.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:g,dataType:a}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:b}),getShaderSource:t=>{let r=tA("data",s[0].dataType,s[0].dims.length),i=tA("slice_offsets",12,m.dims.length),a=tF("output",s[0].dataType,g.length);return`
          ${t.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(r,i,a)}
            ${t.mainStart()}
            ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`}},{inputs:[s[0],m]})},aa=t=>({batchDims:t.batch_dims,cacheKey:""})}),ly=j(()=>{oq(),oY(),oJ(),oZ(),an=(t,r)=>{if(t.length<3||t.length>4)throw Error("GatherBlockQuantized requires 3 or 4 inputs.");let s=tg.normalizeAxis(r.quantizeAxis,t[0].dims.length),i=r.blockSize,a=t[0],n=t[2],o=4===t.length?t[3]:void 0;if(n.dims.length!==a.dims.length||!a.dims.map((t,r)=>r===s?Math.ceil(t/i)===n.dims[r]:t===n.dims[r]).reduce((t,r)=>t&&r,!0))throw Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==a.dataType)throw Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==n.dims.length||!o.dims.map((t,r)=>t===n.dims[r]).reduce((t,r)=>t&&r,!0))throw Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},ao=(t,r)=>{let s=t[0].dims,i=t[1].dims,a=s.length,n=tg.normalizeAxis(r.gatherAxis,a),o=tg.normalizeAxis(r.quantizeAxis,a),l=s.slice(0);l.splice(n,1,...i);let u=tg.size(l),d=t[2].dataType,c=22===t[0].dataType,p=[{type:12,data:u},{type:12,data:o},{type:12,data:n},{type:12,data:r.blockSize},...tk(...t.map((t,r)=>t.dims),l)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${t.filter((t,r)=>1!==r).map(t=>t.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:t.length},(t,r)=>"rank")},getRunData:()=>({outputs:[{dims:l,dataType:d}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:p}),getShaderSource:r=>{let a=tA("data",t[0].dataType,t[0].dims.length),o=tA("inputIndices",t[1].dataType,t[1].dims.length),u=tA("scales",t[2].dataType,t[2].dims.length),p=t.length>3?tA("zeroPoint",t[3].dataType,t[3].dims.length):void 0,h=tF("output",d,l.length),m=[a,o,u];return p&&m.push(p),`
        ${r.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...m,h)}
        ${r.mainStart()}
        let output_indices = ${h.offsetToIndices("global_idx")};
        var indices_indices = ${o.type.indices}(0);
        ${i.length>1?`
          for (var i: u32 = 0; i < ${i.length}; i++) {
            let index = ${h.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${o.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${h.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${a.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${h.indicesGet("output_indices","i")};
          ${a.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${o.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${s[n]};
        }
        ${a.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${l.length}; i++) {
          let index = ${h.indicesGet("output_indices",`i + ${i.length} - 1`)};
          ${a.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${a.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${a.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${c?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${u.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${u.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${u.getByIndices("scale_indices")};
        ${p?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${p.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${p.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${c?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${tT(d)}(quantized_data - zero_point) * scale;
        ${h.setByOffset("global_idx","dequantized_data")};
    }`}}},al=(t,r)=>{an(t.inputs,r),t.compute(ao(t.inputs,r))},au=t=>th({blockSize:t.blockSize,gatherAxis:t.gatherAxis,quantizeAxis:t.quantizeAxis})}),lw=j(()=>{oq(),oY(),oJ(),oZ(),ad=t=>{if(!t||2!==t.length)throw Error("GatherElements requires 2 inputs.");if(t[0].dims.length<1)throw Error("GatherElements requires that the data input be rank >= 1.");if(t[0].dims.length!==t[1].dims.length)throw Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},ac=(t,r)=>{let s=t[0].dims,i=t[0].dataType,a=s.length,n=t[1].dims,o=t[1].dataType,l=tg.normalizeAxis(r.axis,a),u=s[l],d=n.slice(0),c=tg.size(d),p=tA("input",i,a),h=tA("indicesInput",o,n.length),m=tF("output",i,d.length),f=[{type:12,data:c},{type:6,data:u},{type:12,data:l}];return f.push(...tk(s,n,d)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:f}),getShaderSource:t=>`
      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(p,h,m)}
      ${t.mainStart()}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${m.offsetToIndices("global_idx")};

      var idx = ${h.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${p.type.indices}(outputIndices);
      ${p.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${p.getByIndices("inputIndices")};

      ${m.setByOffset("global_idx","value")};
  }`}},ap=t=>th({axis:t.axis}),ah=(t,r)=>{ad(t.inputs),t.compute(ac(t.inputs,r))}}),lx=j(()=>{oq(),oY(),oZ(),am=t=>{if(!t)throw Error("Input is missing");if(t.length<2||t.length>3)throw Error("Invaid input number.");if(3===t.length&&t[2].dims.length>2)throw Error("Invalid input shape of C");if(t[0].dataType!==t[1].dataType||3===t.length&&t[0].dataType!==t[2].dataType)throw Error("Input types are mismatched")},af=(t,r)=>{let s=t[0].dims.slice(),i=t[1].dims.slice(),[a,n,o]=tb.getShapeOfGemmResult(s,r.transA,i,r.transB,3===t.length?t[2].dims:void 0),l=[a,n];if(!l)throw Error("Can't use gemm on the given tensors");let u=Math.ceil(n/16),d=Math.ceil(a/16),c=(tg.size(l),[{type:12,data:u},{type:12,data:a},{type:12,data:n},{type:12,data:o},{type:1,data:r.alpha},{type:1,data:r.beta}]),p=["type","type"];return 3===t.length&&(c.push(...tk(t[2].dims)),p.push("rank")),c.push(...tk(l)),{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:l,dataType:t[0].dataType}],dispatchGroup:{x:u*d},programUniforms:c}),getShaderSource:s=>{let i=tA("a",t[0].dataType,t[0].dims),a=tA("b",t[1].dataType,t[1].dims),n=null,o=[i,a];3===t.length&&(n=tA("c",t[2].dataType,t[2].dims.length),o.push(n));let u=tF("output",t[0].dataType,l.length);o.push(u);let d="",c="";r.transA&&r.transB?(c=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${a.type.value}(0);
      }
      `,d="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(c=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${a.type.value}(0);
      }
      `,d="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(c=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${a.type.value}(0);
      }
      `,d="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):r.transA||r.transB||(c=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${a.type.value}(0);
      }
      `,d="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let p=1===r.alpha?"":"value *= uniforms.alpha;";return`
  ${s.registerUniforms([{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...o)}
  var<workgroup> tile_a: array<array<${i.type.storage}, 16>, 16>;
  var<workgroup> tile_b: array<array<${a.type.storage}, 16>, 16>;
  ${s.mainStart([16,16,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * 16;
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * 16;
    let num_tiles = (uniforms.K - 1) / 16 + 1;
    var k_start = 0u;
    var value = ${u.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${c}
      k_start = k_start + 16;
      workgroupBarrier();

      for (var k: u32 = 0u; k < 16; k++) {
        ${d}
      }
      workgroupBarrier();
    }

    ${p}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${null!=n?`let cOffset = ${n.broadcastedIndicesToOffset("vec2(m, n)",u)}; value += ${u.type.value}(uniforms.beta) * ${n.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`}}},ag=t=>({transA:t.transA,transB:t.transB,alpha:t.alpha,beta:t.beta,cacheKey:`${t.transA};${t.transB};${1===t.alpha}`}),a_=(t,r)=>{am(t.inputs),t.compute(af(t.inputs,r))}}),lv=j(()=>{oq(),oY(),oJ(),oZ(),[ab,ay,aw,ax]=[0,1,2,3],av=t=>{if(4!==t[0].dims.length)throw Error("only 4-D tensor is supported.");if(t[0].dims.length!==t[1].dims.length)throw Error("input dimensions must be equal to grid dimensions");if(t[0].dims.length-2!==t[1].dims[t[1].dims.length-1])throw Error(`last dimension of grid must be equal to ${t[0].dims.length-2}`);if(t[0].dims[0]!==t[1].dims[0])throw Error("grid batch size must match input batch size")},aM=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,aT=t=>`
  fn gs_bicubic_interpolate(p: mat4x4<${t}>, x: f32, y: f32) -> ${t} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${t}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,ak=t=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${0===t.alignCorners?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,a$=t=>`
  ${"reflection"===t.paddingMode?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,aC=(t,r,s)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${ab}] = batch;
     indices[${ay}] = channel;`+(()=>{switch(s.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${aw}] = u32(r);
            indices[${ax}] = u32(c);
          }
        `;case"border":return`
          indices[${aw}] = u32(clamp(r, 0, H - 1));
          indices[${ax}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${aw}] = gs_reflect(r, border[1], border[3]);
          indices[${ax}] = gs_reflect(c, border[0], border[2]);
        `;default:throw Error(`padding mode ${s.paddingMode} is not supported`)}})()+`
    return ${t.getByIndices("indices")};
  }
`,aS=(t,r,s)=>(()=>{switch(s.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${ab}], indices[${ay}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${ab}], indices[${ay}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${ab}], indices[${ay}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${ab}], indices[${ay}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${ab}], indices[${ay}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${ab}], indices[${ay}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw Error(`mode ${s.mode} is not supported`)}})()+`${t.setByOffset("global_idx","result")}`,aP=(t,r)=>{let s=tA("x",t[0].dataType,t[0].dims.length),i=[t[1].dims[0],t[1].dims[1],t[1].dims[2]],a=tA("grid",t[1].dataType,i.length,2),n=[t[0].dims[0],t[0].dims[1],t[1].dims[1],t[1].dims[2]];"NHWC"===r.format&&(n=[t[0].dims[0],t[1].dims[1],t[1].dims[2],t[0].dims[3]],[ab,ay,aw,ax]=[0,3,1,2]);let o=tF("output",t[0].dataType,n.length),l=s.type.value,u=[{type:12,data:tg.size(n)},...tk(t[0].dims,i,n)];return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:t=>{let r=tg.size(n);return{outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:u}},getShaderSource:t=>`
  ${t.registerUniform("output_size","u32").declareVariables(s,a,o)}
  ${aM}
  ${aT(l)}
  ${ak(r)}
  ${a$(r)}
  ${aC(s,l,r)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${aw}]);
      let W_in = i32(uniforms.x_shape[${ax}]);

      ${0===r.alignCorners?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${o.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${ab}], indices[${aw}], indices[${ax}]);
      let nxy = ${a.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${aS(o,l,r)}
  }`}},aE=(t,r)=>{av(t.inputs),t.compute(aP(t.inputs,r))},aI=t=>th({alignCorners:t.align_corners,mode:t.mode,paddingMode:t.padding_mode,format:t.format})}),lM=j(()=>{oq(),oY(),oJ(),oQ(),o4(),oZ(),o0(),aA=(t,r)=>t.length>r&&t[r].dims.length>0?t[r]:void 0,aF=(t,r)=>{let s,i=t[0],a=aA(t,1),n=aA(t,2),o=aA(t,3),l=aA(t,4),u=aA(t,5),d=aA(t,6),c=aA(t,7);if(3!==i.dims.length&&5!==i.dims.length)throw Error("Input query is expected to have 3 or 5 dimensions");let p=i.dims[0],h=i.dims[1],m=3===i.dims.length?i.dims[2]:r.numHeads*i.dims[4],f=h,g=0,_=0,b=Math.floor(m/r.numHeads);if(d&&c&&tg.size(d.dims)&&tg.size(c.dims)){if(4!==d.dims.length)throw Error('Input "past_key" is expected to have 4 dimensions');if(d.dims[0]!==p||d.dims[1]!==r.numHeads||d.dims[3]!==b)throw Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==r.numHeads||c.dims[3]!==b)throw Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[2]!==c.dims[2])throw Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(4!==c.dims.length)throw Error('Input "past_value" is expected to have 4 dimensions');g=d.dims[2],_=d.dims[2]}else if(d&&tg.size(d.dims)||c&&tg.size(c.dims))throw Error('Input "past_key" and "past_value" shall be both present or both absent');if(a&&tg.size(a.dims)>0){if(3!==i.dims.length)throw Error('Input "query" is expected to have 3 dimensions when key is given');if(a.dims.length<3||a.dims.length>5)throw Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(i.dims[0]!==a.dims[0])throw Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===a.dims.length){if(a.dims[2]!==i.dims[2])throw Error('Input "query" and "key" shall have same dim 2 (hidden_size)');s=2,f=a.dims[1]}else if(5===a.dims.length){if(a.dims[2]!==r.numHeads||2!==a.dims[3]||a.dims[4]!==b)throw Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw Error('Expect "value" be none when "key" has packed kv format.');s=5,f=a.dims[1]}else{if(a.dims[1]!==r.numHeads||a.dims[3]!==b)throw Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');s=0,f=a.dims[2]}}else{if(5!==i.dims.length)throw Error('Input "query" is expected to have 5 dimensions when key is empty');if(i.dims[2]!==r.numHeads||3!==i.dims[3])throw Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');s=3}if(o&&tg.size(o.dims)>0){if(1!==o.dims.length)throw Error('Input "bias" is expected to have 1 dimension');if(a&&5===a.dims.length&&2===a.dims[3])throw Error("bias is not allowed for packed kv.")}let y=g+f,w=0;if(l&&tg.size(l.dims)>0){w=8;let t=l.dims;throw 1===t.length?t[0]===p?w=1:t[0]===3*p+2&&(w=3):2===t.length&&t[0]===p&&t[1]===y&&(w=5),8===w?Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):Error("Mask not supported")}let x=!1,v=m;if(n&&tg.size(n.dims)>0){if(3!==n.dims.length&&4!==n.dims.length)throw Error('Input "value" is expected to have 3 or 4 dimensions');if(i.dims[0]!==n.dims[0])throw Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===n.dims.length){if(f!==n.dims[1])throw Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=n.dims[2]}else{if(f!==n.dims[2])throw Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');v=n.dims[1]*n.dims[3],x=!0}}if(l&&tg.size(l.dims)>0)throw Error("Key padding mask is not supported");if(u&&tg.size(u.dims)>0){if(4!==u.dims.length)throw Error('Input "attention_bias" is expected to have 4 dimensions');if(u.dims[0]!==p||u.dims[1]!==r.numHeads||u.dims[2]!==h||u.dims[3]!==y)throw Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:h,pastSequenceLength:g,kvSequenceLength:f,totalSequenceLength:y,maxSequenceLength:_,inputHiddenSize:0,hiddenSize:m,vHiddenSize:v,headSize:b,vHeadSize:Math.floor(v/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:w,scale:r.scale,broadcastResPosBias:!1,passPastInKv:x,qkvFormat:s}},az=t=>th({...t}),aO=th({perm:[0,2,1,3]}),aL=(t,r,s,i,a,n,o)=>{let l=[i,a,n],u=tg.size(l),d=[{type:12,data:u},{type:12,data:o},{type:12,data:n}];return t.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:l,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let i=tF("qkv_with_bias",r.dataType,l),a=tA("qkv",r.dataType,l),n=tA("bias",s.dataType,l);return`
  ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(a,n,i)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`}},{inputs:[r,s],outputs:[-1]})[0]},aB=(t,r,s,i,a,n,o,l)=>{let u=n;if(!(o&&tg.size(o.dims)>0))return 3===n.dims.length&&(u=n.reshape([r,i,s,a])),1===s||1===i?u:t.compute(tU(u,aO.perm),{inputs:[u],outputs:[-1]})[0];if(1===i)throw Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=(u=aL(t,n,o,r,i,s*a,l)).reshape([r,i,s,a]),1===s||1===i?u:t.compute(tU(u,aO.perm),{inputs:[u],outputs:[-1]})[0]},aN=(t,r)=>{let s=aF(t.inputs,r),i=t.inputs[0],a=aA(t.inputs,1),n=aA(t.inputs,2),o=aA(t.inputs,3),l=aA(t.inputs,4),u=aA(t.inputs,5),d=aA(t.inputs,6),c=aA(t.inputs,7);if(5===i.dims.length)throw Error("Packed QKV is not implemented");if(a?.dims.length===5)throw Error("Packed KV is not implemented");let p=a&&n&&4===a.dims.length&&4===n.dims.length,h=aB(t,s.batchSize,s.numHeads,s.sequenceLength,s.headSize,i,o,0);if(p)return rD(t,h,a,n,l,void 0,d,c,u,s);if(!a||!n)throw Error("key and value must be provided");let m=aB(t,s.batchSize,s.numHeads,s.kvSequenceLength,s.headSize,a,o,s.hiddenSize),f=aB(t,s.batchSize,s.numHeads,s.kvSequenceLength,s.vHeadSize,n,o,2*s.hiddenSize);rD(t,h,m,f,l,void 0,d,c,u,s)}}),lT=j(()=>{oq(),oY(),oJ(),oZ(),aD=t=>{if(!t||t.length<1)throw Error("too few inputs")},aR=(t,r)=>{let s=[],i=r.numOutputs;return t[1].dims[0]>0&&(t[1].getBigInt64Array().forEach(t=>s.push(Number(t))),i=s.length),th({numOutputs:i,axis:r.axis,splitSizes:s})},aj=t=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {
    if (index < ${tE("uniforms.size_in_split_axis","i",t)}) {
        return i;
    }
    }
    return ${t}u;
}`,aV=t=>{let r=t.length,s=[];for(let i=0;i<r;++i){let a=t[i].setByIndices("indices","input[global_idx]");1===r?s.push(a):0===i?s.push(`if (output_number == ${i}u) { ${a} }`):i===r-1?s.push(`else { ${a} }`):s.push(`else if (output_number == ${i}) { ${a} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${t[0].type.indices}, global_idx: u32) {
        ${s.join(`
`)}
      }`},aG=(t,r)=>{let s=t[0].dims,i=tg.size(s),a=t[0].dataType,n=tg.normalizeAxis(r.axis,s.length),o=Array(r.numOutputs),l=tA("input",a,s.length),u=Array(r.numOutputs),d=[],c=[],p=0,h=[{type:12,data:i}];for(let i=0;i<r.numOutputs;i++){p+=r.splitSizes[i],u[i]=p;let l=s.slice();l[n]=r.splitSizes[i],c.push(l),o[i]=tF(`output${i}`,a,l.length),d.push({dims:c[i],dataType:t[0].dataType})}return h.push({type:12,data:u},...tk(s,...c)),{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:t=>`
  ${t.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(l,...o)}
  ${aj(u.length)}
  ${aV(o)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${l.offsetToIndices("global_idx")};
    var index = ${l.indicesGet("indices",n)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${tE("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${l.indicesSet("indices",n,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`,getRunData:()=>({outputs:d,dispatchGroup:{x:Math.ceil(i/64)},programUniforms:h})}},aU=(t,r)=>{aD(t.inputs);let s=1===t.inputs.length?r:aR(t.inputs,r);t.compute(aG(t.inputs,s),{inputs:[0]})},aq=t=>{let r=t.axis,s=t.splitSizes,i=t.numOutputs<0?s.length:t.numOutputs;if(i!==s.length)throw Error("numOutputs and splitSizes lengh must be equal");return th({axis:r,numOutputs:i,splitSizes:s})}}),lk=j(()=>{oJ(),o4(),lM(),lT(),o0(),aW=(t,r)=>{if(r.doRotary)throw Error("GroupQuerryAttention do_rotary attribute is not supported");if(r.doRotary&&t.length<=7)throw Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let s=t[0],i=t[1],a=t[2],n=t[3],o=t[4];if(-1!==r.localWindowSize)throw Error("Local attention is not supported");if(0!==r.softcap)throw Error("Softcap is not supported");if(0!==r.rotaryInterleaved)throw Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw Error("Smooth softmax is not supported");if(3!==s.dims.length&&5!==s.dims.length)throw Error("Input query is expected to have 3 or 5 dimensions");let l=s.dims[0],u=s.dims[1],d=3===s.dims.length?s.dims[2]:r.numHeads*s.dims[4],c=u,p=0,h=!i||0===i.dims.length,m=Math.floor(h?d/(r.numHeads+2*r.kvNumHeads):d/r.numHeads);h&&(d=m*r.numHeads);let f=n&&0!==n.dims.length,g=o&&0!==o.dims.length;if(f&&4===n.dims.length&&n.dims[0]===l&&n.dims[1]!==r.kvNumHeads&&n.dims[2]===r.kvNumHeads&&n.dims[3]===m)throw Error("BSNH pastKey/pastValue is not supported");if(f&&g){if(4!==n.dims.length)throw Error('Input "past_key" is expected to have 4 dimensions');if(4!==o.dims.length)throw Error('Input "past_value" is expected to have 4 dimensions');p=n.dims[2]}else if(f||g)throw Error('Input "past_key" and "past_value" shall be both present or both absent');let _=1;if(i&&i.dims.length>0){if(3!==s.dims.length)throw Error('Input "query" is expected to have 3 dimensions when key is given');if(i.dims.length<3||i.dims.length>5)throw Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(s.dims[0]!==i.dims[0])throw Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===i.dims.length){if(s.dims[2]%i.dims[2]!=0)throw Error('Dimension 2 of "query" should be a multiple of "key"');c=i.dims[1]}else if(5===i.dims.length){if(i.dims[2]!==r.numHeads||2!==i.dims[3]||i.dims[4]!==m)throw Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw Error('Expect "value" be none when "key" has packed kv format.');c=i.dims[1]}else{if(i.dims[1]!==r.numHeads||i.dims[3]!==m)throw Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');c=i.dims[2]}}else{if(3!==s.dims.length&&5!==s.dims.length)throw Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===s.dims.length&&(s.dims[2]!==r.numHeads||3!==s.dims[3]))throw Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');_=3}let b=!1,y=r.kvNumHeads?m*r.kvNumHeads:d;if(a&&a.dims.length>0){if(3!==a.dims.length&&4!==a.dims.length)throw Error('Input "value" is expected to have 3 or 4 dimensions');if(s.dims[0]!==a.dims[0])throw Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===a.dims.length){if(c!==a.dims[1])throw Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');y=a.dims[2]}else{if(c!==a.dims[2])throw Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');y=a.dims[1]*a.dims[3],b=!0}}let w=t.length>4?t[5]:void 0;if(w&&1!==w.dims.length&&w.dims[0]!==l)throw Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:u,pastSequenceLength:p,kvSequenceLength:c,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:d,vHiddenSize:y,headSize:m,vHeadSize:Math.floor(y/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:r.scale,broadcastResPosBias:!1,passPastInKv:b,qkvFormat:_}},aH=th({perm:[0,2,1,3]}),aK=(t,r,s)=>{let i=r,a=s.kvNumHeads;return 3===r.dims.length&&0!==s.kvSequenceLength&&(i=r.reshape([s.batchSize,s.kvSequenceLength,a,s.headSize]),i=t.compute(tU(i,aH.perm),{inputs:[i],outputs:[-1]})[0]),i},aQ=(t,r)=>{let s=aW(t.inputs,r);if(5===t.inputs[0].dims.length)throw Error("Packed QKV is not implemented");if(t.inputs[1]?.dims.length===5)throw Error("Packed KV is not implemented");let i=t.inputs[0],a=t.inputs[1]&&t.inputs[1].dims.length>0?t.inputs[1]:void 0,n=t.inputs[2]&&t.inputs[2].dims.length>0?t.inputs[2]:void 0,o=t.inputs[3]&&0!==t.inputs[3].dims.length?t.inputs[3]:void 0,l=t.inputs[4]&&0!==t.inputs[4].dims.length?t.inputs[4]:void 0,u=t.inputs.length>4?t.inputs[5]:void 0,d=t.inputs.length>5?t.inputs[6]:void 0,c=s.kvNumHeads?s.kvNumHeads:s.numHeads,p=th({axis:2,numOutputs:3,splitSizes:[s.numHeads*s.headSize,c*s.headSize,c*s.headSize]}),[h,m,f]=a||n?[i,a,n]:t.compute(aG([i],p),{inputs:[i],outputs:[-1,-1,-1]}),g=aB(t,s.batchSize,s.numHeads,s.sequenceLength,s.headSize,h,void 0,0);rD(t,g,aK(t,m,s),aK(t,f,s),void 0,void 0,o,l,void 0,s,u,d)}}),l$=j(()=>{oq(),oY(),o0(),oZ(),aX=(t,r,s,i,a,n,o,l)=>{let u=t$(n),d=1===u?"f32":`vec${u}f`,c=1===u?"vec2f":`mat2x${u}f`,p=a*o,h=64;1===p&&(h=256);let m=[a,o,n/u],f=[a,o,2],g=[];return g.push(...tk(m,f)),t.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${l};${h}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:f,dataType:1}],dispatchGroup:{x:p},programUniforms:g}),getShaderSource:t=>{let a=tA("x",r.dataType,3,u),n=tA("scale",s.dataType,s.dims),o=tA("bias",i.dataType,i.dims),p=tF("output",1,3,2);return`
  var<workgroup> workgroup_shared : array<${c}, ${h}>;
  const workgroup_size = ${h}u;
  ${t.declareVariables(a,n,o,p)}
  ${t.mainStart(h)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${d}(0);
    var squared_sum = ${d}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${d}(${a.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${c}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${tP("workgroup_shared[0][0]",u)} / f32(hight * ${u});
      let squared_sum_final = ${tP("workgroup_shared[0][1]",u)} / f32(hight * ${u});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${l}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`}},{inputs:[r,s,i],outputs:[-1]})[0]},aJ=(t,r,s)=>{let i=r[0].dims,a=i[0],n=i[1],o=tg.sizeFromDimension(i,2),l=t$(o),u=tg.size(i)/l,d=aX(t,r[0],r[1],r[2],a,o,n,s.epsilon),c=[a,n,o/l],p=[a,n];t.compute({name:"InstanceNormalization",shaderCache:{hint:`${l}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},...tk(c,p,c)]}),getShaderSource:t=>{let s=tA("x",r[0].dataType,c.length,l),i=tA("scale_shift",1,p.length,2),a=tF("output",r[0].dataType,c.length,l);return`
  ${t.registerUniform("output_size","u32").declareVariables(s,i,a)}
  ${t.mainStart()}
  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${a.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${i.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${s.getByOffset("global_idx")} * ${a.type.value}(scale_shift.x) + ${a.type.value}(scale_shift.y);
      ${a.setByOffset("global_idx","value")};
  }`}},{inputs:[r[0],d]})},aY=(t,r,s)=>{let i=r[0].dims,a=i[0],n=i[i.length-1],o=tg.sizeFromDimension(i,1)/n,l=t$(n),u=tg.size(i)/l,d=[{type:12,data:o},{type:12,data:Math.floor(n/l)}],c=!1,p=[0,i.length-1];for(let t=0;t<i.length-2;t++)c=c||1!==i[t+1],p.push(t+1);let h=(c=c&&1!==i[i.length-1])?t.compute(tU(t.inputs[0],p),{inputs:[t.inputs[0]],outputs:[-1]})[0]:t.inputs[0].reshape(Array.from({length:i.length},(t,r)=>i[p[r]])),m=aX(t,h,r[1],r[2],a,o,n,s.epsilon);t.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let s=tM(r[0].dataType),a=1===l?"vec2f":`mat${l}x2f`,n=t=>{let r=0===t?"x":"y",i=1===l?"f32":`vec${l}f`;switch(l){case 1:return`${s}(${i}(scale.${r}))`;case 2:return`vec2<${s}>(${i}(scale[0].${r}, scale[1].${r}))`;case 4:return`vec4<${s}>(${i}(scale[0].${r}, scale[1].${r}, scale[2].${r}, scale[3].${r}))`;default:throw Error(`Not supported compoents ${l}`)}},o=tA("input",r[0].dataType,r[0].dims,l),u=tF("output",r[0].dataType,i,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${o.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${a}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${u.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${t.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${n(0)}, ${n(1)});
  }`}},{inputs:[r[0],m]})},aZ=(t,r)=>{"NHWC"===r.format?aY(t,t.inputs,r):aJ(t,t.inputs,r)}}),lC=j(()=>{oq(),oY(),oZ(),a0=t=>{if(!t||t.length<2)throw Error("layerNorm requires at least 2 inputs.")},a1=(t,r,s)=>{let i=r.simplified,a=t[0].dims,n=t[1],o=!i&&t[2],l=tg.normalizeAxis(r.axis,a.length),u=tg.sizeToDimension(a,l),d=tg.sizeFromDimension(a,l),c=tg.size(n.dims),p=o?tg.size(o.dims):0;if(c!==d||o&&p!==d)throw Error(`Size of X.shape()[axis:] == ${d}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${c} and bias size of ${p}`);let h=[];for(let t=0;t<a.length;++t)t<l?h.push(a[t]):h.push(1);let m=t$(d),f=["type","type"],g=[{type:12,data:u},{type:1,data:d},{type:12,data:Math.floor(d/m)},{type:1,data:r.epsilon}];o&&f.push("type");let _=s>1,b=s>2,y=[{dims:a,dataType:t[0].dataType}];return _&&y.push({dims:h,dataType:1}),b&&y.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${m};${s};${i}`,inputDependencies:f},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:g}),getShaderSource:r=>{let s=tM(t[0].dataType),l=[tA("x",t[0].dataType,t[0].dims,m),tA("scale",n.dataType,n.dims,m)];return o&&l.push(tA("bias",o.dataType,o.dims,m)),l.push(tF("output",t[0].dataType,a,m)),_&&l.push(tF("mean_data_output",1,h)),b&&l.push(tF("inv_std_output",1,h)),`
  ${r.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...l)}
  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${tC("f32",m)};
    var mean_square_vector = ${tC("f32",m)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${tS(s,m,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${tP("mean_vector",m)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${tP("mean_square_vector",m)} / uniforms.norm_size ${i?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${tS(s,m,"x[j + offset]")};
      let f32scale = ${tS(s,m,"scale[j]")};
      output[j + offset] = ${l[0].type.value}((f32input ${i?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${tS(s,m,"bias[j]")}`:""}
      );
    }

    ${_?"mean_data_output[global_idx] = mean":""};
    ${b?"inv_std_output[global_idx] = inv_std_dev":""};
  }`}}},a2=(t,r)=>{a0(t.inputs),t.compute(a1(t.inputs,r,t.outputCount))}}),lS=j(()=>{oY(),li(),la(),a3=t=>{if(!t||2!==t.length)throw Error("MatMul requires 2 inputs.");if(t[0].dims[t[0].dims.length-1]!==t[1].dims[t[1].dims.length-2])throw Error("shared dimension does not match.")},a4=t=>{a3(t.inputs);let r=tf.calcShape(t.inputs[0].dims,t.inputs[1].dims,!0);if(!r)throw Error("Can't use matmul on the given tensors");let s=r[r.length-1],i=t.inputs[0].dims[t.inputs[0].dims.length-1];if(s<8&&i<8)t.compute(s8(t.inputs,{activation:""},r));else{let a=r[r.length-2],n=tg.size(t.inputs[0].dims.slice(0,-2)),o=tg.size(t.inputs[1].dims.slice(0,-2));if(1!==n&&1===a&&1===o){let a=t.inputs[0].reshape([1,n,i]),o=t.inputs[1].reshape([1,i,s]),l=[1,n,s],u=[a,o];t.compute(ii(u,{activation:""},r,l),{inputs:u})}else t.compute(ii(t.inputs,{activation:""},r))}}}),lP=j(()=>{oq(),oY(),oJ(),oZ(),a6=(t,r)=>{if(t.length<3||t.length>4)throw Error("MatMulNBits requires 3 or 4 inputs");let s=t[0],i=s.dims.length;if(s.dims[i-1]!==r.k)throw Error("The last dim of input shape does not match the k value");let a=Math.floor((r.k+r.blockSize-1)/r.blockSize),n=r.blockSize/8*r.bits,o=t[1];if(!tg.areEqual(o.dims,[r.n,a,n]))throw Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let l=t[2].dims;if(tg.size(l)!==r.n*a)throw Error("scales input size error.");if(4===t.length){let s=t[3].dims,i=r.bits>4?r.n*a:r.n*Math.floor((a+1)/2);if(tg.size(s)!==i)throw Error("zeroPoints input size error.")}},a8=(t,r)=>{let s=t[0].dims,i=s.length,a=s[i-2],n=r.k,o=r.n,l=s.slice(0,i-2),u=tg.size(l),d=t[1].dims[2]/4,c=t[0].dataType,p=t$(r.k),h=t$(d),m=t$(o),f=l.concat([a,o]),g=a>1&&o/m%2==0?2:1,_=tg.size(f)/m/g,b=[],y=[u,a,n/p],w=tg.convertShape(t[1].dims).slice();w.splice(-1,1,d/h),b.push(...tk(y)),b.push(...tk(w)),b.push(...tk(t[2].dims)),4===t.length&&b.push(...tk(tg.convertShape(t[3].dims)));let x=[u,a,o/m];return b.push(...tk(x)),{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${p};${h};${m};${g};64`,inputDependencies:Array(t.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:c}],dispatchGroup:{x:_},programUniforms:b}),getShaderSource:s=>{let i=y.length,a=tA("a",t[0].dataType,i,p),n=tA("b",12,w.length,h),o=tA("scales",t[2].dataType,t[2].dims.length),l=[a,n,o],u=4===t.length?tA("zero_points",12,t[3].dims.length):void 0;u&&l.push(u);let c=x.length,f=tF("output",t[0].dataType,c,m),_=tM(t[0].dataType),b=(()=>{switch(p){case 1:return`array<${_}, 8>`;case 2:return`mat4x2<${_}>`;case 4:return`mat2x4<${_}>`;default:throw Error(`${p}-component is not supported.`)}})();return`
        var<workgroup> workgroup_shared: array<${f.type.value}, ${64*g}>;
        ${s.declareVariables(...l,f)}
        ${s.mainStart([64,1,1])}
          let output_indices = ${f.offsetToIndices(`(global_idx / 64) * ${g}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/p};
            ${(()=>{let t=`
            var col_index = col * ${m};
            ${u?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${_}(8);`}
            `;for(let r=0;r<m*g;r++)t+=`
            let scale${r} = ${o.getByOffset("col_index * nBlocksPerCol + block")};
            ${u?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${u.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${r} = ${_}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return t})()}
            for (var word: u32 = 0; word < ${d}; word += ${h}) {
              ${(()=>{let t=`col_index = col * ${m};`;for(let r=0;r<m*g;r++)t+=`
            let b${r}_data = ${n.getByIndices(`${n.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return t+`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${b};
            var b_dequantized_values: ${b};`})()}
              for (var i: u32 = 0; i < ${h}; i++) {
                ${(()=>{let t=`
          // reuse a data
            var input_offset = ${a.indicesToOffset(`${a.type.indices}(batch, row, word_offset)`)};
            var a_data: ${b};
            for (var j: u32 = 0; j < ${8/p}; j++) {
              a_data[j] = ${a.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let r=0;r<m*g;r++)t+=`
            b_value = ${1===h?`b${r}_data`:`b${r}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${b}(${Array.from({length:4},(t,r)=>`${_}(b_value_lower[${r}]), ${_}(b_value_upper[${r}])`).join(", ")});
            b_dequantized_values = ${1===p?`${b}(${Array.from({length:8},(t,s)=>`(b_quantized_values[${s}] - ${u?`zero_point${r}`:"zero_point"}) * scale${r}`).join(", ")});`:`(b_quantized_values - ${b}(${Array(8).fill(`${u?`zero_point${r}`:"zero_point"}`).join(",")})) * scale${r};`};
            workgroup_shared[local_id.x * ${g} + ${Math.floor(r/m)}]${m>1?`[${r%m}]`:""} += ${Array.from({length:8/p},(t,r)=>`${1===p?`a_data[${r}] * b_dequantized_values[${r}]`:`dot(a_data[${r}], b_dequantized_values[${r}])`}`).join(" + ")};
          `;return t})()}
                word_offset += ${8/p};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${g}) {
            var output_value: ${f.type.value} = ${f.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < 64u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${g};
            }
            ${f.setByIndices(`${f.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`}}},a5=(t,r)=>{let s=t[0].dims,i=s.length,a=s[i-2],n=r.k,o=r.n,l=s.slice(0,i-2),u=tg.size(l),d=t[1].dims[2]/4,c=t[0].dataType,p=t$(r.k),h=t$(d),m=l.concat([a,o]),f=o%8==0?8:o%4==0?4:1,g=128/f,_=g*h*8,b=_/p,y=_/r.blockSize,w=tg.size(m)/f,x=[],v=[u,a,n/p],M=tg.convertShape(t[1].dims).slice();M.splice(-1,1,d/h),x.push(...tk(v)),x.push(...tk(M)),x.push(...tk(t[2].dims)),4===t.length&&x.push(...tk(tg.convertShape(t[3].dims)));let T=[u,a,o];return x.push(...tk(T)),{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${p};${h};${g};${f}`,inputDependencies:Array(t.length).fill("rank")},getRunData:()=>({outputs:[{dims:m,dataType:c}],dispatchGroup:{x:w},programUniforms:x}),getShaderSource:s=>{let i=v.length,a=tA("a",t[0].dataType,i,p),n=tA("b",12,M.length,h),o=tA("scales",t[2].dataType,t[2].dims.length),l=[a,n,o],u=4===t.length?tA("zero_points",12,t[3].dims.length):void 0;u&&l.push(u);let d=T.length,c=tF("output",t[0].dataType,d),m=tM(t[0].dataType);return`
        var<workgroup> sub_a: array<${a.type.value}, ${b}>;
        var<workgroup> inter_results: array<array<${c.type.value}, ${g}>, ${f}>;
        ${s.declareVariables(...l,c)}
        ${s.mainStart([g,f,1])}
          let output_indices = ${c.offsetToIndices(`workgroup_index * ${f}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${y} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${b};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${b}; a_offset += 128)
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${a.getByIndices(`${a.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${a.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${y} + local_id.x;
            ${u?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${u.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${m}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${m}(8);`}
            let scale = ${o.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${n.getByIndices(`${n.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/p};
            for (var i: u32 = 0; i < ${h}; i++) {
              ${(()=>{switch(p){case 1:return`
          let a_data0 = vec4<${m}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${m}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${m}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${m}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw Error(`${p}-component is not supported.`)}})()}
              let b_value = ${1===h?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${m}>(${Array.from({length:4},(t,r)=>`${m}(b_value_lower[${r}]), ${m}(b_value_upper[${r}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${m}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(t,r)=>`dot(a_data${r}, b_dequantized_values[${r}])`).join(" + ")};
              word_offset += ${8/p};
            }
            workgroupBarrier();
          }

          if (local_idx < ${f}) {
            var output_value: ${c.type.value} = ${c.type.value}(0);
            for (var b = 0u; b < ${g}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${c.setByIndices(`${c.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`}}},a9=(t,r)=>{a6(t.inputs,r),32===r.blockSize&&t.adapterInfo.isVendor("intel")&&t.adapterInfo.isArchitecture("gen-12lp")?t.compute(a5(t.inputs,r)):t.compute(a8(t.inputs,r))},a7=t=>th(t)}),lE=j(()=>{oq(),oY(),oZ(),ne=t=>{if(!t||t.length<1)throw Error("Too few inputs");if(1!==t[0].dataType&&10!==t[0].dataType)throw Error("Input type must be float or float16.");if(t.length>=2){let r=2*t[0].dims.length===t[1].dims[0];if(4===t.length&&(r=2*t[3].dims[0]===t[1].dims[0]),!r)throw Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},nt=(t,r,s)=>{let i="";for(let a=r-1;a>=0;--a)i+=`
            k = i32(${t.indicesGet("indices",a)}) - ${tE("uniforms.pads",a,s)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${tE("uniforms.x_shape",a,r)})) {
              break;
            }
            offset += k * i32(${tE("uniforms.x_strides",a,r)});
        `;return`
          value = ${t.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${i}
            value = x[offset];
          }
      `},nr=(t,r,s)=>{let i="";for(let a=r-1;a>=0;--a)i+=`
                k = i32(${t.indicesGet("indices",a)}) - ${tE("uniforms.pads",a,s)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${tE("uniforms.x_shape",a,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${tE("uniforms.x_shape",a,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${tE("uniforms.x_strides",a,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},ns=(t,r,s)=>{let i="";for(let a=r-1;a>=0;--a)i+=`
                k = i32(${t.indicesGet("indices",a)}) - ${tE("uniforms.pads",a,s)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${tE("uniforms.x_shape",a,r)})) {
                  k = i32(${tE("uniforms.x_shape",a,r)}) - 1;
                }
                offset += k * i32(${tE("uniforms.x_strides",a,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},ni=(t,r,s)=>{let i="";for(let a=r-1;a>=0;--a)i+=`
                k = i32(${t.indicesGet("indices",a)}) - ${tE("uniforms.pads",a,s)};
                if (k < 0)  {
                  k += i32(${tE("uniforms.x_shape",a,r)}]);
                }
                if (k >= i32(${tE("uniforms.x_shape",a,r)})) {
                  k -= i32(${tE("uniforms.x_shape",a,r)});
                }
                offset += k * i32(${tE("uniforms.x_strides",a,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},na=(t,r,s)=>{switch(s.mode){case 0:return nt(t,r,s.pads.length);case 1:return nr(t,r,s.pads.length);case 2:return ns(t,r,s.pads.length);case 3:return ni(t,r,s.pads.length);default:throw Error("Invalid mode")}},nn=(t,r)=>{let s=tg.padShape(t[0].dims.slice(),r.pads),i=t[0].dims,a=[{type:12,data:tg.size(s)},{type:6,data:r.pads}],n=t.length>=3&&t[2].data;return 0===r.mode&&a.push({type:n?t[2].dataType:1,data:r.value}),a.push(...tk(t[0].dims,s)),{name:"Pad",shaderCache:{hint:`${r.mode}${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(tg.size(s)/64)},programUniforms:a}),getShaderSource:a=>{let o=tF("output",t[0].dataType,s.length),l=tA("x",t[0].dataType,i.length),u=l.type.value,d=na(o,i.length,r),c=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return 0===r.mode&&c.push({name:"constant_value",type:n?u:"f32"}),`
            ${a.registerUniforms(c).declareVariables(l,o)}
            ${a.mainStart()}
            ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${o.offsetToIndices("global_idx")};

            var value = ${u}(0);
            ${d}
            output[global_idx] = value;
        }`}}},no=(t,r)=>{if(!(t.length>1))return r;{let s=t[1].getBigInt64Array(),i=t.length>=3&&t[2].data?10===t[2].dataType?t[2].getUint16Array()[0]:t[2].getFloat32Array()[0]:0,a=t[0].dims.length,n=new Int32Array(2*a).fill(0);if(t.length>=4){let r=t[3].getBigInt64Array();for(let t=0;t<r.length;t++)n[Number(r[t])]=Number(s[t]),n[Number(r[t])+a]=Number(s[t+r.length])}else s.forEach((t,r)=>n[Number(r)]=Number(t));let o=[];return n.forEach(t=>o.push(t)),{mode:r.mode,value:i,pads:o}}},nl=(t,r)=>{ne(t.inputs);let s=no(t.inputs,r);t.compute(nn(t.inputs,s),{inputs:[0]})}}),lI=j(()=>{ed(),oq(),oY(),oZ(),nu=t=>{if(h.webgpu.validateInputContent&&(!t||1!==t.length))throw Error("Pool ops requires 1 input.")},nd=(t,r,s)=>{let i="NHWC"===r.format,a=t.dims.slice();i&&a.splice(1,0,a.pop());let n=Object.hasOwnProperty.call(r,"dilations"),o=r.kernelShape.slice(),l=r.strides.slice(),u=n?r.dilations.slice():[],d=r.pads.slice();t_.adjustPoolAttributes(s,a,o,l,u,d);let c=t_.computePoolOutputShape(s,a,l,u,o,d,r.autoPad),p=Object.assign({},r);n?Object.assign(p,{kernelShape:o,strides:l,pads:d,dilations:u,cacheKey:r.cacheKey}):Object.assign(p,{kernelShape:o,strides:l,pads:d,cacheKey:r.cacheKey});let h=c.slice();return h.push(h.splice(1,1)[0]),[p,i?h:c]},nc=(t,r)=>{let s="NHWC"===r.format,i=[{type:12,data:tg.size(t)},{type:12,data:tg.size(r.kernelShape)}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let t=r.kernelShape[r.kernelShape.length-1],s=r.strides[r.strides.length-1],n=r.pads[r.pads.length/2-1],o=r.pads[r.pads.length-1],l=!!(n+o);i.push({type:12,data:t},{type:12,data:s},{type:12,data:n},{type:12,data:o}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let u=!1;if(2===r.kernelShape.length){let t=r.kernelShape[r.kernelShape.length-2],s=r.strides[r.strides.length-2],n=r.pads[r.pads.length/2-2],o=r.pads[r.pads.length-2];u=!!(n+o),i.push({type:12,data:t},{type:12,data:s},{type:12,data:n},{type:12,data:o}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,a,!0,l,u]}{if(s)throw Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let t=tg.computeStrides(r.kernelShape);return i.push({type:12,data:t},{type:12,data:r.pads},{type:12,data:r.strides}),a.push({name:"kernelStrides",type:"u32",length:t.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length}),[i,a,!!r.pads.reduce((t,r)=>t+r),!1,!1]}},np=(t,r,s,i,a,n,o,l,u,d,c,p)=>{let h="NHWC"===a.format,m=r.type.value,f=tF("output",r.type.tensor,i);if(a.kernelShape.length<=2){let i="",d="",g="",_=s-(h?2:1);if(i=c?`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${_}] < 0 || xIndices[${_}]
                      >= uniforms.x_shape[${_}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`:`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`,2===a.kernelShape.length){let t=s-(h?3:2);d=p?`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${t}] = indices[${t}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${t}] < 0 || xIndices[${t}] >= uniforms.x_shape[${t}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${t}] = indices[${t}] * uniforms.sh - uniforms.phStart + j;
                `,g=`
              }
            `}return`
            ${t.registerUniforms(u).declareVariables(r,f)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var value = ${m}(${l});
              var pad = 0;
              ${d}
              ${i}
              ${g}
              ${o}

              output[global_idx] = value;
            }`}{if(h)throw Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let i=a.kernelShape.length,c=a.pads.length,p="";return p=d?`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${n}
              }`:`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${n}
            `,`
            ${t.registerUniforms(u).declareVariables(r,f)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var offsets: array<u32, ${i}>;

              var value = ${m}(${l});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${i-1}u; j++) {
                  offsets[j] = offset / ${tE("uniforms.kernelStrides","j",i)};
                  offset -= offsets[j] * ${tE("uniforms.kernelStrides","j",i)};
                }
                offsets[${i-1}] = offset;

                isPad = false;
                for (var j = ${s-i}u; j < ${s}u; j++) {
                  xIndices[j] = indices[j] * ${tE("uniforms.strides",`j - ${s-i}u`,i)}
                    + offsets[j - ${s-i}u] - ${tE("uniforms.pads","j - 2u",c)};
                  ${p}
              }
              ${o}

              output[global_idx] = value;
            }`}},nh=t=>`${t.format};${t.ceilMode};${t.autoPad};${t.kernelShape.length}`,nm=t=>`${nh(t)};${t.countIncludePad}`,nf=t=>`${nh(t)};${t.storageOrder};${t.dilations}`,ng=t=>({format:t.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],ceilMode:t.ceil_mode,kernelShape:t.kernel_shape,strides:t.strides,pads:t.pads}),n_=(t,r,s,i)=>{let[a,n]=nd(r,i,s),o=tA("x",r.dataType,r.dims.length),l=o.type.value,u="";a.countIncludePad?u+=`value /= ${l}(uniforms.kernelSize);`:u+=`value /= ${l}(i32(uniforms.kernelSize) - pad);`;let[d,c,p,h,m]=nc(n,a);return d.push(...tk(r.dims,n)),{name:t,shaderCache:{hint:`${i.cacheKey};${p};${h};${m}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(tg.size(n)/64)},programUniforms:d}),getShaderSource:t=>np(t,o,r.dims.length,n.length,a,"value += x_val;",u,0,c,p,h,m)}},nb=t=>{let r=0!==t.count_include_pad,s=ng(t);if(0!==s.ceilMode)throw Error("using ceil() in shape computation is not yet supported for AveragePool");let i={countIncludePad:r,...s,cacheKey:""};return{...i,cacheKey:nm(i)}},ny=(t,r)=>{nu(t.inputs),t.compute(n_("AveragePool",t.inputs[0],!1,r))},nw={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},nx=t=>{let r=t.format;return{format:r,...nw,cacheKey:r}},nv=(t,r)=>{nu(t.inputs),t.compute(n_("GlobalAveragePool",t.inputs[0],!0,r))},nM=(t,r,s,i)=>{let[a,n]=nd(r,i,s),o=`
      value = max(x_val, value);
    `,l=tA("x",r.dataType,r.dims.length),[u,d,c,p,h]=nc(n,a);return u.push(...tk(r.dims,n)),{name:t,shaderCache:{hint:`${i.cacheKey};${c};${p};${h}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(tg.size(n)/64)},programUniforms:u}),getShaderSource:t=>np(t,l,r.dims.length,n.length,a,o,"",10===r.dataType?-65504:-1e5,d,c,p,h)}},nT=(t,r)=>{nu(t.inputs),t.compute(nM("MaxPool",t.inputs[0],!1,r))},nk=t=>{let r=t.storage_order,s=t.dilations,i=ng(t);if(0!==r)throw Error("column major storage order is not yet supported for MaxPool");if(0!==i.ceilMode)throw Error("using ceil() in shape computation is not yet supported for MaxPool");let a={storageOrder:r,dilations:s,...i,cacheKey:""};return{...a,cacheKey:nf(a)}},n$=t=>{let r=t.format;return{format:r,...nw,cacheKey:r}},nC=(t,r)=>{nu(t.inputs),t.compute(nM("GlobalMaxPool",t.inputs[0],!0,r))}}),lA=j(()=>{oq(),oY(),oJ(),oZ(),nS=(t,r)=>{if(t.length<2||t.length>3)throw Error("DequantizeLinear requires 2 or 3 inputs.");if(3===t.length&&t[1].dims===t[2].dims)throw Error("x-scale and x-zero-point must have the same shape.");if(3===t.length&&t[0].dataType!==t[2].dataType)throw Error("x and x-zero-point must have the same data type.");if(6===t[0].dataType&&t.length>2)throw Error("In the case of dequantizing int32 there is no zero point.");if(0!==t[1].dims.length&&1!==t[1].dims.length&&t[1].dims.length!==t[0].dims.length)throw Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(t.length>2){if(t[0].dataType!==t[2].dataType)throw Error("x and x-zero-point must have the same data type.");if(t[1].dims.length!==t[2].dims.length)throw Error("scale and zero-point inputs must have the same rank.");if(!t[1].dims.map((r,s)=>r===t[2].dims[s]).reduce((t,r)=>t&&r,!0))throw Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(0===t[1].dims.length||1===t[1].dims.length&&1===t[1].dims[0])throw Error("blockSize must be set only for block quantization.");if(!t[1].dims.map((s,i)=>i===r.axis||s===t[0].dims[i]).reduce((t,r)=>t&&r,!0))throw Error("For block qunatization, scale input shape to match the input shape except for the axis");if(t[1].dims.length!==t[0].dims.length)throw Error("For block qunatization the scale input rank must be the same as the x rank.");let s=t[0].dims[r.axis],i=t[1].dims[r.axis];if(r.blockSize<Math.ceil(s/i)||r.blockSize>Math.ceil(s/(i-1)-1))throw Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},nP=(t,r)=>{let s=tg.normalizeAxis(r.axis,t[0].dims.length),i=t[0].dataType,a=3===i,n=t[0].dims,o=t[1].dataType,l=tg.size(n),u=3===i||2===i,d=u?[Math.ceil(tg.size(t[0].dims)/4)]:t[0].dims,c=t[1].dims,p=t.length>2?t[2]:void 0,h=p?u?[Math.ceil(tg.size(p.dims)/4)]:p.dims:void 0,m=0===c.length||1===c.length&&1===c[0],f=!1===m&&1===c.length,g=t$(l),_=m&&(!u||4===g),b=_?g:1,y=tA("input",u?12:i,d.length,_&&!u?g:1),w=tA("scale",o,c.length),x=p?tA("zero_point",u?12:i,h.length):void 0,v=tF("output",o,n.length,b),M=[y,w];x&&M.push(x);let T=[d,c];p&&T.push(h);let k=[{type:12,data:l/b},{type:12,data:s},{type:12,data:r.blockSize},...tk(...T,n)];return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:x?["rank","rank","rank"]:["rank","rank"]},getShaderSource:t=>`
      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...M,v)}
      ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${v.offsetToIndices("global_idx")};

          // Set input x
          ${u?`
            let input = ${y.getByOffset("global_idx / 4")};
            let x_vec = ${a?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${1===b?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${y.getByOffset("global_idx")};`};

          // Set scale input
          ${m?`let scale_value= ${w.getByOffset("0")}`:f?`
            let scale_index = ${v.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${w.getByOffset("scale_index")};`:`
            var scale_indices: ${w.type.indices} = output_indices;
            let index = ${w.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${w.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${w.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${x?m?u?`
                let zero_point_input = ${x.getByOffset("0")};
                let zero_point_vec =  ${a?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${x.getByOffset("0")}`:f?u?`
                let zero_point_index = ${v.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${x.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${a?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${v.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${x.getByOffset("zero_point_index")};`:u?`
                let zero_point_offset = ${w.indicesToOffset("scale_indices")};
                let zero_point_input = ${x.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${a?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${x.getByIndices("scale_indices")};`:`let zero_point_value = ${u?a?"i32":"u32":y.type.value}(0);`};
      // Compute and write output
      ${v.setByOffset("global_idx",`${v.type.value}(x_value - zero_point_value) * scale_value`)};
      }`,getRunData:()=>({outputs:[{dims:n,dataType:o}],dispatchGroup:{x:Math.ceil(l/b/64),y:1,z:1},programUniforms:k})}},nE=(t,r)=>{nS(t.inputs,r),t.compute(nP(t.inputs,r))},nI=t=>th({axis:t.axis,blockSize:t.blockSize})}),lF=j(()=>{ed(),oq(),oZ(),nA=(t,r,s)=>{if(t===r||t<r&&s<0||t>r&&s>0)throw Error("Range these inputs' contents are invalid.")},nF=(t,r,s,i)=>{let a=Math.abs(Math.ceil((r-t)/s)),n=[a],o=[{type:12,data:a},{type:i,data:t},{type:i,data:s},...tk(n)];return{name:"Range",shaderCache:{hint:`${i}`},getShaderSource:t=>{let r=tF("output",i,n.length),s=r.type.value;return`
        ${t.registerUniforms([{name:"outputSize",type:"u32"},{name:"start",type:s},{name:"delta",type:s}]).declareVariables(r)}
        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${s}(global_idx) * uniforms.delta;
      }`},getRunData:()=>({outputs:[{dims:n,dataType:i}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:o})}},nz=t=>{let r=0,s=0,i=0;6===t.inputs[0].dataType?(r=t.inputs[0].getInt32Array()[0],s=t.inputs[1].getInt32Array()[0],i=t.inputs[2].getInt32Array()[0]):1===t.inputs[0].dataType&&(r=t.inputs[0].getFloat32Array()[0],s=t.inputs[1].getFloat32Array()[0],i=t.inputs[2].getFloat32Array()[0]),h.webgpu.validateInputContent&&nA(r,s,i),t.compute(nF(r,s,i,t.inputs[0].dataType),{inputs:[]})}}),lz=j(()=>{oq(),oY(),oJ(),oZ(),nO=(t,r,s,i)=>{if("none"!==t&&"i32"!==i&&"u32"!==i&&"f32"!==i)throw Error(`Input ${i} is not supported with reduction ${t}.`);let a=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,n=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(t){case"none":return`${r}=${s};`;case"add":return"i32"===i||"u32"===i?`atomicAdd(&${r}, bitcast<${i}>(${s}));`:`
              ${a}bitcast<${i}>(oldValue) + (${s})${n}`;case"max":return"i32"===i||"u32"===i?`atomicMax(&${r}, bitcast<${i}>(${s}));`:`
                ${a}max(bitcast<f32>(oldValue), (${s}))${n}`;case"min":return"i32"===i||"u32"===i?`atomicMin(&${r}, bitcast<${i}>(${s}));`:`${a}min(bitcast<${i}>(oldValue), (${s}))${n}`;case"mul":return`${a}(bitcast<${i}>(oldValue) * (${s}))${n}`;default:throw Error(`Reduction ${t} is not supported.`)}},nL=(t,r)=>{let s=t[0].dims,i=t[1].dims,a=Math.ceil(tg.size(i)/1),n=i[i.length-1],o=tg.sizeFromDimension(s,n),l=[{type:12,data:a},{type:12,data:n},{type:12,data:o},...tk(t[1].dims,t[2].dims,s)];return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:l}),getShaderSource:i=>{let a=tA("indices",t[1].dataType,t[1].dims.length),n=tA("updates",t[2].dataType,t[2].dims.length,1),o="none"!==r.reduction&&""!==r.reduction?tz("output",t[0].dataType,s.length):tF("output",t[0].dataType,s.length,1);return`
      ${i.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(a,n,o)}
      ${i.mainStart()}
        ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var data_offset = 0u;
  let indices_start = uniforms.last_index_dimension * global_idx;
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${1===t[0].dims.length?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${nO(r.reduction,"output[data_offset + i]","value",o.type.value)}
  }

      }`}}},nB=t=>th({reduction:t.reduction}),nN=(t,r)=>{t.compute(nL(t.inputs,r),{inputs:[t.inputs[1],t.inputs[2]],outputs:[]})}}),lO=j(()=>{oq(),oY(),oJ(),oZ(),nD=(t,r)=>{if(t.every(t=>t>0||(()=>{throw Error("Resize requires scales input values to be positive")})),t.length>0){if("linear"===r.mode){if(!(2===t.length||3===t.length||4===t.length&&1===t[0]&&1===t[1]||4===t.length&&1===t[0]&&1===t[3]||5===t.length&&1===t[0]&&1===t[1]))throw Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if("cubic"===r.mode&&!(2===t.length||4===t.length&&1===t[0]&&1===t[1]||4===t.length&&1===t[0]&&1===t[3]))throw Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},nR=(t,r,s)=>{r.every(t=>t>=0&&t<s||(()=>{throw Error("Resize requires axes input values to be positive and less than rank")}));let i=Array(s).fill(1);return r.forEach((r,s)=>i[r]=t[s]),i},nj=(t,r,s,i,a,n)=>{let[o,l,u]=s>10?[1,2,3]:[-1,t.length>1?1:-1,-1],d=t[0].dims.length;if(o>0&&t.length>o&&t[o].dims.length>0)t[o].getFloat32Array().forEach(t=>n.push(t));else if("tf_crop_and_resize"===r.coordinateTransformMode)throw Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(l>0&&t.length>l&&1===t[l].dims.length&&t[l].dims[0]>0){if(t[l].getFloat32Array().forEach(t=>i.push(t)),0!==i.length&&i.length!==d&&s>=18&&i.length!==r.axes.length)throw Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");nD(i,r),r.axes.length>0&&nR(i,r.axes,d).forEach((t,r)=>i[r]=t)}if(u>0&&t.length>u&&1===t[u].dims.length&&t[u].dims[0]>0&&(t[u].getBigInt64Array().forEach(t=>a.push(Number(t))),0!==a.length&&a.length!==d&&s>=18&&a.length!==r.axes.length))throw Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(0!==i.length&&i.length!==r.axes.length)throw Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(0!==a.length&&a.length!==r.axes.length)throw Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if("u">typeof i&&"u">typeof a&&i.length>0&&a.length>d)throw Error("Resize requires only of scales or sizes to be specified")},nV=(t,r,s,i)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${t}) * (${r});
  let whole = ${i}(big / (${s}));
  let fract = ${i}(big % (${s})) / ${i}(${s});
  return whole + fract;
`,nG=(t,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(t){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${nV("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${nV("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw Error(`Coordinate transform mode ${t} is not supported`)}})()+"}",nU=(t,r,s)=>`fn getNearestPixelFromOriginal(xOriginal: ${s}, isDownSample: bool) -> ${s} {`+(()=>{switch(t){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw Error(`Nearest mode ${t} is not supported`)}})()+"}",nq=(t,r,s)=>{let i=Array(s).fill(0).concat(Array(s).fill(1)),a=0===t.length?i:t.slice();return r.length>0?(r.forEach((t,n)=>{i[t]=a[n],i[n+s]=a[r.length+n]}),i):a},nW=(t,r,s,i)=>{let a=[];if(s.length>0){if(i.length>0){if(t.forEach(t=>a.push(t)),Math.max(...i)>t.length)throw Error("axes is out of bound");i.forEach((t,r)=>a[t]=s[r])}else s.forEach(t=>a.push(t))}else{if(0===r.length)throw Error("Resize requires either scales or sizes.");a=t.map((t,s)=>Math.round(t*r[s]))}return a},nH=(t,r,s)=>{let i=(()=>{switch(s.keepAspectRatioPolicy){case"not_larger":return s.axes.length>0?Math.min(...s.axes.map(t=>r[t]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return s.axes.length>0?Math.max(...s.axes.map(t=>r[t]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw Error(`Keep aspect ratio policy ${s.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let a=t.slice();return s.axes.length>0?(s.axes.forEach(t=>r[t]=i),s.axes.forEach(s=>a[s]=Math.round(t[s]*r[s]))):(r.fill(i,0,r.length),a.forEach((t,s)=>a[s]=Math.round(t*r[s]))),a},nK=(t,r,s,i,a)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> array<${t.type.value}, ${s.length}> {
      var original_indices: array<${t.type.value}, ${s.length}>;
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var scale = ${tE("uniforms.scales","i",i)};
        var roi_low = ${tE("uniforms.roi","i",a)};
        var roi_hi = ${tE("uniforms.roi",`i + ${r.length}`,a)};
        if (scale == 1.0) {
          original_indices[i] = ${t.type.value}(output_index);
        } else {
          var input_shape_i = ${tE("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${tE("uniforms.output_shape","i",s.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,nQ=(t,r,s,i,a,n,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${t.type.indices} {
      var input_indices: ${t.type.indices};
      for (var i:u32 = 0; i < ${i.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${tE("uniforms.scales","i",a)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${tE("uniforms.roi","i",n)};
          var roi_hi = ${tE("uniforms.roi",`i + ${s.length}`,n)};
          var input_shape_i = ${tE("uniforms.input_shape","i",s.length)};
          var output_shape_i = ${tE("uniforms.output_shape","i",i.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${t.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,nX=(t,r)=>`
    fn checkInputIndices(input_indices: ${t.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${t.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${tE("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,nJ=(t,r,s,i)=>t.rank>i?`
    ${t.indicesSet("input_indices",r,"channel")};
    ${t.indicesSet("input_indices",s,"batch")};
`:"",nY=(t,r,s,i,a)=>{let[n,o,l,u]=2===s.length?[-1,0,1,-1]:[0,2,3,1],d=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",o,`max(0, min(row, ${s[o]} - 1))`)};
      ${t.indicesSet("input_indices",l,`max(0, min(col, ${s[l]} - 1))`)};
      ${nJ(t,u,n,2)}
      return ${t.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${o}];
      var col:${d} = originalIndices[${l}];
      ${i?`if (row < 0 || row > (${s[o]} - 1) || col < 0 || col > (${s[l]} - 1)) {
        return ${a};
      }`:""};
      row = max(0, min(row, ${s[o]} - 1));
      col = max(0, min(col, ${s[l]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${s.length>2?`u32(originalIndices[${u}])`:"0"};
      var batch: u32 =  ${s.length>2?`u32(originalIndices[${n}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},nZ=(t,r,s,i,a,n,o,l,u,d)=>{let[c,p]=2===s.length?[0,1]:[2,3],h=t.type.value,m=o=>{let p=o===c?"row":"col";return`
      fn ${p}CubicInterpolation(input_indices: ${t.type.indices}, output_indices: ${r.type.indices}) -> ${h} {
        var output_index = ${r.indicesGet("output_indices",o)};
        var originalIdx: ${h} = getOriginalCoordinateFromResizedCoordinate(output_index, ${a[o]},
        ${i[o]}, ${s[o]}, ${n[o]}, ${n[o]} + ${s.length});
        var fractOriginalIdx: ${h} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${l} && (originalIdx < 0 || originalIdx > (${s[o]} - 1))) {
          return ${u};
        }
        var data: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${p}: ${h} = originalIdx + ${h}(i);
          if (${p} < 0 || ${p} >= ${s[o]}) {
            ${d?`coefs[i + 1] = 0.0;
                        continue;`:l?`return ${u};`:`${p} = max(0, min(${p}, ${s[o]} - 1));`};
          }
        var input_indices_copy: ${t.type.indices} = input_indices;
          ${t.indicesSet("input_indices_copy",o,`u32(${p})`)};
          data[i + 1] = ${o===c?t.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${m(c)};
    ${m(p)};
  fn getCubicInterpolationCoefs(s: ${h}) -> array<${h}, 4> {
    var absS = abs(s);
    var coeffs: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${h} = 1.0 - absS;
    var twoMinusAbsS: ${h} = 2.0 - absS;
    var onePlusAbsS: ${h} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${h}, 4>, coefs: array<${h}, 4>) -> ${h} {
    var coefsSum: ${h} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${h} {
    var input_indices: ${t.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},n0=(t,r,s,i,a)=>{let[n,o,l,u,d]=3===s.length?[-1,0,1,2,-1]:[0,2,3,4,1],c=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${c} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",o,`max(0, min(depth, ${s[o]} - 1))`)};
      ${t.indicesSet("input_indices",l,`max(0, min(height, ${s[l]} - 1))`)};
      ${t.indicesSet("input_indices",u,`max(0, min(width, ${s[u]} - 1))`)};
      ${nJ(t,d,n,3)}
      return ${t.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${c} = originalIndices[${o}];
      var height:${c} = originalIndices[${l}];
      var width:${c} = originalIndices[${u}];
      ${i?`if (depth < 0 || depth > (${s[o]} - 1) || height < 0 || height > (${s[l]} - 1) || width < 0 || (width > ${s[u]} - 1)) {
      return ${a};
        }`:""};

    depth = max(0, min(depth, ${s[o]} - 1));
      height = max(0, min(height, ${s[l]} - 1));
      width = max(0, min(width, ${s[u]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${s.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${s.length>3?`u32(originalIndices[${n}])`:"0"};

      var x111: ${c} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${c} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${c} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${c} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${c} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${c} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${c} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${c} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${c} = abs(depth - ${c}(depth1));
      var dx2: ${c} = abs(${c}(depth2) - depth);
      var dy1: ${c} = abs(height - ${c}(height1));
      var dy2: ${c} = abs(${c}(height2) - height);
      var dz1: ${c} = abs(width - ${c}(width1));
      var dz2: ${c} = abs(${c}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},n1=(t,r,s,i,a,n)=>{let o=t.dims,l=nq(n,r.axes,o.length),u=nW(o,i,a,r.axes),d=i.slice();0===i.length&&(d=o.map((t,r)=>0===t?1:u[r]/t),"stretch"!==r.keepAspectRatioPolicy&&(u=nH(o,d,r)));let c=tF("output",t.dataType,u.length),p=tA("input",t.dataType,o.length),h=tg.size(u),m=o.length===u.length&&o.every((t,r)=>t===u[r]),f="tf_crop_and_resize"===r.coordinateTransformMode,g=r.extrapolationValue,_=p.type.value;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${s}|${d.length>0?"cubic"===r.mode?d:d.length:""}|${a.length>0?a:""}|${l.length>0?l:""}|${m}|${"nearest"===r.mode?o.length:o}`,inputDependencies:["rank"]},getShaderSource:t=>`
      ${m?"":`
      ${nG(r.coordinateTransformMode,_)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${nX(p,o)};
              ${nU(r.nearestMode,s,_)};
              ${nQ(p,c,o,u,d.length,l.length,f)};
              `;case"linear":return`
              ${nK(c,o,u,d.length,l.length)};
              ${(()=>{if(2===o.length||4===o.length)return`${nY(p,c,o,f,g)}`;if(3===o.length||5===o.length)return`${n0(p,c,o,f,g)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(2===o.length||4===o.length)return`${nZ(p,c,o,u,d,l,r.cubicCoeffA,f,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${t.registerUniform("output_size","u32").registerUniform("scales","f32",d.length).registerUniform("roi","f32",l.length).declareVariables(p,c)}
      ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${m?"output[global_idx] = input[global_idx];":`
        let output_indices = ${c.offsetToIndices("global_idx")};
        var input_indices: ${p.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${p.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${2===o.length||4===o.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`,getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},{type:1,data:d},{type:1,data:l},...tk(o,u)]})}},n2=t=>{let r=t.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},n3=(t,r)=>{let s=[],i=[],a=[],n=n2(t);if(0!==r.antialias)throw Error("Only default value (0) for Antialias attribute is supported");nj(t.inputs,r,n,s,i,a),t.compute(n1(t.inputs[0],r,n,s,i,a),{inputs:[0]})},n4=t=>{let r=t.antialias,s=t.axes,i=t.coordinateTransformMode,a=t.cubicCoeffA,n=0!==t.excludeOutside,o=t.extrapolationValue,l=t.keepAspectRatioPolicy,u=t.mode,d=""===t.nearestMode?"simple":t.nearestMode;return th({antialias:r,axes:s,coordinateTransformMode:i,cubicCoeffA:a,excludeOutside:n,extrapolationValue:o,keepAspectRatioPolicy:l,mode:u,nearestMode:d})}}),lL=j(()=>{oq(),oY(),oJ(),oZ(),n6=(t,r)=>{let[s,i,a,n]=t,{numHeads:o,rotaryEmbeddingDim:l}=r;if(3!==s.dims.length&&4!==s.dims.length)throw Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${s.dims.length}`);if(!tg.areEqual(i.dims,[])&&!tg.areEqual(i.dims,[1])&&2!==i.dims.length)throw Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${i.dims.length}`);if(2!==a.dims.length)throw Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(2!==n.dims.length)throw Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(!tg.areEqual(a.dims,n.dims))throw Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(l>0&&0===o)throw Error("num_heads must be provided if rotary_embedding_dim is specified");let u=s.dims[0],d=s.dims[s.dims.length-2],c=a.dims[0],p=tg.sizeFromDimension(s.dims,1)/d,h=0===l?2*a.dims[1]:p/o;if(l>h)throw Error("rotary_embedding_dim must be less than or equal to head_size");if(2===i.dims.length){if(u!==i.dims[0])throw Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${i.dims[0]}`);if(d!==i.dims[1])throw Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${i.dims[1]}`)}if(h/2!==a.dims[1]&&l/2!==a.dims[1])throw Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${a.dims[1]}`);if(d>c)throw Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},n8=(t,r)=>{let{interleaved:s,numHeads:i,rotaryEmbeddingDim:a,scale:n}=r,o=t[0].dims[0],l=tg.sizeFromDimension(t[0].dims,1),u=t[0].dims[t[0].dims.length-2],d=l/u,c=t[2].dims[1],p=0===a?2*c:d/i,h=[o,u,d/p,p-c],m=tg.computeStrides(h),f=[{type:1,data:n},{type:12,data:h},{type:12,data:m},...3===t[0].dims.length?Array({type:12,data:[l,d,p,1]}):[],...4===t[0].dims.length?Array({type:12,data:[l,p,u*p,1]}):[],...tk(t[0].dims,t[1].dims,t[2].dims,t[3].dims,t[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:th({interleaved:s}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:r=>{let i=tA("input",t[0].dataType,t[0].dims.length),a=tA("position_ids",t[1].dataType,t[1].dims.length),n=tA("cos_cache",t[2].dataType,t[2].dims.length),o=tA("sin_cache",t[3].dataType,t[3].dims.length),l=tF("output",t[0].dataType,t[0].dims.length);return r.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:h.length},{name:"global_strides",type:"u32",length:m.length},{name:"input_output_strides",type:"u32",length:m.length}]),`
        ${r.declareVariables(i,a,n,o,l)}

        ${r.mainStart(tx)}
          let half_rotary_emb_dim = uniforms.${n.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${r.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${a.broadcastedIndicesToOffset("bsnh.xy",tF("",a.type.tensor,2))};
            let position_id =
                u32(${a.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${s});
            let j = i + select(half_rotary_emb_dim, 1, ${s});
            let re = ${i.getByOffset("i")} * ${n.get("position_id","bsnh[3]")} -
                ${i.getByOffset("j")} * ${o.get("position_id","bsnh[3]")};
            ${l.setByOffset("i","re")}
            let im = ${i.getByOffset("i")} * ${o.get("position_id","bsnh[3]")} +
                ${i.getByOffset("j")} * ${n.get("position_id","bsnh[3]")};
            ${l.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${l.setByOffset("k",i.getByOffset("k"))}
          }
        }`},getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(tg.size(h)/tx)},programUniforms:f})}},n5=(t,r)=>{n6(t.inputs,r),t.compute(n8(t.inputs,r))}}),lB=j(()=>{oq(),oY(),oZ(),n9=t=>{if(!t||t.length<3)throw Error("layerNorm requires at least 3 inputs.");let r=t[0],s=t[1],i=t[2];if(r.dataType!==s.dataType||r.dataType!==i.dataType)throw Error("All inputs must have the same data type");if(3!==r.dims.length&&2!==r.dims.length)throw Error("Input must be 2D or 3D");if(3!==s.dims.length&&2!==s.dims.length)throw Error("Skip must be 2D or 3D");let a=r.dims[r.dims.length-1],n=r.dims[r.dims.length-2];if(s.dims[s.dims.length-1]!==a)throw Error("Skip must have the same hidden size as input");if(s.dims[s.dims.length-2]!==n)throw Error("Skip must have the same sequence length as input");if(1!==i.dims.length)throw Error("Gamma must be 1D");if(i.dims[i.dims.length-1]!==a)throw Error("Gamma must have the same hidden size as input");if(t.length>3){let r=t[3];if(1!==r.dims.length)throw Error("Beta must be 1D");if(r.dims[r.dims.length-1]!==a)throw Error("Beta must have the same hidden size as input")}if(t.length>4){let r=t[4];if(1!==r.dims.length)throw Error("Bias must be 1D");if(r.dims[r.dims.length-1]!==a)throw Error("Bias must have the same hidden size as input")}},n7=(t,r,s,i)=>{let a=r.simplified,n=t[0].dims,o=tg.size(n),l=n.slice(-1)[0],u=i?n.slice(0,-1).concat(1):[],d=!a&&t.length>3,c=t.length>4,p=i&&s>1,h=i&&s>2,m=s>3,f=t$(l),g=[{type:12,data:o},{type:12,data:f},{type:12,data:l},{type:1,data:r.epsilon}],_=[{dims:n,dataType:t[0].dataType}];return s>1&&_.push({dims:u,dataType:1}),s>2&&_.push({dims:u,dataType:1}),s>3&&_.push({dims:n,dataType:t[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${f};${p};${h};${m}`,inputDependencies:t.map((t,r)=>"type")},getShaderSource:r=>{let s=[tA("x",t[0].dataType,t[0].dims,f),tA("skip",t[1].dataType,t[1].dims,f),tA("gamma",t[2].dataType,t[2].dims,f)];d&&s.push(tA("beta",t[3].dataType,t[3].dims,f)),c&&s.push(tA("bias",t[4].dataType,t[4].dims,f)),s.push(tF("output",t[0].dataType,n,f)),p&&s.push(tF("mean_output",1,u)),h&&s.push(tF("inv_std_output",1,u)),m&&s.push(tF("input_skip_bias_sum",t[0].dataType,n,f));let i=tM(t[0].dataType),o=tM(1,f);return`

      ${r.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...s)}
      var<workgroup> sum_shared : array<${o}, 64>;
      var<workgroup> sum_squared_shared : array<${o}, 64>;

      ${r.mainStart([64,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / 64;

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / 64;
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == 63) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${c?"bias[offset1d + i]":i+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${m?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${tS(i,f,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = 64;
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${tP("sum",f)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${tP("square_sum",f)} / f32(uniforms.hidden_size) ${a?"":"- mean * mean"} + uniforms.epsilon);
        ${p?"mean_output[global_idx] = mean;":""}
        ${h?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${a?"":`- ${i}(mean)`}) *
            ${i}(inv_std_dev) * gamma[offset1d + i]
            ${d?"+ beta[offset1d + i]":""};
        }
      }`},getRunData:()=>({outputs:_,dispatchGroup:{x:Math.ceil(o/l)},programUniforms:g})}},oe=(t,r)=>{n9(t.inputs);let s=[0];t.outputCount>1&&s.push(-3),t.outputCount>2&&s.push(-3),t.outputCount>3&&s.push(3),t.compute(n7(t.inputs,r,t.outputCount,!1),{outputs:s})}}),lN=j(()=>{oq(),oY(),oJ(),oZ(),ot=(t,r)=>{if(!t||t.length<1)throw Error("too few inputs");if(0!==r.axes.length){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw Error("starts and ends must have the same length");t.slice(1).forEach((r,s)=>{if(6!==t[s+1].dataType&&7!==t[s+1].dataType)throw Error(`Input ${s} must be an array of int32 or int64`)})},or=(t,r)=>{let s=[];if(t.length>r){if(7===t[r].dataType)t[r].getBigInt64Array().forEach(t=>s.push(Number(t)));else if(6===t[r].dataType)t[r].getInt32Array().forEach(t=>s.push(Number(t)));else throw Error(`Input ${r} must be an array of int32 or int64`)}return s},os=(t,r)=>{if(!(t.length>1))return r;{let r=or(t,1),s=or(t,2),i=or(t,3);return 0===i.length&&(i=[...Array(t[0].dims.length).keys()]),th({starts:r,ends:s,axes:i})}},oi=(t,r,s,i,a)=>{let n=t;return t<0&&(n+=s[i[r]]),a[r]<0?Math.max(0,Math.min(n,s[i[r]]-1)):Math.max(0,Math.min(n,s[i[r]]))},oa=(t,r,s)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${t.type.indices} {
          var input_indices: ${t.type.indices};
          var carry = 0u;
          for (var i = ${s.length}; i >= 0; i--) {
            let input_shape_i = ${tE("uniforms.input_shape","i",s.length)};
            let steps_i = ${tE("uniforms.steps","i",s.length)};
            let signs_i = ${tE("uniforms.signs","i",s.length)};
            let starts_i = ${tE("uniforms.starts","i",s.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${t.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,on=(t,r)=>{let s=t[0].dims,i=tg.size(s),a=r.axes.length>0?tg.normalizeAxes(r.axes,s.length):[...Array(s.length).keys()],n=or(t,4);n.forEach(t=>0!==t||(()=>{throw Error("step cannot be 0")})),0===n.length&&(n=Array(a.length).fill(1));let o=r.starts.map((t,r)=>oi(t,r,s,a,n)),l=r.ends.map((t,r)=>oi(t,r,s,a,n));if(a.length!==o.length||a.length!==l.length)throw Error("start, ends and axes should have the same number of elements");if(a.length!==s.length)for(let t=0;t<s.length;++t)a.includes(t)||(o.splice(t,0,0),l.splice(t,0,s[t]),n.splice(t,0,1));let u=n.map(t=>Math.sign(t));n.forEach((t,r,s)=>{if(t<0){let i=(l[r]-o[r])/t,a=o[r],u=a+i*n[r];o[r]=u,l[r]=a,s[r]=-t}});let d=s.slice(0);a.forEach((t,r)=>{d[t]=Math.ceil((l[t]-o[t])/n[t])});let c={dims:d,dataType:t[0].dataType},p=tF("output",t[0].dataType,d.length),h=tA("input",t[0].dataType,t[0].dims.length),m=tg.size(d),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:n.length}],g=[{type:12,data:m},{type:12,data:o},{type:6,data:u},{type:12,data:n},...tk(t[0].dims,d)];return{name:"Slice",shaderCache:{hint:`${u.length}_${o.length}_${n.length}`,inputDependencies:["rank"]},getShaderSource:t=>`
      ${t.registerUniforms(f).declareVariables(h,p)}
        ${oa(h,p,s)}
        ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${p.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${p.setByOffset("global_idx",h.getByIndices("input_indices"))}
      }`,getRunData:()=>({outputs:[c],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:g})}},oo=(t,r)=>{ot(t.inputs,r);let s=os(t.inputs,r);t.compute(on(t.inputs,s),{inputs:[0]})},ol=t=>{let r=t.starts,s=t.ends,i=t.axes;return th({starts:r,ends:s,axes:i})}}),lD=j(()=>{oq(),oY(),oJ(),o0(),oZ(),ou=t=>{if(!t||1!==t.length)throw Error("Softmax op requires 1 input.")},od=(t,r)=>{let s=t.inputs[0],i=s.dims,a=tg.size(i),n=i.length,o=tg.normalizeAxis(r.axis,n),l=o<i.length-1,u,d=[];l?((d=Array.from({length:n},(t,r)=>r))[o]=n-1,d[n-1]=o,u=t.compute(tU(s,d),{inputs:[s],outputs:[-1]})[0]):u=s;let c=u.dims,p=c[n-1],h=a/p,m=t$(p),f=p/m,g=64;1===h&&(g=256);let _=(t,r)=>4===r?`max(max(${t}.x, ${t}.y), max(${t}.z, ${t}.w))`:2===r?`max(${t}.x, ${t}.y)`:3===r?`max(max(${t}.x, ${t}.y), ${t}.z)`:t,b=tA("x",u.dataType,u.dims,m),y=tF("result",u.dataType,u.dims,m),w=b.type.value,x="f32"===tM(u.dataType)?`var threadMax = ${w}(-3.402823e+38f);`:`var threadMax = ${w}(-65504.0h);`,v=t.compute({name:"Softmax",shaderCache:{hint:`${m};${g}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:c,dataType:u.dataType}],dispatchGroup:{x:h},programUniforms:[{type:6,data:f}]}),getShaderSource:t=>`
      var<workgroup> rowMaxShared : ${w};
      var<workgroup> rowSumShared : ${w};
      var<workgroup> threadShared : array<${w}, ${g}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${w} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${w}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${t.registerUniform("packedCols","i32").declareVariables(b,y)}
      ${t.mainStart(g)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${g};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${x}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${w}(${_("threadShared[0]",m)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${w}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${w}(${tP("threadShared[0]",m)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`},{inputs:[u],outputs:[l?-1:0]})[0];l&&t.compute(tU(v,d),{inputs:[v]})},oc=(t,r)=>{ou(t.inputs),od(t,r)},op=t=>th({axis:t.axis})}),lR=j(()=>{oq(),oY(),oZ(),oh=t=>Array.from(t.getBigInt64Array(),Number),om=t=>{if(!t||2!==t.length)throw Error("Tile requires 2 inputs.");if(1!==t[0].dataType&&10!==t[0].dataType&&6!==t[0].dataType&&12!==t[0].dataType)throw Error("Tile only support float, float16, int32, and uint32 data types");if(7!==t[1].dataType)throw Error("Tile `repeats` input should be of int64 data type");if(1!==t[1].dims.length)throw Error("Tile `repeats` input should be 1-D");if(oh(t[1]).length!==t[0].dims.length)throw Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},of=(t,r)=>{let s=[];for(let i=0;i<t.length;++i)s.push(t[i]*r[i]);return s},og=(t,r)=>{let s=t[0].dims,i=r??oh(t[1]),a=of(s,i),n=tg.size(a),o=t[0].dataType,l=tA("input",o,s.length),u=tF("output",o,a.length);return{name:"Tile",shaderCache:{hint:`${i}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},...tk(t[0].dims,a)]}),getShaderSource:t=>`
      const inputShape = ${l.indices(...s)};
      ${t.registerUniform("output_size","u32").declareVariables(l,u)}
      ${t.mainStart()}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${u.offsetToIndices("global_idx")};
      var input_indices: ${l.type.indices};
      for (var i = 0; i < ${s.length}; i++) {
        let input_dim_i = ${l.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${u.indicesGet("output_indices","i")}  % input_dim_i;

        ${l.indicesSet("input_indices","i","input_dim_value")}
      }
      ${u.setByOffset("global_idx",l.getByIndices("input_indices"))}
    }`}},o_=t=>{om(t.inputs),t.compute(og(t.inputs),{inputs:[0]})}}),lj=j(()=>{oq(),oY(),oZ(),ob=(t,r,s,i,a)=>{let n=tF("output_data",a,s.length,4),o=tA("a_data",r[1].dataType,r[1].dims.length,4),l=tA("b_data",r[2].dataType,r[2].dims.length,4),u=tA("c_data",r[0].dataType,r[0].dims.length,4),d,c=(t,r,s)=>`select(${r}, ${t}, ${s})`;if(i){let t=(t,r,s="")=>{let i=`a_data[index_a${r}][component_a${r}]`,a=`b_data[index_b${r}][component_b${r}]`,d=`bool(c_data[index_c${r}] & (0xffu << (component_c${r} * 8)))`;return`
            let output_indices${r} = ${n.offsetToIndices(`global_idx * 4u + ${r}u`)};
            let offset_a${r} = ${o.broadcastedIndicesToOffset(`output_indices${r}`,n)};
            let offset_b${r} = ${l.broadcastedIndicesToOffset(`output_indices${r}`,n)};
            let offset_c${r} = ${u.broadcastedIndicesToOffset(`output_indices${r}`,n)};
            let index_a${r} = offset_a${r} / 4u;
            let index_b${r} = offset_b${r} / 4u;
            let index_c${r} = offset_c${r} / 4u;
            let component_a${r} = offset_a${r} % 4u;
            let component_b${r} = offset_b${r} % 4u;
            let component_c${r} = offset_c${r} % 4u;
            ${t}[${r}] = ${s}(${c(i,a,d)});
          `};d=9===a?`
            var data = vec4<u32>(0);
            ${t("data",0,"u32")}
            ${t("data",1,"u32")}
            ${t("data",2,"u32")}
            ${t("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${t("output_data[global_idx]",0)}
            ${t("output_data[global_idx]",1)}
            ${t("output_data[global_idx]",2)}
            ${t("output_data[global_idx]",3)}
          `}else d=n.setByOffset("global_idx",c(o.getByOffset("global_idx"),l.getByOffset("global_idx"),u.getByOffset("global_idx")));return`
        ${t.registerUniform("vec_size","u32").declareVariables(u,o,l,n)}
        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${d}
      }`},oy=t=>{let r=t[1].dims,s=t[2].dims,i=t[0].dims,a=t[1].dataType,n=!(tg.areEqual(r,s)&&tg.areEqual(s,i)),o=r,l=tg.size(r);if(n){let t=tf.calcShape(tf.calcShape(r,s,!1),i,!1);if(!t)throw Error("Can't perform where op on the given tensors");o=t,l=tg.size(o)}let u=Math.ceil(l/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:r=>ob(r,t,o,n,a),getRunData:()=>({outputs:[{dims:o,dataType:a}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:12,data:u},...tk(i,r,s,o)]})}},ow=t=>{t.compute(oy(t.inputs))}}),lV=j(()=>{o3(),o4(),o6(),o8(),o9(),o7(),le(),lu(),lc(),lp(),lh(),lm(),lf(),lg(),l_(),lb(),ly(),lw(),lx(),lv(),lk(),l$(),lC(),lS(),lP(),lM(),lE(),lI(),lA(),lF(),lz(),o2(),lO(),lL(),lB(),lN(),lD(),lT(),lR(),o0(),o5(),lj(),ox=new Map([["Abs",[rJ]],["Acos",[rY]],["Acosh",[rZ]],["Add",[sL]],["ArgMax",[rA,rF]],["ArgMin",[rI,rF]],["Asin",[r0]],["Asinh",[r1]],["Atan",[r2]],["Atanh",[r3]],["Attention",[rj]],["AveragePool",[ny,nb]],["BatchNormalization",[rq]],["BiasAdd",[rK]],["BiasSplitGelu",[sA]],["Cast",[r6,r4]],["Ceil",[r9]],["Clip",[r5]],["Concat",[sX,sJ]],["Conv",[iC,iM]],["ConvTranspose",[iB,iF]],["Cos",[r7]],["Cosh",[se]],["CumSum",[iD,iR]],["DepthToSpace",[iU,iq]],["DequantizeLinear",[nE,nI]],["Div",[sB]],["Einsum",[i0,i1]],["Elu",[sr,st]],["Equal",[sN]],["Erf",[si]],["Exp",[sa]],["Expand",[i8]],["FastGelu",[i9]],["Floor",[sn]],["FusedConv",[iC,iM]],["Gather",[ar,at]],["GatherElements",[ah,ap]],["GatherBlockQuantized",[al,au]],["GatherND",[ai,aa]],["Gelu",[so]],["Gemm",[a_,ag]],["GlobalAveragePool",[nv,nx]],["GlobalMaxPool",[nC,n$]],["Greater",[sV]],["GreaterOrEqual",[sU]],["GridSample",[aE,aI]],["GroupQueryAttention",[aQ]],["HardSigmoid",[sf,sm]],["InstanceNormalization",[aZ]],["LayerNormalization",[a2]],["LeakyRelu",[sl,st]],["Less",[sG]],["LessOrEqual",[sq]],["Log",[s$]],["MatMul",[a4]],["MatMulNBits",[a9,a7]],["MaxPool",[nT,nk]],["Mul",[sD]],["MultiHeadAttention",[aN,az]],["Neg",[sd]],["Not",[su]],["Pad",[nl]],["Pow",[sR]],["QuickGelu",[sP,st]],["Range",[nz]],["Reciprocal",[sc]],["ReduceMin",[rk]],["ReduceMean",[rw]],["ReduceMax",[rT]],["ReduceSum",[rC]],["ReduceProd",[r$]],["ReduceL1",[rx]],["ReduceL2",[rv]],["ReduceLogSum",[rP]],["ReduceLogSumExp",[rM]],["ReduceSumSquare",[rS]],["Relu",[sp]],["Resize",[n3,n4]],["RotaryEmbedding",[n5]],["ScatterND",[nN,nB]],["Sigmoid",[sh]],["Sin",[sg]],["Sinh",[s_]],["Slice",[oo,ol]],["SkipLayerNormalization",[oe]],["Split",[aU,aq]],["Sqrt",[sb]],["Softmax",[oc,op]],["Sub",[sj]],["Tan",[sy]],["Tanh",[sx]],["ThresholdedRelu",[sk,st]],["Tile",[o_]],["Transpose",[tq,tW]],["Where",[ow]]])}),lG=j(()=>{ed(),oH(),oZ(),ov=class{constructor(t){this.backend=t,this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,s,i,a){A(t.programInfo.name);let n=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let l=[];for(let t of r)l.push({binding:l.length,resource:{buffer:t.buffer}});for(let t of s)l.push({binding:l.length,resource:{buffer:t.buffer}});a&&l.push({binding:l.length,resource:a});let u=n.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:l,label:t.programInfo.name});if("capturing"===this.backend.sessionStatus){let r={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:u,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(r)}o.setPipeline(t.computePipeline),o.setBindGroup(0,u),o.dispatchWorkgroups(...i),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),F(t.programInfo.name)}dispose(){}build(t,r){A(t.name);let s=this.backend.device,i=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"},{feature:"subgroups-f16",extension:"subgroups_f16"}].forEach(t=>{s.features.has(t.feature)&&i.push(`enable ${t.extension};`)});let a=tB(r,this.backend.device.limits),n=t.getShaderSource(a),o=`${i.join(`
`)}
${a.additionalImplementations}
${n}`,l=s.createShaderModule({code:o,label:t.name});tt("verbose",()=>`[WebGPU] ${t.name} shader code: ${o}`);let u=s.createComputePipeline({compute:{module:l,entryPoint:"main"},layout:"auto",label:t.name});return F(t.name),{programInfo:t,computePipeline:u,uniformVariablesInfo:a.variablesInfo}}normalizeDispatchGroupSize(t){let r="number"==typeof t?t:t.x,s="number"==typeof t?1:t.y||1,i="number"==typeof t?1:t.z||1,a=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=a&&s<=a&&i<=a)return[r,s,i];let n=r*s*i,o=Math.ceil(Math.sqrt(n));if(!(o>a))return[o,o,1];if((o=Math.ceil(Math.cbrt(n)))>a)throw Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}}}),lU=j(()=>{ed(),oq(),oH(),oK(),oX(),lV(),lG(),oM=(t,r)=>{if(r.length!==t.length)throw Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${t.length}.`);let s=[];for(let i=0;i<t.length;++i){let a=t[i].dataType;switch(r[i]){case"none":s.push("");break;case"type":s.push(`${a}`);break;case"rank":{let r=t[i].dims.length;s.push(`${a};${r}`);break}case"dims":{let r=t[i].dims.join(",");s.push(`${a};${r}`);break}default:throw Error(`unsupported input dependency: ${r[i]}`)}}return s.join("|")},oT=(t,r,s)=>{let i=t.name;return t.shaderCache?.hint&&(i+="["+t.shaderCache.hint+"]"),i+=":"+s+`:${oM(r,t.shaderCache?.inputDependencies??Array(r.length).fill("dims"))}`},ok=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},o$=class{constructor(t){this.subgroupsSupported=t.features.has("subgroups"),this.subgroupsF16Supported=t.features.has("subgroups");let r=t.limits;this.subgroupsSupported&&r.minSubgroupSize&&r.maxSubgroupSize?this.subgroupSizeRange=[r.minSubgroupSize,r.maxSubgroupSize]:this.subgroupSizeRange=void 0}},oC=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let s=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:s},a=t=>r.features.has(t)&&s.push(t)&&!0;a("chromium-experimental-timestamp-query-inside-passes")||a("timestamp-query"),a("shader-f16"),a("subgroups")&&a("subgroups-f16"),this.device=await r.requestDevice(i),this.deviceInfo=new o$(this.device),this.adapterInfo=new ok(r.info||await r.requestAdapterInfo()),this.gpuDataManager=tc(this),this.programManager=new ov(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,e7(t.logLevel,!!t.debug),this.device.onuncapturederror=t=>{t.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${t.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){"u">typeof this.querySet&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};"at-passes"===this.queryType&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){let t;this.commandEncoder&&(A(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),t=this.device.createBuffer({size:16*this.pendingDispatchNumber,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,16*this.pendingDispatchNumber)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),s=this.pendingQueries.get(t);for(let t=0;t<r.length/2;t++){let i=s[t],a=i.kernelId,n=this.kernels.get(a),o=n.kernelType,l=n.kernelName,u=i.programName,d=i.inputTensorViews,c=i.outputTensorViews,p=r[2*t],h=r[2*t+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=p);let m=Number(p-this.queryTimeBase),f=Number(h-this.queryTimeBase);if(!Number.isSafeInteger(m)||!Number.isSafeInteger(f))throw RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map(t=>({dims:t.dims,dataType:eJ(t.dataType)})),outputsMetadata:c.map(t=>({dims:t.dims,dataType:eJ(t.dataType)})),kernelId:a,kernelType:o,kernelName:l,programName:u,startTime:m,endTime:f});else{let t="";d.forEach((r,s)=>{t+=`input[${s}]: [${r.dims}] | ${eJ(r.dataType)}, `});let r="";c.forEach((t,s)=>{r+=`output[${s}]: [${t.dims}] | ${eJ(t.dataType)}, `}),console.log(`[profiling] kernel "${a}|${o}|${l}|${u}" ${t}${r}execution time: ${f-m} ns`)}E("GPU",`${u}::${p}::${h}`)}t.unmap(),this.pendingQueries.delete(t)}),F())}run(t,r,s,i,a,n){let o;A(t.name);let l=[];for(let t=0;t<r.length;++t){let s=r[t].data;if(0===s)continue;let i=this.gpuDataManager.get(s);if(!i)throw Error(`no GPU data for input: ${s}`);l.push(i)}let{outputs:u,dispatchGroup:d,programUniforms:c}=t.getRunData(r),p=0===s.length?u.map((t,r)=>r):s;if(p.length!==u.length)throw Error(`Output size ${p.length} must be equal to ${u.length}.`);let h=[],m=[];for(let t=0;t<u.length;++t){if(!Number.isInteger(p[t])||p[t]<-3||p[t]>=n)throw Error(`Invalid output index: ${p[t]}`);if(-3===p[t])continue;let r=-1===p[t],s=-2===p[t],o=r||s?a(u[t].dataType,u[t].dims):i(p[t],u[t].dataType,u[t].dims);if(h.push(o),0===o.data)continue;let l=this.gpuDataManager.get(o.data);if(!l)throw Error(`no GPU data for output: ${o.data}`);if(r&&this.temporaryData.push(l),s){let t=this.kernelPersistentData.get(this.currentKernelId);t||(t=[],this.kernelPersistentData.set(this.currentKernelId,t)),t.push(l)}m.push(l)}if(l.length!==r.length||m.length!==h.length){if(0===m.length)return F(t.name),h;throw Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(c){let t=0,r=[];c.forEach(s=>{let i="number"==typeof s.data?[s.data]:s.data;if(0===i.length)return;let a=10===s.type?2:4,n,o;10===s.type?(o=i.length>4?16:i.length>2?8:i.length*a,n=i.length>4?16:a*i.length):(o=i.length<=2?i.length*a:16,n=16),t=Math.ceil(t/o)*o,r.push(t);let l=10===s.type?8:4;t+=i.length>4?Math.ceil(i.length/l)*n:i.length*a});let s=new ArrayBuffer(t=16*Math.ceil(t/16));c.forEach((t,i)=>{let a=r[i],n="number"==typeof t.data?[t.data]:t.data;if(6===t.type)new Int32Array(s,a,n.length).set(n);else if(12===t.type)new Uint32Array(s,a,n.length).set(n);else if(10===t.type)new Uint16Array(s,a,n.length).set(n);else if(1===t.type)new Float32Array(s,a,n.length).set(n);else throw Error(`Unsupported uniform type: ${eJ(t.type)}`)});let i=this.gpuDataManager.create(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(i.buffer,0,s,0,t),this.gpuDataManager.release(i.id),o={offset:0,size:t,buffer:i.buffer}}let f=this.programManager.normalizeDispatchGroupSize(d),g=oT(t,r,1===f[1]&&1===f[2]),_=this.programManager.getArtifact(g);if(_||(_=this.programManager.build(t,f),this.programManager.setArtifact(g,_),tt("info",()=>`[artifact] key: ${g}, programName: ${t.name}`)),c&&_.uniformVariablesInfo){if(c.length!==_.uniformVariablesInfo.length)throw Error(`Uniform variables count mismatch: expect ${_.uniformVariablesInfo.length}, got ${c.length} in program "${_.programInfo.name}".`);for(let t=0;t<c.length;t++){let r=c[t],s=r.type,i="number"==typeof r.data?1:r.data.length,[a,n]=_.uniformVariablesInfo[t];if(s!==a||i!==n)throw Error(`Uniform variable ${t} mismatch: expect type ${a} with size ${n}, got type ${s} with size ${i} in program "${_.programInfo.name}".`)}}if(tt("info",()=>`[ProgramManager] run "${t.name}" (key=${g}) with ${f[0]}x${f[1]}x${f[2]}`),"none"!==this.queryType||"capturing"===this.sessionStatus){let t={kernelId:this.currentKernelId,programName:_.programInfo.name,inputTensorViews:r,outputTensorViews:h};this.pendingKernels.push(t),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(t)}return this.programManager.run(_,l,m,f,o),F(t.name),h}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,s,i){let a=ox.get(t);if(!a)throw Error(`kernel not implemented: ${t}`);let n={kernelType:t,kernelName:i,kernelEntry:a[0],attributes:[a[1],s]};this.kernels.set(r,n)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,s){let i=this.kernels.get(t);if(!i)throw Error(`kernel not created: ${t}`);let a=i.kernelType,n=i.kernelName,o=i.kernelEntry,l=i.attributes;if(null!==this.currentKernelId)throw Error(`kernel "[${a}] ${n}" is not allowed to be called recursively`);this.currentKernelId=t,l[0]&&(l[1]=l[0](l[1]),l[0]=void 0),tt("info",()=>`[WebGPU] Start to run kernel "[${a}] ${n}"...`);let u=this.env.debug;this.temporaryData=[];try{return u&&this.device.pushErrorScope("validation"),o(r,l[1]),0}catch(t){return s.push(Promise.resolve(`[WebGPU] Kernel "[${a}] ${n}" failed. ${t}`)),1}finally{for(let t of(u&&s.push(this.device.popErrorScope().then(t=>t?`GPU validation error for kernel "[${a}] ${n}": ${t.message}`:null)),this.temporaryData))this.gpuDataManager.release(t.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,s,i){let a=this.sessionExternalDataMapping.get(t);a||(a=new Map,this.sessionExternalDataMapping.set(t,a));let n=a.get(r),o=this.gpuDataManager.registerExternalBuffer(s,i,n);return a.set(r,[o,s]),o}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,s){return async()=>{let i=await tu(this,t,r);return tr(i.buffer,s)}}writeTimestamp(t){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:16*this.maxDispatchNumber,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){tt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){tt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){tt("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),s=t.length;this.pendingKernels=[];for(let i=0;i<s;i++){let s=this.getComputePassEncoder(),a=t[i];this.writeTimestamp(2*this.pendingDispatchNumber),s.setPipeline(a.computePipeline),s.setBindGroup(0,a.bindGroup),s.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}}),lq=j(()=>{oH(),oS=1,oP=()=>oS++,oE=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),oI=(t,r)=>{let s=oE.get(t);if(!s)throw Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((t,r)=>t*r)*s/8):0},oA=class{constructor(t){this.sessionId=t.sessionId,this.mlContext=t.context,this.mlTensor=t.tensor,this.dataType=t.dataType,this.tensorShape=t.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return oI(this.dataType,this.tensorShape)}destroy(){tt("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(t){this.mlContext.writeTensor(this.mlTensor,t)}async read(t){return t?this.mlContext.readTensor(this.mlTensor,t):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(t,r,s){return this.mlContext===t&&this.dataType===r&&this.tensorShape.length===s.length&&this.tensorShape.every((t,r)=>t===s[r])}},oF=class{constructor(t,r){this.tensorManager=t,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(t,r,s,i){if(this.wrapper){if(this.wrapper.canReuseTensor(t,r,s))return this.wrapper.tensor;if(i){if(this.wrapper.byteLength!==oI(r,s))throw Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let a=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(r,s,a,!0,!0),i&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(t){if(this.wrapper){if(t.byteLength===this.wrapper.byteLength){this.wrapper.write(t);return}tt("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor()}this.activeUpload?this.activeUpload.set(t):this.activeUpload=new Uint8Array(t)}async download(t){if(this.activeUpload)return t?(t instanceof ArrayBuffer?new Uint8Array(t).set(this.activeUpload):new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(this.activeUpload),void 0):this.activeUpload.buffer;if(!this.wrapper)throw Error("Tensor has not been created.");return t?this.wrapper.read(t):this.wrapper.read()}},oz=class{constructor(t){this.backend=t,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let t=oP();return this.tensorTrackersById.set(t,new oF(this)),t}releaseTensorId(t){let r=this.tensorTrackersById.get(t);r&&(this.tensorTrackersById.delete(t),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(t,r,s,i){tt("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${t}, dataType: ${r}, shape: ${s}, copyOld: ${i}}`);let a=this.tensorTrackersById.get(t);if(!a)throw Error("Tensor not found.");return a.ensureTensor(this.backend.currentContext,r,s,i)}upload(t,r){let s=this.tensorTrackersById.get(t);if(!s)throw Error("Tensor not found.");s.upload(r)}async download(t,r){tt("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${t}, dstBuffer: ${r?.byteLength}}`);let s=this.tensorTrackersById.get(t);if(!s)throw Error("Tensor not found.");return s.download(r)}releaseTensorsForSession(t){for(let r of this.freeTensors)r.sessionId===t&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==t)}registerTensor(t,r,s,i){let a=oP(),n=new oA({sessionId:this.backend.currentSessionId,context:t,tensor:r,dataType:s,shape:i});return this.tensorTrackersById.set(a,new oF(this,n)),this.externalTensors.add(n),a}async getCachedTensor(t,r,s,i,a){let n=this.backend.currentSessionId,o=this.backend.currentContext;for(let[s,i]of this.freeTensors.entries())if(i.canReuseTensor(o,t,r)){tt("verbose",()=>`[WebNN] Reusing tensor {dataType: ${t}, shape: ${r}}`);let i=this.freeTensors.splice(s,1)[0];return i.sessionId=n,i}tt("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${t}, shape: ${r}}`);let l=await o.createTensor({dataType:t,shape:r,dimensions:r,usage:s,writable:i,readable:a});return new oA({sessionId:n,context:o,tensor:l,dataType:t,shape:r})}releaseTensor(t){this.externalTensors.has(t)&&this.externalTensors.delete(t),this.freeTensors.push(t)}},oO=(...t)=>new oz(...t)}),lW=j(()=>{oq(),oj(),oK(),lq(),oH(),oL=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),oB=(t,r)=>{if(t===r)return!0;if(void 0===t||void 0===r)return!1;let s=Object.keys(t).sort(),i=Object.keys(r).sort();return s.length===i.length&&s.every((s,a)=>s===i[a]&&t[s]===r[s])},oN=class{constructor(t){this.tensorManager=oO(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],e7(t.logLevel,!!t.debug)}get currentSessionId(){if(void 0===this.activeSessionId)throw Error("No active session");return this.activeSessionId}onRunStart(t){this.activeSessionId=t}async createMLContext(t){if(t instanceof GPUDevice){let r=this.mlContextCache.findIndex(r=>r.gpuDevice===t);if(-1!==r)return this.mlContextCache[r].mlContext;{let r=await navigator.ml.createContext(t);return this.mlContextCache.push({gpuDevice:t,mlContext:r}),r}}if(void 0===t){let t=this.mlContextCache.findIndex(t=>void 0===t.options&&void 0===t.gpuDevice);if(-1!==t)return this.mlContextCache[t].mlContext;{let t=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:t}),t}}let r=this.mlContextCache.findIndex(r=>oB(r.options,t));if(-1!==r)return this.mlContextCache[r].mlContext;{let r=await navigator.ml.createContext(t);return this.mlContextCache.push({options:t,mlContext:r}),r}}get currentContext(){let t=this.getMLContext(this.currentSessionId);if(!t)throw Error(`No MLContext found for session ${this.currentSessionId}`);return t}registerMLContext(t,r){this.mlContextBySessionId.set(t,r);let s=this.sessionIdsByMLContext.get(r);s||(s=new Set,this.sessionIdsByMLContext.set(r,s)),s.add(t)}onReleaseSession(t){let r=this.mlContextBySessionId.get(t);if(!r)return;this.tensorManager.releaseTensorsForSession(t),this.mlContextBySessionId.delete(t);let s=this.sessionIdsByMLContext.get(r);if(s.delete(t),0===s.size){this.sessionIdsByMLContext.delete(r);let t=this.mlContextCache.findIndex(t=>t.mlContext===r);-1!==t&&this.mlContextCache.splice(t,1)}}getMLContext(t){return this.mlContextBySessionId.get(t)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(t){tt("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t)}async ensureTensor(t,r,s,i){let a=oL.get(r);if(!a)throw Error(`Unsupported ONNX data type: ${r}`);return this.tensorManager.ensureTensor(t,a,s,i)}uploadTensor(t,r){if(!eR().shouldTransferToMLTensor)throw Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");tt("verbose",()=>`[WebNN] uploadTensor {tensorId: ${t}, data: ${r.byteLength}}`),this.tensorManager.upload(t,r)}async downloadTensor(t,r){return this.tensorManager.download(t,r)}createMLTensorDownloader(t,r){return async()=>{let s=await this.tensorManager.download(t);return tr(s,r)}}registerMLTensor(t,r,s){let i=oL.get(r);if(!i)throw Error(`Unsupported ONNX data type: ${r}`);let a=this.tensorManager.registerTensor(this.currentContext,t,i,s);return tt("verbose",()=>`[WebNN] registerMLTensor {tensor: ${t}, dataType: ${i}, dimensions: ${s}} -> {tensorId: ${a}}`),a}registerMLConstant(t,r,s,i,a,n){if(!n)throw Error("External mounted files are not available.");let o=t;t.startsWith("./")&&(o=t.substring(2));let l=n.get(o);if(!l)throw Error(`File with name ${o} not found in preloaded files.`);if(r+s>l.byteLength)throw Error("Out of bounds: data offset and length exceed the external file data size.");let u=l.slice(r,r+s).buffer,d;switch(a.dataType){case"float32":d=new Float32Array(u);break;case"float16":d=new Uint16Array(u);break;case"int32":d=new Int32Array(u);break;case"uint32":d=new Uint32Array(u);break;case"int64":d=new BigInt64Array(u);break;case"uint64":d=new BigUint64Array(u);break;case"int8":d=new Int8Array(u);break;case"int4":case"uint4":case"uint8":d=new Uint8Array(u);break;default:throw Error(`Unsupported data type: ${a.dataType} in creating WebNN Constant from external data.`)}return tt("verbose",()=>`[WebNN] registerMLConstant {dataType: ${a.dataType}, shape: ${a.shape}}}`),i.constant(a,d)}flush(){}}}),lH={};V(lH,{init:()=>lX});var lK,lQ,lX,lJ,lY,lZ,l0,l1,l2,l3,l4,l6,l8,l5,l9,l7,ue,ut,ur,us,ui,ua,un,uo,ul,uu,ud,uc,up,uh,um,uf,ug,u_,ub,uy,uw=j(()=>{oq(),lU(),oH(),oY(),lW(),lK=class t{constructor(t,r,s,i){this.module=t,this.dataType=r,this.data=s,this.dims=i}getFloat32Array(){if(1!==this.dataType)throw Error("Invalid data type");let t=tg.size(this.dims);return 0===t?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(7!==this.dataType)throw Error("Invalid data type");let t=tg.size(this.dims);return 0===t?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(6!==this.dataType)throw Error("Invalid data type");let t=tg.size(this.dims);return 0===t?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(10!==this.dataType&&4!==this.dataType)throw Error("Invalid data type");let t=tg.size(this.dims);return 0===t?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(r){if(tg.size(r)!==tg.size(this.dims))throw Error("Invalid new shape");return new t(this.module,this.dataType,this.data,r)}},lQ=class{constructor(t,r,s){this.module=t,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo,this.deviceInfo=r.deviceInfo;let i=t.PTR_SIZE,a=s/t.PTR_SIZE,n=4===i?"i32":"i64";this.opKernelContext=Number(t.getValue(i*a++,n));let o=Number(t.getValue(i*a++,n));this.outputCount=Number(t.getValue(i*a++,n)),this.customDataOffset=Number(t.getValue(i*a++,"*")),this.customDataSize=Number(t.getValue(i*a++,n));let l=[];for(let r=0;r<o;r++){let r=Number(t.getValue(i*a++,n)),s=Number(t.getValue(i*a++,"*")),o=Number(t.getValue(i*a++,n)),u=[];for(let r=0;r<o;r++)u.push(Number(t.getValue(i*a++,n)));l.push(new lK(t,r,s,u))}this.inputs=l}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let s=r?.inputs?.map(t=>"number"==typeof t?this.inputs[t]:t)??this.inputs,i=r?.outputs??[];return this.backend.run(t,s,i,(t,r,s)=>new lK(this.module,r,this.output(t,s),s),(t,r)=>{let s=eY(t,r);if(!s)throw Error(`Unsupported data type: ${t}`);let i=s>0?this.backend.gpuDataManager.create(s).id:0;return new lK(this.module,t,i,r)},this.outputCount)}output(t,r){let s=this.module.stackSave();try{let s=this.module.PTR_SIZE,i=4===s?"i32":"i64",a=this.module.stackAlloc((1+r.length)*s);this.module.setValue(a,r.length,i);for(let t=0;t<r.length;t++)this.module.setValue(a+s*(t+1),r[t],i);return this.module._JsepOutput(this.opKernelContext,t,a)}catch(s){throw Error(`Failed to generate kernel's output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(s)}}},lX=async(t,r,s,i)=>{let a=r.jsepInit;if(!a)throw Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if("webgpu"===t){let t=new oC;await t.initialize(s,i),a("webgpu",[t,r=>t.alloc(Number(r)),r=>t.free(r),(s,i,a,n=!1)=>{if(n)tt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(s)}, dst=${Number(i)}, size=${Number(a)}`),t.memcpy(Number(s),Number(i));else{tt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(s)}, gpuDataId=${Number(i)}, size=${Number(a)}`);let n=r.HEAPU8.subarray(Number(s>>>0),Number(s>>>0)+Number(a));t.upload(Number(i),n)}},async(s,i,a)=>{tt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${s}, dataOffset=${i}, size=${a}`),await t.download(Number(s),()=>r.HEAPU8.subarray(Number(i)>>>0,Number(i+a)>>>0))},(s,i,a)=>t.createKernel(s,Number(i),a,r.UTF8ToString(r._JsepGetNodeName(Number(i)))),r=>t.releaseKernel(r),(s,i,a,n)=>{tt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${a}, kernel=${s}, contextDataOffset=${i}`);let o=new lQ(r,t,Number(i));return t.computeKernel(Number(s),o,n)},()=>t.captureBegin(),()=>t.captureEnd(),()=>t.replay()])}else{let t=new oN(s);a("webnn",[t,()=>t.reserveTensorId(),r=>t.releaseTensorId(r),async(r,s,i,a)=>t.ensureTensor(r,s,i,a),(r,s)=>{t.uploadTensor(r,s)},async(r,s)=>t.downloadTensor(r,s)])}}}),ux=j(()=>{oG(),oU(),oq(),oj(),oV(),oW(),lJ=(t,r)=>{0!==eR()._OrtInit(t,r)&&eG("Can't initialize onnxruntime.")},lY=async t=>{lJ(t.wasm.numThreads,e0(t.logLevel))},lZ=async(t,r)=>{{let s=(uw(),U(lH)).init;if("webgpu"===r){if(typeof navigator>"u"||!navigator.gpu)throw Error("WebGPU is not supported in current environment");let r=t.webgpu.adapter;if(r){if("object"!=typeof r.limits||"object"!=typeof r.features||"function"!=typeof r.requestDevice)throw Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let s=t.webgpu.powerPreference;if(void 0!==s&&"low-power"!==s&&"high-performance"!==s)throw Error(`Invalid powerPreference setting: "${s}"`);let i=t.webgpu.forceFallbackAdapter;if(void 0!==i&&"boolean"!=typeof i)throw Error(`Invalid forceFallbackAdapter setting: "${i}"`);if(!(r=await navigator.gpu.requestAdapter({powerPreference:s,forceFallbackAdapter:i})))throw Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await s("webgpu",eR(),t,r)}if("webnn"===r){if(typeof navigator>"u"||!navigator.ml)throw Error("WebNN is not supported in current environment");await s("webnn",eR(),t)}}},l0=new Map,l1=t=>{let r=eR(),s=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);0!==r._OrtGetInputOutputCount(t,i,i+s)&&eG("Can't get session input/output count.");let a=4===s?"i32":"i64";return[Number(r.getValue(i,a)),Number(r.getValue(i+s,a))]}finally{r.stackRestore(s)}},l2=t=>{let r=eR(),s=r._malloc(t.byteLength);if(0===s)throw Error(`Can't create a session. failed to allocate a buffer of size ${t.byteLength}.`);return r.HEAPU8.set(t,s),[s,t.byteLength]},l3=async(t,r)=>{let s,i,a=eR();Array.isArray(t)?[s,i]=t:t.buffer===a.HEAPU8.buffer?[s,i]=[t.byteOffset,t.byteLength]:[s,i]=l2(t);let n=0,o=0,l=0,u=[],d=[],c=[];try{if([o,u]=eQ(r),r?.externalData&&a.mountExternalData){let t=[];for(let s of r.externalData){let r="string"==typeof s?s:s.path;t.push(e4("string"==typeof s?s:s.data).then(t=>{a.mountExternalData(r,t)}))}await Promise.all(t)}for(let t of r?.executionProviders??[])if(("string"==typeof t?t:t.name)==="webnn"){if(a.shouldTransferToMLTensor=!1,"string"!=typeof t){let r=t?.context,s=t?.gpuDevice,i=t?.deviceType,n=t?.powerPreference;r?a.currentContext=r:s?a.currentContext=await a.jsepCreateMLContext(s):a.currentContext=await a.jsepCreateMLContext({deviceType:i,powerPreference:n})}else a.currentContext=await a.jsepCreateMLContext();break}n=await a._OrtCreateSession(s,i,o),0===n&&eG("Can't create a session."),a.jsepOnCreateSession?.(),a.currentContext&&(a.jsepRegisterMLContext(n,a.currentContext),a.currentContext=void 0,a.shouldTransferToMLTensor=!0);let[t,p]=l1(n),h=!!r?.enableGraphCapture,m=[],f=[],g=[];for(let r=0;r<t;r++){let t=a._OrtGetInputName(n,r);0===t&&eG("Can't get an input name."),d.push(t),m.push(a.UTF8ToString(t))}for(let t=0;t<p;t++){let s=a._OrtGetOutputName(n,t);0===s&&eG("Can't get an output name."),c.push(s);let i=a.UTF8ToString(s);f.push(i);{if(h&&r?.preferredOutputLocation===void 0){g.push("gpu-buffer");continue}let t="string"==typeof r?.preferredOutputLocation?r.preferredOutputLocation:r?.preferredOutputLocation?.[i]??"cpu";if("cpu"!==t&&"cpu-pinned"!==t&&"gpu-buffer"!==t&&"ml-tensor"!==t)throw Error(`Not supported preferred output location: ${t}.`);if(h&&"gpu-buffer"!==t)throw Error(`Not supported preferred output location: ${t}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);g.push(t)}}let _=null;return g.some(t=>"gpu-buffer"===t||"ml-tensor"===t)&&(l=a._OrtCreateBinding(n),0===l&&eG("Can't create IO binding."),_={handle:l,outputPreferredLocations:g,outputPreferredLocationsEncoded:g.map(t=>e3(t))}),l0.set(n,[n,d,c,_,h,!1]),[n,m,f]}catch(t){throw d.forEach(t=>a._OrtFree(t)),c.forEach(t=>a._OrtFree(t)),0!==l&&0!==a._OrtReleaseBinding(l)&&eG("Can't release IO binding."),0!==n&&0!==a._OrtReleaseSession(n)&&eG("Can't release session."),t}finally{a._free(s),0!==o&&0!==a._OrtReleaseSessionOptions(o)&&eG("Can't release session options."),u.forEach(t=>a._free(t)),a.unmountExternalData?.()}},l4=t=>{let r=eR(),s=l0.get(t);if(!s)throw Error(`cannot release session. invalid session id: ${t}`);let[i,a,n,o,l]=s;o&&(l&&0!==r._OrtClearBoundOutputs(o.handle)&&eG("Can't clear bound outputs."),0!==r._OrtReleaseBinding(o.handle)&&eG("Can't release IO binding.")),r.jsepOnReleaseSession?.(t),a.forEach(t=>r._OrtFree(t)),n.forEach(t=>r._OrtFree(t)),0!==r._OrtReleaseSession(i)&&eG("Can't release session."),l0.delete(t)},l6=(t,r,s,i,a,n=!1)=>{if(!t){r.push(0);return}let o=eR(),l=o.PTR_SIZE,u=t[0],d=t[1],c=t[3],p,h;if("string"===u&&("gpu-buffer"===c||"ml-tensor"===c))throw Error("String tensor is not supported on GPU.");if(n&&"gpu-buffer"!==c)throw Error(`External buffer must be provided for input/output index ${a} when enableGraphCapture is true.`);if("gpu-buffer"===c){let r=t[2].gpuBuffer;h=eY(eX(u),d);let s=o.jsepRegisterBuffer;if(!s)throw Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');p=s(i,a,r,h)}else if("ml-tensor"===c){let r=t[2].mlTensor;h=eY(eX(u),d);let s=o.jsepRegisterMLTensor;if(!s)throw Error('Tensor location "ml-tensor" is not supported without using WebNN.');p=s(r,eX(u),d)}else{let r=t[2];if(Array.isArray(r)){h=l*r.length,p=o._malloc(h),s.push(p);for(let t=0;t<r.length;t++){if("string"!=typeof r[t])throw TypeError(`tensor data at index ${t} is not a string`);o.setValue(p+t*l,ej(r[t],s),"*")}}else h=r.byteLength,p=o._malloc(h),s.push(p),o.HEAPU8.set(new Uint8Array(r.buffer,r.byteOffset,h),p)}let m=o.stackSave(),f=o.stackAlloc(4*d.length);try{d.forEach((t,r)=>o.setValue(f+r*l,t,4===l?"i32":"i64"));let t=o._OrtCreateTensor(eX(u),p,h,f,d.length,e3(c));0===t&&eG(`Can't create tensor for input/output. session=${i}, index=${a}.`),r.push(t)}finally{o.stackRestore(m)}},l8=async(t,r,s,i,a,n)=>{let o=eR(),l=o.PTR_SIZE,u=l0.get(t);if(!u)throw Error(`cannot run inference. invalid session id: ${t}`);let d=u[0],c=u[1],p=u[2],h=u[3],m=u[4],f=u[5],g=r.length,_=i.length,b=0,y=[],w=[],x=[],v=[],M=o.stackSave(),T=o.stackAlloc(g*l),k=o.stackAlloc(g*l),$=o.stackAlloc(_*l),C=o.stackAlloc(_*l);try{let u;o.jsepOnRunStart?.(d),[b,y]=eU(n);for(let i=0;i<g;i++)l6(s[i],w,v,t,r[i],m);for(let r=0;r<_;r++)l6(a[r],x,v,t,g+i[r],m);for(let t=0;t<g;t++)o.setValue(T+t*l,w[t],"*"),o.setValue(k+t*l,c[r[t]],"*");for(let t=0;t<_;t++)o.setValue($+t*l,x[t],"*"),o.setValue(C+t*l,p[i[t]],"*");if(h&&!f){let{handle:s,outputPreferredLocations:n,outputPreferredLocationsEncoded:l}=h;if(c.length!==g)throw Error(`input count from feeds (${g}) is expected to be always equal to model's input count (${c.length}).`);for(let i=0;i<g;i++){let a=r[i];await o._OrtBindInput(s,c[a],w[i])!==0&&eG(`Can't bind input[${i}] for session=${t}.`)}for(let r=0;r<_;r++){let u=i[r];a[r]?.[3]?0!==o._OrtBindOutput(s,p[u],x[r],0)&&eG(`Can't bind pre-allocated output[${r}] for session=${t}.`):0!==o._OrtBindOutput(s,p[u],0,l[u])&&eG(`Can't bind output[${r}] to ${n[r]} for session=${t}.`)}l0.set(t,[d,c,p,h,m,!0])}u=h?await o._OrtRunWithBinding(d,h.handle,_,$,b):await o._OrtRun(d,k,T,g,C,_,$,b),0!==u&&eG("failed to call OrtRun().");let M=[];for(let t=0;t<_;t++){let r=Number(o.getValue($+t*l,"*"));if(r===x[t]){M.push(a[t]);continue}let s=o.stackSave(),n=o.stackAlloc(4*l),u=!1,d,c=0;try{0!==o._OrtGetTensorData(r,n,n+l,n+2*l,n+3*l)&&eG(`Can't access output tensor data on index ${t}.`);let s=4===l?"i32":"i64",a=Number(o.getValue(n,s));c=o.getValue(n+l,"*");let p=o.getValue(n+2*l,"*"),m=Number(o.getValue(n+3*l,s)),f=[];for(let t=0;t<m;t++)f.push(Number(o.getValue(p+t*l,s)));0!==o._OrtFree(p)&&eG("Can't free memory for tensor dims.");let g=f.reduce((t,r)=>t*r,1);d=eJ(a);let _=h?.outputPreferredLocations[i[t]];if("string"===d){if("gpu-buffer"===_||"ml-tensor"===_)throw Error("String tensor is not supported on GPU.");let t=[];for(let r=0;r<g;r++){let s=o.getValue(c+r*l,"*"),i=o.getValue(c+(r+1)*l,"*"),a=r===g-1?void 0:i-s;t.push(o.UTF8ToString(s,a))}M.push([d,f,t,"cpu"])}else if("gpu-buffer"===_&&g>0){let t=o.jsepGetBuffer;if(!t)throw Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let s=t(c),i=eY(a,g);if(void 0===i||!e1(d))throw Error(`Unsupported data type: ${d}`);u=!0,M.push([d,f,{gpuBuffer:s,download:o.jsepCreateDownloader(s,i,d),dispose:()=>{0!==o._OrtReleaseTensor(r)&&eG("Can't release tensor.")}},"gpu-buffer"])}else if("ml-tensor"===_&&g>0){let t=o.jsepEnsureTensor;if(!t)throw Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(void 0===eY(a,g)||!e2(d))throw Error(`Unsupported data type: ${d}`);let s=await t(c,a,f,!1);u=!0,M.push([d,f,{mlTensor:s,download:o.jsepCreateMLTensorDownloader(c,d),dispose:()=>{o.jsepReleaseTensorId(c),o._OrtReleaseTensor(r)}},"ml-tensor"])}else{let t=new(eZ(d))(g);new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(o.HEAPU8.subarray(c,c+t.byteLength)),M.push([d,f,t,"cpu"])}}finally{o.stackRestore(s),"string"===d&&c&&o._free(c),u||o._OrtReleaseTensor(r)}}return h&&!m&&(0!==o._OrtClearBoundOutputs(h.handle)&&eG("Can't clear bound outputs."),l0.set(t,[d,c,p,h,m,!1])),M}finally{o.stackRestore(M),w.forEach(t=>o._OrtReleaseTensor(t)),x.forEach(t=>o._OrtReleaseTensor(t)),v.forEach(t=>o._free(t)),0!==b&&o._OrtReleaseRunOptions(b),y.forEach(t=>o._free(t))}},l5=t=>{let r=eR(),s=l0.get(t);if(!s)throw Error("invalid session id");let i=s[0],a=r._OrtEndProfiling(i);0===a&&eG("Can't get an profile file name."),r._OrtFree(a)},l9=t=>{let r=[];for(let s of t){let t=s[2];!Array.isArray(t)&&"buffer"in t&&r.push(t.buffer)}return r}}),uv=j(()=>{ed(),ux(),oj(),oR(),l7=()=>!!h.wasm.proxy&&"u">typeof document,ut=!1,ur=!1,us=!1,un=new Map,uo=(t,r)=>{let s=un.get(t);s?s.push(r):un.set(t,[r])},ul=()=>{if(ut||!ur||us||!ue)throw Error("worker not ready")},uu=t=>{switch(t.data.type){case"init-wasm":ut=!1,t.data.err?(us=!0,ua[1](t.data.err)):(ur=!0,ua[0]()),ui&&(URL.revokeObjectURL(ui),ui=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=un.get(t.data.type);t.data.err?r.shift()[1](t.data.err):r.shift()[0](t.data.out)}}},ud=async()=>{if(!ur){if(ut)throw Error("multiple calls to 'initWasm()' detected.");if(us)throw Error("previous call to 'initWasm()' failed.");if(ut=!0,l7())return new Promise((t,r)=>{ue?.terminate(),eE().then(([s,a])=>{try{(ue=a).onerror=t=>r(t),ue.onmessage=uu,ua=[t,r];let n={type:"init-wasm",in:h};!n.in.wasm.wasmPaths&&(s||"file:///D:/NextJs%20Apps%20(To%20BUILD)/Remove%20Background%20for%20images/remover/node_modules/@huggingface/transformers/dist/transformers.js".startsWith("file:"))&&(n.in.wasm.wasmPaths={wasm:new URL(i("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),i.b).href}),ue.postMessage(n),ui=s}catch(t){r(t)}},r)});try{await eD(h.wasm),await lY(h),ur=!0}catch(t){throw us=!0,t}finally{ut=!1}}},uc=async t=>{if(l7())return ul(),new Promise((r,s)=>{uo("init-ep",[r,s]);let i={type:"init-ep",in:{epName:t,env:h}};ue.postMessage(i)});await lZ(h,t)},up=async t=>l7()?(ul(),new Promise((r,s)=>{uo("copy-from",[r,s]),ue.postMessage({type:"copy-from",in:{buffer:t}},[t.buffer])})):l2(t),uh=async(t,r)=>{if(!l7())return l3(t,r);if(r?.preferredOutputLocation)throw Error('session option "preferredOutputLocation" is not supported for proxy.');return ul(),new Promise((s,i)=>{uo("create",[s,i]);let a={type:"create",in:{model:t,options:{...r}}},n=[];t instanceof Uint8Array&&n.push(t.buffer),ue.postMessage(a,n)})},um=async t=>{if(l7())return ul(),new Promise((r,s)=>{uo("release",[r,s]),ue.postMessage({type:"release",in:t})});l4(t)},uf=async(t,r,s,i,a,n)=>{if(!l7())return l8(t,r,s,i,a,n);if(s.some(t=>"cpu"!==t[3]))throw Error("input tensor on GPU is not supported for proxy.");if(a.some(t=>t))throw Error("pre-allocated output tensor is not supported for proxy.");return ul(),new Promise((a,o)=>{uo("run",[a,o]),ue.postMessage({type:"run",in:{sessionId:t,inputIndices:r,inputs:s,outputIndices:i,options:n}},l9(s))})},ug=async t=>{if(l7())return ul(),new Promise((r,s)=>{uo("end-profiling",[r,s]),ue.postMessage({type:"end-profiling",in:t})});l5(t)}}),uM=j(()=>{ed(),uv(),oq(),ec(),oW(),u_=(t,r)=>{switch(t.location){case"cpu":return[t.type,t.dims,t.data,"cpu"];case"gpu-buffer":return[t.type,t.dims,{gpuBuffer:t.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[t.type,t.dims,{mlTensor:t.mlTensor},"ml-tensor"];default:throw Error(`invalid data location: ${t.location} for ${r()}`)}},ub=t=>{switch(t[3]){case"cpu":return new P(t[0],t[2],t[1]);case"gpu-buffer":{let r=t[0];if(!e1(r))throw Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:s,download:i,dispose:a}=t[2];return P.fromGpuBuffer(s,{dataType:r,dims:t[1],download:i,dispose:a})}case"ml-tensor":{let r=t[0];if(!e2(r))throw Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:s,download:i,dispose:a}=t[2];return P.fromMLTensor(s,{dataType:r,dims:t[1],download:i,dispose:a})}default:throw Error(`invalid data location: ${t[3]}`)}},uy=class{async fetchModelAndCopyToWasmMemory(t){return up(await e4(t))}async loadModel(t,r){let s;A(),s="string"==typeof t?await this.fetchModelAndCopyToWasmMemory(t):t,[this.sessionId,this.inputNames,this.outputNames]=await uh(s,r),F()}async dispose(){return um(this.sessionId)}async run(t,r,s){A();let i=[],a=[];Object.entries(t).forEach(t=>{let r=t[0],s=t[1],n=this.inputNames.indexOf(r);if(-1===n)throw Error(`invalid input '${r}'`);i.push(s),a.push(n)});let n=[],o=[];Object.entries(r).forEach(t=>{let r=t[0],s=t[1],i=this.outputNames.indexOf(r);if(-1===i)throw Error(`invalid output '${r}'`);n.push(s),o.push(i)});let l=i.map((t,r)=>u_(t,()=>`input "${this.inputNames[a[r]]}"`)),u=n.map((t,r)=>t?u_(t,()=>`output "${this.outputNames[o[r]]}"`):null),d=await uf(this.sessionId,a,l,o,u,s),c={};for(let t=0;t<d.length;t++)c[this.outputNames[o[t]]]=n[t]??ub(d[t]);return F(),c}startProfiling(){}endProfiling(){ug(this.sessionId)}}}),uT={};V(uT,{OnnxruntimeWebAssemblyBackend:()=>u$,initializeFlags:()=>uk,wasmBackend:()=>uC});var uk,u$,uC,uS=j(()=>{ed(),uv(),uM(),uk=()=>{if(("number"!=typeof h.wasm.initTimeout||h.wasm.initTimeout<0)&&(h.wasm.initTimeout=0),!1===h.wasm.simd&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),"boolean"!=typeof h.wasm.proxy&&(h.wasm.proxy=!1),"boolean"!=typeof h.wasm.trace&&(h.wasm.trace=!1),"number"!=typeof h.wasm.numThreads||!Number.isInteger(h.wasm.numThreads)||h.wasm.numThreads<=0){if("u">typeof self&&!self.crossOriginIsolated)h.wasm.numThreads=1;else{let t=typeof navigator>"u"?R("node:os").cpus().length:navigator.hardwareConcurrency;h.wasm.numThreads=Math.min(4,Math.ceil((t||1)/2))}}},uC=new(u$=class{async init(t){uk(),await ud(),await uc(t)}async createInferenceSessionHandler(t,r){let s=new uy;return await s.loadModel(t,r),Promise.resolve(s)}})});ed(),ed(),ed();var uP=eu;{let t=(uS(),U(uT)).wasmBackend;o("webgpu",t,5),o("webnn",t,5),o("cpu",t,10),o("wasm",t,10)}Object.defineProperty(h.versions,"web",{value:"1.21.0-dev.20250206-d981b153d3",enumerable:!0})},"./src/backends/onnx.js":(t,r,s)=>{let i,a;s.r(r),s.d(r,{Tensor:()=>d.Tensor,createInferenceSession:()=>_,deviceToExecutionProviders:()=>f,isONNXProxy:()=>w,isONNXTensor:()=>b});var n,o=s("./src/env.js"),l=s("?2ce3"),u=s("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96"),d=s("./node_modules/onnxruntime-common/dist/esm/index.js");let c=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),p=[],h=Symbol.for("onnxruntime");if(h in globalThis)a=globalThis[h];else if(o.apis.IS_NODE_ENV){switch(a=l??(n||(n=s.t(l,2))),S.platform){case"win32":p.push("dml");break;case"linux":"x64"===S.arch&&p.push("cuda")}p.push("cpu"),i=["cpu"]}else a=u,o.apis.IS_WEBNN_AVAILABLE&&p.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),o.apis.IS_WEBGPU_AVAILABLE&&p.push("webgpu"),p.push("wasm"),i=["wasm"];let m=a.InferenceSession;function f(t=null){if(!t)return i;switch(t){case"auto":return p;case"gpu":return p.filter(t=>["webgpu","cuda","dml","webnn-gpu"].includes(t))}if(p.includes(t))return[c[t]??t];throw Error(`Unsupported device: "${t}". Should be one of: ${p.join(", ")}.`)}let g=null;async function _(t,r,s){g&&await g;let i=m.create(t,r);g??=i;let a=await i;return a.config=s,a}function b(t){return t instanceof a.Tensor}let y=a?.env;function w(){return y?.wasm?.proxy}y?.wasm&&(y.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${o.env.version}/dist/`,y.wasm.proxy=!1,"undefined"!=typeof crossOriginIsolated&&crossOriginIsolated||(y.wasm.numThreads=1)),y?.webgpu&&(y.webgpu.powerPreference="high-performance"),o.env.backends.onnx=y},"./src/base/feature_extraction_utils.js":(t,r,s)=>{s.r(r),s.d(r,{FeatureExtractor:()=>o,validate_audio_inputs:()=>l});var i=s("./src/utils/constants.js"),a=s("./src/utils/generic.js"),n=s("./src/utils/hub.js");class o extends a.Callable{constructor(t){super(),this.config=t}static async from_pretrained(t,r){return new this(await (0,n.getModelJSON)(t,i.FEATURE_EXTRACTOR_NAME,!0,r))}}function l(t,r){if(!(t instanceof Float32Array||t instanceof Float64Array))throw Error(`${r} expects input to be a Float32Array or a Float64Array, but got ${t?.constructor?.name??typeof t} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(t,r,s)=>{s.r(r),s.d(r,{ImageProcessor:()=>_,center_to_corners_format:()=>p,post_process_instance_segmentation:()=>g,post_process_object_detection:()=>h,post_process_panoptic_segmentation:()=>f,post_process_semantic_segmentation:()=>m});var i=s("./src/utils/generic.js"),a=s("./src/utils/tensor.js"),n=s("./src/utils/maths.js");s("./src/utils/image.js");var o=s("./src/utils/core.js"),l=s("./src/utils/hub.js"),u=s("./src/utils/constants.js");function d(t,r,s=0,i=null){let a=t/r,o=(0,n.bankers_round)(a)*r;return null!==i&&o>i&&(o=Math.floor(a)*r),o<s&&(o=Math.ceil(a)*r),o}function c([t,r],s){return[Math.max(Math.floor(t/s),1)*s,Math.max(Math.floor(r/s),1)*s]}function p([t,r,s,i]){return[t-s/2,r-i/2,t+s/2,r+i/2]}function h(t,r=.5,s=null,i=!1){let a=t.logits,o=t.pred_boxes,[l,u,d]=a.dims;if(null!==s&&s.length!==l)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let c=[];for(let t=0;t<l;++t){let l=null!==s?s[t]:null,h={boxes:[],classes:[],scores:[]},m=a[t],f=o[t];for(let t=0;t<u;++t){let s,a=m[t],o=[];if(i){s=a.sigmoid().data;for(let t=0;t<s.length;++t)s[t]>r&&o.push(t)}else{let t=(0,n.max)(a.data)[1];if(t===d-1||(s=(0,n.softmax)(a.data))[t]<r)continue;o.push(t)}for(let r of o){let i=f[t].data;i=p(i),null!==l&&(i=i.map((t,r)=>t*l[(r+1)%2])),h.boxes.push(i),h.classes.push(r),h.scores.push(s[r])}}c.push(h)}return c}function m(t,r=null){let s=t.logits,i=s.dims[0];if(null!==r&&r.length!==i)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let n=[];for(let t=0;t<i;++t){let i=null!==r?r[t]:null,o=s[t];null!==i&&(o=(0,a.interpolate)(o,i,"bilinear",!1));let[l,u]=i??o.dims.slice(-2),d=new a.Tensor("int32",new Int32Array(l*u),[l,u]),c=o[0].data,p=d.data;for(let t=1;t<o.dims[0];++t){let r=o[t].data;for(let s=0;s<r.length;++s)r[s]>c[s]&&(c[s]=r[s],p[s]=t)}let h=Array(o.dims[0]);for(let t=0;t<p.length;++t){let r=p[t];h[r]=r}let m=h.filter(t=>void 0!==t);n.push({segmentation:d,labels:m})}return n}function f(t,r=.5,s=.5,i=.8,o=null,l=null){null===o&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),o=new Set);let u=t.class_queries_logits??t.logits,d=(t.masks_queries_logits??t.pred_masks).sigmoid(),[c,p,h]=u.dims;if(h-=1,null!==l&&l.length!==c)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let m=[];for(let t=0;t<c;++t){let c=null!==l?l[t]:null,p=u[t],f=d[t],[g,_,b]=function(t,r,s,i){let a=[],o=[],l=[];for(let u=0;u<t.dims[0];++u){let d=t[u],c=r[u],p=(0,n.max)(d.data)[1];if(p===i)continue;let h=(0,n.softmax)(d.data)[p];h>s&&(a.push(c),o.push(h),l.push(p))}return[a,o,l]}(p,f,r,h);if(0===b.length){let[t,r]=c??f.dims.slice(-2),s=new a.Tensor("int32",new Int32Array(t*r).fill(-1),[t,r]);m.push({segmentation:s,segments_info:[]});continue}let[y,w]=function(t,r,s,i,n,o=null,l=null){let[u,d]=l??t[0].dims,c=new a.Tensor("int32",new Int32Array(u*d),[u,d]),p=[];if(null!==l)for(let r=0;r<t.length;++r)t[r]=(0,a.interpolate)(t[r],l,"bilinear",!1);let h=new Int32Array(t[0].data.length),m=new Float32Array(t[0].data.length);for(let s=0;s<t.length;++s){let i=r[s],a=t[s].data;for(let t=0;t<a.length;++t)a[t]*=i,a[t]>m[t]&&(h[t]=s,m[t]=a[t])}let f=0,g=c.data;for(let a=0;a<s.length;++a){let o=s[a],[l,u]=function(t,r,s,i=.5,a=.8){let n=[],o=0,l=0,u=r[s].data;for(let r=0;r<t.length;++r)t[r]===s&&(n.push(r),++o),u[r]>=i&&++l;let d=o>0&&l>0;return d&&(d=o/l>a),[d,n]}(h,t,a,i,n);if(l){for(let t of(++f,u))g[t]=f;p.push({id:f,label_id:o,score:r[a]})}}return[c,p]}(g,_,b,s,i,o,c);m.push({segmentation:y,segments_info:w})}return m}function g(t,r=.5,s=null){throw Error("`post_process_instance_segmentation` is not yet implemented.")}class _ extends i.Callable{constructor(t){super(),this.image_mean=t.image_mean??t.mean,this.image_std=t.image_std??t.std,this.resample=t.resample??2,this.do_rescale=t.do_rescale??!0,this.rescale_factor=t.rescale_factor??1/255,this.do_normalize=t.do_normalize,this.do_thumbnail=t.do_thumbnail,this.size=t.size??t.image_size,this.do_resize=t.do_resize??void 0!==this.size,this.size_divisibility=t.size_divisibility??t.size_divisor,this.do_center_crop=t.do_center_crop,this.crop_size=t.crop_size,this.do_convert_rgb=t.do_convert_rgb??!0,this.do_crop_margin=t.do_crop_margin,this.pad_size=t.pad_size,this.do_pad=t.do_pad,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=t.do_flip_channel_order??!1,this.config=t}async thumbnail(t,r,s=2){let i=t.height,a=t.width,n=r.height,o=r.width,l=Math.min(i,n),u=Math.min(a,o);return l===i&&u===a?t:(i>a?u=Math.floor(a*l/i):a>i&&(l=Math.floor(i*u/a)),await t.resize(u,l,{resample:s}))}async crop_margin(t,r=200){let s=t.clone().grayscale(),i=(0,n.min)(s.data)[0],a=(0,n.max)(s.data)[0]-i;if(0===a)return t;let o=r/255,l=s.width,u=s.height,d=0,c=0,p=s.data;for(let t=0;t<s.height;++t){let r=t*s.width;for(let n=0;n<s.width;++n)(p[r+n]-i)/a<o&&(l=Math.min(l,n),u=Math.min(u,t),d=Math.max(d,n),c=Math.max(c,t))}return t=await t.crop([l,u,d,c])}pad_image(t,r,s,{mode:i="constant",center:a=!1,constant_values:n=0}={}){let l,u;let[d,c,p]=r;if("number"==typeof s?(l=s,u=s):"square"===s?l=u=Math.max(d,c):(l=s.width,u=s.height),l!==c||u!==d){let s=new Float32Array(l*u*p);if(Array.isArray(n))for(let t=0;t<s.length;++t)s[t]=n[t%p];else 0!==n&&s.fill(n);let[h,m]=a?[Math.floor((l-c)/2),Math.floor((u-d)/2)]:[0,0];for(let r=0;r<d;++r){let i=(r+m)*l,a=r*c;for(let r=0;r<c;++r){let n=(i+r+h)*p,o=(a+r)*p;for(let r=0;r<p;++r)s[n+r]=t[o+r]}}if("symmetric"===i){if(a)throw Error("`center` padding is not supported when `mode` is set to `symmetric`.");let r=d-1,i=c-1;for(let a=0;a<u;++a){let n=a*l,u=(0,o.calculateReflectOffset)(a,r)*c;for(let r=0;r<l;++r){if(a<d&&r<c)continue;let l=(n+r)*p,h=(u+(0,o.calculateReflectOffset)(r,i))*p;for(let r=0;r<p;++r)s[l+r]=t[h+r]}}}t=s,r=[u,l,p]}return[t,r]}rescale(t){for(let r=0;r<t.length;++r)t[r]=this.rescale_factor*t[r]}get_resize_output_image_size(t,r){let s,i;let[a,n]=t.size;if(this.do_thumbnail){let{height:t,width:i}=r;s=Math.min(t,i)}else Number.isInteger(r)?(s=r,i=this.config.max_size??s):void 0!==r&&(s=r.shortest_edge,i=r.longest_edge);if(void 0!==s||void 0!==i){let t=void 0===s?1:Math.max(s/a,s/n),r=a*t,o=n*t,l=void 0===i?1:Math.min(i/r,i/o),u=Math.floor(Number((r*l).toFixed(2))),d=Math.floor(Number((o*l).toFixed(2)));return void 0!==this.size_divisibility&&([u,d]=c([u,d],this.size_divisibility)),[u,d]}if(void 0!==r&&void 0!==r.width&&void 0!==r.height){let t=r.width,s=r.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let r=s/n,i=t/a;Math.abs(1-i)<Math.abs(1-r)?r=i:i=r,s=d(r*n,this.config.ensure_multiple_of),t=d(i*a,this.config.ensure_multiple_of)}return[t,s]}if(void 0!==this.size_divisibility)return c([a,n],this.size_divisibility);if(void 0!==r.min_pixels&&void 0!==r.max_pixels){let{min_pixels:t,max_pixels:s}=r;return function(t,r,s=28,i=3136,a=1003520){if(t<s||r<s)throw Error(`height:${t} or width:${r} must be larger than factor:${s}`);if(Math.max(t,r)/Math.min(t,r)>200)throw Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(t,r)/Math.min(t,r)}`);let n=Math.round(t/s)*s,o=Math.round(r/s)*s;if(n*o>a){let i=Math.sqrt(t*r/a);n=Math.floor(t/i/s)*s,o=Math.floor(r/i/s)*s}else if(n*o<i){let a=Math.sqrt(i/(t*r));n=Math.ceil(t*a/s)*s,o=Math.ceil(r*a/s)*s}return[n,o]}(n,a,this.config.patch_size*this.config.merge_size,t,s)}throw Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(r)}`)}async resize(t){let[r,s]=this.get_resize_output_image_size(t,this.size);return await t.resize(r,s,{resample:this.resample})}async preprocess(t,{do_normalize:r=null,do_pad:s=null,do_convert_rgb:i=null,do_convert_grayscale:n=null,do_flip_channel_order:o=null}={}){this.do_crop_margin&&(t=await this.crop_margin(t));let[l,u]=t.size;if(i??this.do_convert_rgb?t=t.rgb():n&&(t=t.grayscale()),this.do_resize&&(t=await this.resize(t)),this.do_thumbnail&&(t=await this.thumbnail(t,this.size,this.resample)),this.do_center_crop){let r,s;Number.isInteger(this.crop_size)?(r=this.crop_size,s=this.crop_size):(r=this.crop_size.width,s=this.crop_size.height),t=await t.center_crop(r,s)}let d=[t.height,t.width],p=Float32Array.from(t.data),h=[t.height,t.width,t.channels];if(this.do_rescale&&this.rescale(p),r??this.do_normalize){let r=this.image_mean;Array.isArray(this.image_mean)||(r=Array(t.channels).fill(r));let s=this.image_std;if(Array.isArray(this.image_std)||(s=Array(t.channels).fill(r)),r.length!==t.channels||s.length!==t.channels)throw Error(`When set to arrays, the length of \`image_mean\` (${r.length}) and \`image_std\` (${s.length}) must match the number of channels in the image (${t.channels}).`);for(let i=0;i<p.length;i+=t.channels)for(let a=0;a<t.channels;++a)p[i+a]=(p[i+a]-r[a])/s[a]}if(s??this.do_pad){if(this.pad_size){let r=this.pad_image(p,[t.height,t.width,t.channels],this.pad_size);[p,h]=r}else if(this.size_divisibility){let[t,r]=c([h[1],h[0]],this.size_divisibility);[p,h]=this.pad_image(p,h,{width:t,height:r})}}if(o??this.do_flip_channel_order){if(3!==h[2])throw Error("Flipping channel order is only supported for RGB images.");for(let t=0;t<p.length;t+=3){let r=p[t];p[t]=p[t+2],p[t+2]=r}}return{original_size:[u,l],reshaped_input_size:d,pixel_values:new a.Tensor("float32",p,h).permute(2,0,1)}}async _call(t,...r){Array.isArray(t)||(t=[t]);let s=await Promise.all(t.map(t=>this.preprocess(t)));return{pixel_values:(0,a.stack)(s.map(t=>t.pixel_values),0),original_sizes:s.map(t=>t.original_size),reshaped_input_sizes:s.map(t=>t.reshaped_input_size)}}static async from_pretrained(t,r){return new this(await (0,l.getModelJSON)(t,u.IMAGE_PROCESSOR_NAME,!0,r))}}},"./src/base/processing_utils.js":(t,r,s)=>{s.r(r),s.d(r,{Processor:()=>o});var i=s("./src/utils/constants.js"),a=s("./src/utils/generic.js"),n=s("./src/utils/hub.js");class o extends a.Callable{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;constructor(t,r){super(),this.config=t,this.components=r}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(t,r={}){if(!this.tokenizer)throw Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(t,{tokenize:!1,...r})}batch_decode(...t){if(!this.tokenizer)throw Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...t)}decode(...t){if(!this.tokenizer)throw Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...t)}async _call(t,...r){for(let s of[this.image_processor,this.feature_extractor,this.tokenizer])if(s)return s(t,...r);throw Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(t,r){let[s,a]=await Promise.all([this.uses_processor_config?(0,n.getModelJSON)(t,i.PROCESSOR_NAME,!0,r):{},Promise.all(this.classes.filter(t=>t in this).map(async s=>{let i=await this[s].from_pretrained(t,r);return[s.replace(/_class$/,""),i]})).then(Object.fromEntries)]);return new this(s,a)}}},"./src/configs.js":(t,r,s)=>{s.r(r),s.d(r,{AutoConfig:()=>u,PretrainedConfig:()=>l,getKeyValueShapes:()=>o});var i=s("./src/utils/core.js"),a=s("./src/utils/hub.js");async function n(t,r){return await (0,a.getModelJSON)(t,"config.json",!0,r)}function o(t,{prefix:r="past_key_values",batch_size:s=1}={}){let i={},a=t.normalized_config;if(a.is_encoder_decoder&&"num_encoder_heads"in a&&"num_decoder_heads"in a){let t=a.encoder_dim_kv??a.encoder_hidden_size/a.num_encoder_heads,n=a.decoder_dim_kv??a.decoder_hidden_size/a.num_decoder_heads,o=[s,a.num_encoder_heads,0,t],l=[s,a.num_decoder_heads,0,n];for(let t=0;t<a.num_decoder_layers;++t)i[`${r}.${t}.encoder.key`]=o,i[`${r}.${t}.encoder.value`]=o,i[`${r}.${t}.decoder.key`]=l,i[`${r}.${t}.decoder.value`]=l}else{let t=a.num_heads,n=a.num_layers,o=a.dim_kv??a.hidden_size/(a.num_attention_heads??t);if("falcon"===a.model_type){let a=[s*t,0,o];for(let t=0;t<n;++t)i[`${r}.${t}.key`]=a,i[`${r}.${t}.value`]=a}else if(a.multi_query){let a=[s*t,0,2*o];for(let t=0;t<n;++t)i[`${r}.${t}.key_value`]=a}else if("bloom"===a.model_type){let a=[s*t,o,0],l=[s*t,0,o];for(let t=0;t<n;++t)i[`${r}.${t}.key`]=a,i[`${r}.${t}.value`]=l}else if("openelm"===a.model_type)for(let a=0;a<n;++a){let n=[s,t[a],0,o];i[`${r}.${a}.key`]=n,i[`${r}.${a}.value`]=n}else{let a=[s,t,0,o];for(let t=0;t<n;++t)i[`${r}.${t}.key`]=a,i[`${r}.${t}.value`]=a}}return i}class l{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(t){Object.assign(this,t),this.normalized_config=function t(r){let s={},a={};switch(r.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":a=t(r.text_config);break;case"moondream1":a=t(r.phi_config);break;case"musicgen":a=t(r.decoder);break;case"multi_modality":a=t(r.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":s.num_heads="n_head",s.num_layers="n_layer",s.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":s.num_heads="num_attention_heads",s.num_layers="num_hidden_layers",s.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":s.num_heads="num_key_value_heads",s.num_layers="num_hidden_layers",s.hidden_size="hidden_size",s.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"glm":case"helium":s.num_heads="num_key_value_heads",s.num_layers="num_hidden_layers",s.dim_kv="head_dim";break;case"openelm":s.num_heads="num_kv_heads",s.num_layers="num_transformer_layers",s.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":s.num_heads="num_heads",s.num_layers="num_layers",s.hidden_size="hidden_size";break;case"bloom":s.num_heads="n_head",s.num_layers="n_layer",s.hidden_size="hidden_size";break;case"mpt":s.num_heads="n_heads",s.num_layers="n_layers",s.hidden_size="d_model";break;case"exaone":s.num_heads="num_key_value_heads",s.num_layers="num_layers",s.dim_kv="head_dim",s.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":s.num_decoder_layers="num_decoder_layers",s.num_decoder_heads="num_heads",s.decoder_dim_kv="d_kv",s.num_encoder_layers="num_layers",s.num_encoder_heads="num_heads",s.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":s.num_decoder_layers="decoder_layers",s.num_decoder_heads="decoder_attention_heads",s.decoder_hidden_size="d_model",s.num_encoder_layers="encoder_layers",s.num_encoder_heads="encoder_attention_heads",s.encoder_hidden_size="d_model";break;case"speecht5":s.num_decoder_layers="decoder_layers",s.num_decoder_heads="decoder_attention_heads",s.decoder_hidden_size="hidden_size",s.num_encoder_layers="encoder_layers",s.num_encoder_heads="encoder_attention_heads",s.encoder_hidden_size="hidden_size";break;case"trocr":s.num_encoder_layers=s.num_decoder_layers="decoder_layers",s.num_encoder_heads=s.num_decoder_heads="decoder_attention_heads",s.encoder_hidden_size=s.decoder_hidden_size="d_model";break;case"musicgen_decoder":s.num_encoder_layers=s.num_decoder_layers="num_hidden_layers",s.num_encoder_heads=s.num_decoder_heads="num_attention_heads",s.encoder_hidden_size=s.decoder_hidden_size="hidden_size";break;case"moonshine":s.num_decoder_layers="decoder_num_hidden_layers",s.num_decoder_heads="decoder_num_key_value_heads",s.num_encoder_layers="encoder_num_hidden_layers",s.num_encoder_heads="encoder_num_key_value_heads",s.encoder_hidden_size=s.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":let n=t(r.decoder),o=(0,i.pick)(r,["model_type","is_encoder_decoder"]);return"num_decoder_layers"in n?(o.num_decoder_layers=n.num_decoder_layers,o.num_decoder_heads=n.num_decoder_heads,o.decoder_hidden_size=n.decoder_hidden_size,o.num_encoder_layers=n.num_encoder_layers,o.num_encoder_heads=n.num_encoder_heads,o.encoder_hidden_size=n.encoder_hidden_size):(o.num_layers=n.num_layers,o.num_heads=n.num_heads,o.hidden_size=n.hidden_size),o}let l={...a,...(0,i.pick)(r,["model_type","multi_query","is_encoder_decoder"])};for(let t in s)l[t]=r[s[t]];return l}(this)}static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:a=!1,revision:o="main"}={}){return!s||s instanceof l||(s=new l(s)),new this(s??await n(t,{progress_callback:r,config:s,cache_dir:i,local_files_only:a,revision:o}))}}class u{static async from_pretrained(...t){return l.from_pretrained(...t)}}},"./src/env.js":(t,r,s)=>{s.r(r),s.d(r,{apis:()=>g,env:()=>x});var i=s("?569f"),a=s("?3f59"),n=s("?154a");let o="undefined"!=typeof window&&void 0!==window.document,l="undefined"!=typeof self&&self.constructor?.name==="DedicatedWorkerGlobalScope",u="undefined"!=typeof self&&"caches"in self,d="undefined"!=typeof navigator&&"gpu"in navigator,c="undefined"!=typeof navigator&&"ml"in navigator,p=void 0!==S,h=p&&S?.release?.name==="node",m=!v(i),f=!v(a),g=Object.freeze({IS_BROWSER_ENV:o,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:u,IS_WEBGPU_AVAILABLE:d,IS_WEBNN_AVAILABLE:c,IS_PROCESS_AVAILABLE:p,IS_NODE_ENV:h,IS_FS_AVAILABLE:m,IS_PATH_AVAILABLE:f}),_=m&&f,b="./";if(_){let t=Object({}).url;b=t?a.dirname(a.dirname(n.fileURLToPath(t))):a.dirname("/")}let y=_?a.join(b,"/.cache/"):null,w="/models/",x={version:"3.3.3",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(o||l),localModelPath:_?a.join(b,w):w,useFS:m,useBrowserCache:u,useFSCache:m,cacheDir:y,useCustomCache:!1,customCache:null};function v(t){return 0===Object.keys(t).length}},"./src/generation/configuration_utils.js":(t,r,s)=>{s.r(r),s.d(r,{GenerationConfig:()=>a});var i=s("./src/utils/core.js");class a{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(t){Object.assign(this,(0,i.pick)(t,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(t,r,s)=>{s.r(r),s.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>b,ForcedBOSTokenLogitsProcessor:()=>u,ForcedEOSTokenLogitsProcessor:()=>d,LogitsProcessor:()=>n,LogitsProcessorList:()=>l,LogitsWarper:()=>o,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>g,NoBadWordsLogitsProcessor:()=>_,NoRepeatNGramLogitsProcessor:()=>h,RepetitionPenaltyLogitsProcessor:()=>m,SuppressTokensAtBeginLogitsProcessor:()=>c,TemperatureLogitsWarper:()=>y,TopKLogitsWarper:()=>x,TopPLogitsWarper:()=>w,WhisperTimeStampLogitsProcessor:()=>p});var i=s("./src/utils/generic.js");s("./src/utils/tensor.js");var a=s("./src/utils/maths.js");class n extends i.Callable{_call(t,r){throw Error("`_call` should be implemented in a subclass")}}class o extends i.Callable{_call(t,r){throw Error("`_call` should be implemented in a subclass")}}class l extends i.Callable{constructor(){super(),this.processors=[]}push(t){this.processors.push(t)}extend(t){this.processors.push(...t)}_call(t,r){let s=r;for(let r of this.processors)s=r(t,s);return s}[Symbol.iterator](){return this.processors.values()}}class u extends n{constructor(t){super(),this.bos_token_id=t}_call(t,r){for(let s=0;s<t.length;++s)if(1===t[s].length){let t=r[s].data;t.fill(-1/0),t[this.bos_token_id]=0}return r}}class d extends n{constructor(t,r){super(),this.max_length=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length===this.max_length-1){let t=r[s].data;for(let r of(t.fill(-1/0),this.eos_token_id))t[r]=0}return r}}class c extends n{constructor(t,r){super(),this.begin_suppress_tokens=t,this.begin_index=r}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length===this.begin_index){let t=r[s].data;for(let r of this.begin_suppress_tokens)t[r]=-1/0}return r}}class p extends n{constructor(t,r){super(),this.eos_token_id=Array.isArray(t.eos_token_id)?t.eos_token_id[0]:t.eos_token_id,this.no_timestamps_token_id=t.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=r.length,r.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=t.max_initial_timestamp_index}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data;if(i[this.no_timestamps_token_id]=-1/0,t[s].length===this.begin_index-1){i.fill(-1/0),i[this.timestamp_begin]=0;continue}let n=t[s].slice(this.begin_index),o=n.length>=1&&n[n.length-1]>=this.timestamp_begin,l=n.length<2||n[n.length-2]>=this.timestamp_begin;if(o&&(l?i.subarray(this.timestamp_begin).fill(-1/0):i.subarray(0,this.eos_token_id).fill(-1/0)),t[s].length===this.begin_index&&null!==this.max_initial_timestamp_index){let t=this.timestamp_begin+this.max_initial_timestamp_index;i.subarray(t+1).fill(-1/0)}let u=(0,a.log_softmax)(i);Math.log(u.subarray(this.timestamp_begin).map(Math.exp).reduce((t,r)=>t+r))>(0,a.max)(u.subarray(0,this.timestamp_begin))[0]&&i.subarray(0,this.timestamp_begin).fill(-1/0)}return r}}class h extends n{constructor(t){super(),this.no_repeat_ngram_size=t}getNgrams(t){let r=t.length,s=[];for(let i=0;i<r+1-this.no_repeat_ngram_size;++i){let r=[];for(let s=0;s<this.no_repeat_ngram_size;++s)r.push(t[i+s]);s.push(r.map(Number))}let i=new Map;for(let t of s){let r=JSON.stringify(t.slice(0,t.length-1)),s=i.get(r)??[];s.push(t[t.length-1]),i.set(r,s)}return i}getGeneratedNgrams(t,r){let s=r.slice(r.length+1-this.no_repeat_ngram_size,r.length);return t.get(JSON.stringify(s.map(Number)))??[]}calcBannedNgramTokens(t){if(t.length+1<this.no_repeat_ngram_size)return[];{let r=this.getNgrams(t);return this.getGeneratedNgrams(r,t)}}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data;for(let r of this.calcBannedNgramTokens(t[s]))i[r]=-1/0}return r}}class m extends n{constructor(t){super(),this.penalty=t}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data;for(let r of new Set(t[s])){let t=Number(r);i[t]<0?i[t]*=this.penalty:i[t]/=this.penalty}}return r}}class f extends n{constructor(t,r){super(),this.min_length=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length<this.min_length){let t=r[s].data;for(let r of this.eos_token_id)t[r]=-1/0}return r}}class g extends n{constructor(t,r,s){super(),this.prompt_length_to_skip=t,this.min_new_tokens=r,this.eos_token_id=Array.isArray(s)?s:[s]}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length-this.prompt_length_to_skip<this.min_new_tokens){let t=r[s].data;for(let r of this.eos_token_id)t[r]=-1/0}return r}}class _ extends n{constructor(t,r){super(),this.bad_words_ids=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data,a=t[s];for(let t of this.bad_words_ids){let r=!0;for(let s=1;s<=t.length-1&&t.length<a.length;++s)if(t.at(-s-1)!=a.at(-s)){r=!1;break}r&&(i[t.at(-1)]=-1/0)}}return r}}class b extends n{constructor(t){if(super(),t<=1)throw Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${t}.`);this.guidance_scale=t}_call(t,r){if(r.dims[0]!==2*t.length)throw Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${r.dims[0]} for the logits and ${t.length} for the input ids.`);let s=t.length,i=r.slice([0,s],null),a=r.slice([s,r.dims[0]],null);for(let t=0;t<a.data.length;++t)a.data[t]+=(i.data[t]-a.data[t])*this.guidance_scale;return a}}class y extends o{constructor(t){super(),this.temperature=t}_call(t,r){let s=r.data;for(let t=0;t<s.length;++t)s[t]/=this.temperature;return r}}class w extends o{constructor(t,{filter_value:r=-1/0,min_tokens_to_keep:s=1}={}){if(super(),t<0||t>1)throw Error(`\`top_p\` must be a float > 0 and < 1, but is ${t}`);if(!Number.isInteger(s)||s<1)throw Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${s}`);this.top_p=t,this.filter_value=r,this.min_tokens_to_keep=s}}class x extends o{constructor(t,{filter_value:r=-1/0,min_tokens_to_keep:s=1}={}){if(super(),!Number.isInteger(t)||t<0)throw Error(`\`top_k\` must be a positive integer, but is ${t}`);this.top_k=Math.max(t,s),this.filter_value=r}}},"./src/generation/logits_sampler.js":(t,r,s)=>{s.r(r),s.d(r,{LogitsSampler:()=>o});var i=s("./src/utils/generic.js"),a=s("./src/utils/tensor.js"),n=s("./src/utils/maths.js");s("./src/generation/configuration_utils.js");class o extends i.Callable{constructor(t){super(),this.generation_config=t}async _call(t){return this.sample(t)}async sample(t){throw Error("sample should be implemented in subclasses.")}getLogits(t,r){let s=t.dims.at(-1),i=t.data;if(-1===r)i=i.slice(-s);else{let t=r*s;i=i.slice(t,t+s)}return i}randomSelect(t){let r=0;for(let s=0;s<t.length;++s)r+=t[s];let s=Math.random()*r;for(let r=0;r<t.length;++r)if((s-=t[r])<=0)return r;return 0}static getSampler(t){if(t.do_sample)return new u(t);if(t.num_beams>1)return new d(t);if(t.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${t.num_return_sequences}.`);return new l(t)}}class l extends o{async sample(t){return[[BigInt((0,n.max)(t.data)[1]),0]]}}class u extends o{async sample(t){let r=t.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));let[s,i]=await (0,a.topk)(t,r),o=(0,n.softmax)(s.data);return Array.from({length:this.generation_config.num_beams},()=>{let t=this.randomSelect(o);return[i.data[t],Math.log(o[t])]})}}class d extends o{async sample(t){let r=t.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));let[s,i]=await (0,a.topk)(t,r),o=(0,n.softmax)(s.data);return Array.from({length:this.generation_config.num_beams},(t,r)=>[i.data[r],Math.log(o[r])])}}},"./src/generation/stopping_criteria.js":(t,r,s)=>{s.r(r),s.d(r,{EosTokenCriteria:()=>l,InterruptableStoppingCriteria:()=>u,MaxLengthCriteria:()=>o,StoppingCriteria:()=>a,StoppingCriteriaList:()=>n});var i=s("./src/utils/generic.js");class a extends i.Callable{_call(t,r){throw Error("StoppingCriteria needs to be subclassed")}}class n extends i.Callable{constructor(){super(),this.criteria=[]}push(t){this.criteria.push(t)}extend(t){t instanceof n?t=t.criteria:t instanceof a&&(t=[t]),this.criteria.push(...t)}_call(t,r){let s=Array(t.length).fill(!1);for(let i of this.criteria){let a=i(t,r);for(let t=0;t<s.length;++t)s[t]||=a[t]}return s}[Symbol.iterator](){return this.criteria.values()}}class o extends a{constructor(t,r=null){super(),this.max_length=t,this.max_position_embeddings=r}_call(t){return t.map(t=>t.length>=this.max_length)}}class l extends a{constructor(t){super(),Array.isArray(t)||(t=[t]),this.eos_token_id=t}_call(t,r){return t.map(t=>{let r=t.at(-1);return this.eos_token_id.some(t=>r==t)})}}class u extends a{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(t,r){return Array(t.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(t,r,s)=>{s.r(r),s.d(r,{BaseStreamer:()=>o,TextStreamer:()=>u,WhisperTextStreamer:()=>d});var i=s("./src/utils/core.js"),a=s("./src/tokenizers.js"),n=s("./src/env.js");class o{put(t){throw Error("Not implemented")}end(){throw Error("Not implemented")}}let l=n.apis.IS_PROCESS_AVAILABLE?t=>S.stdout.write(t):t=>console.log(t);class u extends o{constructor(t,{skip_prompt:r=!1,callback_function:s=null,token_callback_function:i=null,skip_special_tokens:a=!0,decode_kwargs:n={},...o}={}){super(),this.tokenizer=t,this.skip_prompt=r,this.callback_function=s??l,this.token_callback_function=i,this.decode_kwargs={skip_special_tokens:a,...n,...o},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(t){let r;if(t.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}let s=t[0];this.token_callback_function?.(s),this.token_cache=(0,i.mergeArrays)(this.token_cache,s);let n=this.tokenizer.decode(this.token_cache,this.decode_kwargs);n.endsWith("\n")?(r=n.slice(this.print_len),this.token_cache=[],this.print_len=0):(r=n.length>0&&(0,a.is_chinese_char)(n.charCodeAt(n.length-1))?n.slice(this.print_len):n.slice(this.print_len,n.lastIndexOf(" ")+1),this.print_len+=r.length),this.on_finalized_text(r,!1)}end(){let t;this.token_cache.length>0?(t=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):t="",this.next_tokens_are_prompt=!0,this.on_finalized_text(t,!0)}on_finalized_text(t,r){t.length>0&&this.callback_function?.(t),r&&this.callback_function===l&&n.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.("\n")}}class d extends u{constructor(t,{skip_prompt:r=!1,callback_function:s=null,token_callback_function:i=null,on_chunk_start:a=null,on_chunk_end:n=null,on_finalize:o=null,time_precision:l=.02,skip_special_tokens:u=!0,decode_kwargs:d={}}={}){super(t,{skip_prompt:r,skip_special_tokens:u,callback_function:s,token_callback_function:i,decode_kwargs:d}),this.timestamp_begin=t.timestamp_begin,this.on_chunk_start=a,this.on_chunk_end=n,this.on_finalize=o,this.time_precision=l,this.waiting_for_timestamp=!1}put(t){if(t.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");let r=t[0];if(1===r.length){let s=Number(r[0])-this.timestamp_begin;if(s>=0){let r=s*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(r):this.on_chunk_start?.(r),this.waiting_for_timestamp=!this.waiting_for_timestamp,t=[[]]}}return super.put(t)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(t,r,s)=>{s.r(r),s.d(r,{ASTForAudioClassification:()=>tJ,ASTModel:()=>tX,ASTPreTrainedModel:()=>tQ,AlbertForMaskedLM:()=>tn,AlbertForQuestionAnswering:()=>ta,AlbertForSequenceClassification:()=>ti,AlbertModel:()=>ts,AlbertPreTrainedModel:()=>tr,AutoModel:()=>oE,AutoModelForAudioClassification:()=>oQ,AutoModelForAudioFrameClassification:()=>oJ,AutoModelForCTC:()=>oK,AutoModelForCausalLM:()=>oB,AutoModelForDepthEstimation:()=>o1,AutoModelForDocumentQuestionAnswering:()=>oY,AutoModelForImageClassification:()=>oj,AutoModelForImageFeatureExtraction:()=>o4,AutoModelForImageMatting:()=>oZ,AutoModelForImageSegmentation:()=>oV,AutoModelForImageToImage:()=>o0,AutoModelForMaskGeneration:()=>oH,AutoModelForMaskedLM:()=>oN,AutoModelForNormalEstimation:()=>o2,AutoModelForObjectDetection:()=>oq,AutoModelForPoseEstimation:()=>o3,AutoModelForQuestionAnswering:()=>oD,AutoModelForSemanticSegmentation:()=>oG,AutoModelForSeq2SeqLM:()=>oF,AutoModelForSequenceClassification:()=>oI,AutoModelForSpeechSeq2Seq:()=>oz,AutoModelForTextToSpectrogram:()=>oO,AutoModelForTextToWaveform:()=>oL,AutoModelForTokenClassification:()=>oA,AutoModelForUniversalSegmentation:()=>oU,AutoModelForVision2Seq:()=>oR,AutoModelForXVector:()=>oX,AutoModelForZeroShotObjectDetection:()=>oW,BartForConditionalGeneration:()=>tb,BartForSequenceClassification:()=>ty,BartModel:()=>t_,BartPretrainedModel:()=>tg,BaseModelOutput:()=>G,BeitForImageClassification:()=>ih,BeitModel:()=>ip,BeitPreTrainedModel:()=>ic,BertForMaskedLM:()=>W,BertForQuestionAnswering:()=>Q,BertForSequenceClassification:()=>H,BertForTokenClassification:()=>K,BertModel:()=>q,BertPreTrainedModel:()=>U,BlenderbotForConditionalGeneration:()=>tC,BlenderbotModel:()=>t$,BlenderbotPreTrainedModel:()=>tk,BlenderbotSmallForConditionalGeneration:()=>tE,BlenderbotSmallModel:()=>tP,BlenderbotSmallPreTrainedModel:()=>tS,BloomForCausalLM:()=>sA,BloomModel:()=>sI,BloomPreTrainedModel:()=>sE,CLIPModel:()=>rl,CLIPPreTrainedModel:()=>ro,CLIPSegForImageSegmentation:()=>rk,CLIPSegModel:()=>rT,CLIPSegPreTrainedModel:()=>rM,CLIPTextModel:()=>ru,CLIPTextModelWithProjection:()=>rd,CLIPVisionModel:()=>rc,CLIPVisionModelWithProjection:()=>rp,CamembertForMaskedLM:()=>eM,CamembertForQuestionAnswering:()=>e$,CamembertForSequenceClassification:()=>eT,CamembertForTokenClassification:()=>ek,CamembertModel:()=>ev,CamembertPreTrainedModel:()=>ex,CausalLMOutput:()=>lt,CausalLMOutputWithPast:()=>lr,ChineseCLIPModel:()=>rb,ChineseCLIPPreTrainedModel:()=>r_,ClapAudioModelWithProjection:()=>ng,ClapModel:()=>nm,ClapPreTrainedModel:()=>nh,ClapTextModelWithProjection:()=>nf,CodeGenForCausalLM:()=>rW,CodeGenModel:()=>rq,CodeGenPreTrainedModel:()=>rU,CohereForCausalLM:()=>su,CohereModel:()=>sl,CoherePreTrainedModel:()=>so,ConvBertForMaskedLM:()=>ec,ConvBertForQuestionAnswering:()=>em,ConvBertForSequenceClassification:()=>ep,ConvBertForTokenClassification:()=>eh,ConvBertModel:()=>ed,ConvBertPreTrainedModel:()=>eu,ConvNextForImageClassification:()=>at,ConvNextModel:()=>ae,ConvNextPreTrainedModel:()=>i7,ConvNextV2ForImageClassification:()=>ai,ConvNextV2Model:()=>as,ConvNextV2PreTrainedModel:()=>ar,DPTForDepthEstimation:()=>iW,DPTModel:()=>iq,DPTPreTrainedModel:()=>iU,DebertaForMaskedLM:()=>eP,DebertaForQuestionAnswering:()=>eA,DebertaForSequenceClassification:()=>eE,DebertaForTokenClassification:()=>eI,DebertaModel:()=>eS,DebertaPreTrainedModel:()=>eC,DebertaV2ForMaskedLM:()=>eO,DebertaV2ForQuestionAnswering:()=>eN,DebertaV2ForSequenceClassification:()=>eL,DebertaV2ForTokenClassification:()=>eB,DebertaV2Model:()=>ez,DebertaV2PreTrainedModel:()=>eF,DecisionTransformerModel:()=>nW,DecisionTransformerPreTrainedModel:()=>nq,DeiTForImageClassification:()=>iI,DeiTModel:()=>iE,DeiTPreTrainedModel:()=>iP,DepthAnythingForDepthEstimation:()=>iK,DepthAnythingPreTrainedModel:()=>iH,DepthProForDepthEstimation:()=>i0,DepthProPreTrainedModel:()=>iZ,DetrForObjectDetection:()=>i_,DetrForSegmentation:()=>ib,DetrModel:()=>ig,DetrObjectDetectionOutput:()=>iy,DetrPreTrainedModel:()=>im,DetrSegmentationOutput:()=>iw,Dinov2ForImageClassification:()=>ao,Dinov2Model:()=>an,Dinov2PreTrainedModel:()=>aa,Dinov2WithRegistersForImageClassification:()=>ad,Dinov2WithRegistersModel:()=>au,Dinov2WithRegistersPreTrainedModel:()=>al,DistilBertForMaskedLM:()=>eU,DistilBertForQuestionAnswering:()=>eG,DistilBertForSequenceClassification:()=>ej,DistilBertForTokenClassification:()=>eV,DistilBertModel:()=>eR,DistilBertPreTrainedModel:()=>eD,DonutSwinModel:()=>i9,DonutSwinPreTrainedModel:()=>i5,EfficientNetForImageClassification:()=>nS,EfficientNetModel:()=>nC,EfficientNetPreTrainedModel:()=>n$,ElectraForMaskedLM:()=>e_,ElectraForQuestionAnswering:()=>ew,ElectraForSequenceClassification:()=>eb,ElectraForTokenClassification:()=>ey,ElectraModel:()=>eg,ElectraPreTrainedModel:()=>ef,EsmForMaskedLM:()=>eH,EsmForSequenceClassification:()=>eK,EsmForTokenClassification:()=>eQ,EsmModel:()=>eW,EsmPreTrainedModel:()=>eq,ExaoneForCausalLM:()=>r4,ExaoneModel:()=>r3,ExaonePreTrainedModel:()=>r2,FalconForCausalLM:()=>np,FalconModel:()=>nc,FalconPreTrainedModel:()=>nd,FastViTForImageClassification:()=>s6,FastViTModel:()=>s4,FastViTPreTrainedModel:()=>s3,Florence2ForConditionalGeneration:()=>re,Florence2PreTrainedModel:()=>t7,GLPNForDepthEstimation:()=>i8,GLPNModel:()=>i6,GLPNPreTrainedModel:()=>i4,GPT2LMHeadModel:()=>rS,GPT2Model:()=>rC,GPT2PreTrainedModel:()=>r$,GPTBigCodeForCausalLM:()=>rG,GPTBigCodeModel:()=>rV,GPTBigCodePreTrainedModel:()=>rj,GPTJForCausalLM:()=>rR,GPTJModel:()=>rD,GPTJPreTrainedModel:()=>rN,GPTNeoForCausalLM:()=>rz,GPTNeoModel:()=>rF,GPTNeoPreTrainedModel:()=>rA,GPTNeoXForCausalLM:()=>rB,GPTNeoXModel:()=>rL,GPTNeoXPreTrainedModel:()=>rO,Gemma2ForCausalLM:()=>sf,Gemma2Model:()=>sm,Gemma2PreTrainedModel:()=>sh,GemmaForCausalLM:()=>sp,GemmaModel:()=>sc,GemmaPreTrainedModel:()=>sd,GlmForCausalLM:()=>r1,GlmModel:()=>r0,GlmPreTrainedModel:()=>rZ,GraniteForCausalLM:()=>sn,GraniteModel:()=>sa,GranitePreTrainedModel:()=>si,GroundingDinoForObjectDetection:()=>ap,GroundingDinoPreTrainedModel:()=>ac,GroupViTModel:()=>s2,GroupViTPreTrainedModel:()=>s1,HeliumForCausalLM:()=>rY,HeliumModel:()=>rJ,HeliumPreTrainedModel:()=>rX,HieraForImageClassification:()=>iz,HieraModel:()=>iF,HieraPreTrainedModel:()=>iA,HubertForCTC:()=>aJ,HubertForSequenceClassification:()=>aY,HubertModel:()=>aX,HubertPreTrainedModel:()=>aQ,IJepaForImageClassification:()=>sU,IJepaModel:()=>sG,IJepaPreTrainedModel:()=>sV,Idefics3ForConditionalGeneration:()=>ri,Idefics3PreTrainedModel:()=>rs,ImageMattingOutput:()=>ls,JAISLMHeadModel:()=>rI,JAISModel:()=>rE,JAISPreTrainedModel:()=>rP,JinaCLIPModel:()=>rw,JinaCLIPPreTrainedModel:()=>ry,JinaCLIPTextModel:()=>rx,JinaCLIPVisionModel:()=>rv,LlamaForCausalLM:()=>rQ,LlamaModel:()=>rK,LlamaPreTrainedModel:()=>rH,LlavaForConditionalGeneration:()=>t8,LlavaOnevisionForConditionalGeneration:()=>t5,LlavaPreTrainedModel:()=>t6,LongT5ForConditionalGeneration:()=>tp,LongT5Model:()=>tc,LongT5PreTrainedModel:()=>td,M2M100ForConditionalGeneration:()=>ak,M2M100Model:()=>aT,M2M100PreTrainedModel:()=>aM,MBartForCausalLM:()=>tT,MBartForConditionalGeneration:()=>tv,MBartForSequenceClassification:()=>tM,MBartModel:()=>tx,MBartPreTrainedModel:()=>tw,MPNetForMaskedLM:()=>e3,MPNetForQuestionAnswering:()=>e8,MPNetForSequenceClassification:()=>e4,MPNetForTokenClassification:()=>e6,MPNetModel:()=>e2,MPNetPreTrainedModel:()=>e1,MT5ForConditionalGeneration:()=>tf,MT5Model:()=>tm,MT5PreTrainedModel:()=>th,MarianMTModel:()=>av,MarianModel:()=>ax,MarianPreTrainedModel:()=>aw,MaskFormerForInstanceSegmentation:()=>i3,MaskFormerModel:()=>i2,MaskFormerPreTrainedModel:()=>i1,MaskedLMOutput:()=>o7,MgpstrForSceneTextRecognition:()=>nJ,MgpstrModelOutput:()=>nQ,MgpstrPreTrainedModel:()=>nX,MistralForCausalLM:()=>nn,MistralModel:()=>na,MistralPreTrainedModel:()=>ni,MobileBertForMaskedLM:()=>eY,MobileBertForQuestionAnswering:()=>e0,MobileBertForSequenceClassification:()=>eZ,MobileBertModel:()=>eJ,MobileBertPreTrainedModel:()=>eX,MobileLLMForCausalLM:()=>r5,MobileLLMModel:()=>r8,MobileLLMPreTrainedModel:()=>r6,MobileNetV1ForImageClassification:()=>nO,MobileNetV1Model:()=>nz,MobileNetV1PreTrainedModel:()=>nF,MobileNetV2ForImageClassification:()=>nN,MobileNetV2Model:()=>nB,MobileNetV2PreTrainedModel:()=>nL,MobileNetV3ForImageClassification:()=>nj,MobileNetV3Model:()=>nR,MobileNetV3PreTrainedModel:()=>nD,MobileNetV4ForImageClassification:()=>nU,MobileNetV4Model:()=>nG,MobileNetV4PreTrainedModel:()=>nV,MobileViTForImageClassification:()=>ie,MobileViTModel:()=>s7,MobileViTPreTrainedModel:()=>s9,MobileViTV2ForImageClassification:()=>is,MobileViTV2Model:()=>ir,MobileViTV2PreTrainedModel:()=>it,ModelOutput:()=>V,ModernBertForMaskedLM:()=>Y,ModernBertForSequenceClassification:()=>Z,ModernBertForTokenClassification:()=>ee,ModernBertModel:()=>J,ModernBertPreTrainedModel:()=>X,Moondream1ForConditionalGeneration:()=>t9,MoonshineForConditionalGeneration:()=>t3,MoonshineModel:()=>t2,MoonshinePreTrainedModel:()=>t1,MptForCausalLM:()=>sO,MptModel:()=>sz,MptPreTrainedModel:()=>sF,MultiModalityCausalLM:()=>nK,MultiModalityPreTrainedModel:()=>nH,MusicgenForCausalLM:()=>nI,MusicgenForConditionalGeneration:()=>nA,MusicgenModel:()=>nE,MusicgenPreTrainedModel:()=>nP,NomicBertModel:()=>er,NomicBertPreTrainedModel:()=>et,OPTForCausalLM:()=>sN,OPTModel:()=>sB,OPTPreTrainedModel:()=>sL,Olmo2ForCausalLM:()=>ss,Olmo2Model:()=>sr,Olmo2PreTrainedModel:()=>st,OlmoForCausalLM:()=>se,OlmoModel:()=>r7,OlmoPreTrainedModel:()=>r9,OpenELMForCausalLM:()=>sb,OpenELMModel:()=>s_,OpenELMPreTrainedModel:()=>sg,OwlViTForObjectDetection:()=>io,OwlViTModel:()=>ia,OwlViTPreTrainedModel:()=>ii,Owlv2ForObjectDetection:()=>id,Owlv2Model:()=>iu,Owlv2PreTrainedModel:()=>il,PaliGemmaForConditionalGeneration:()=>rr,PaliGemmaPreTrainedModel:()=>rt,PatchTSMixerForPrediction:()=>n3,PatchTSMixerModel:()=>n2,PatchTSMixerPreTrainedModel:()=>n1,PatchTSTForPrediction:()=>n0,PatchTSTModel:()=>nZ,PatchTSTPreTrainedModel:()=>nY,Phi3ForCausalLM:()=>sP,Phi3Model:()=>sS,Phi3PreTrainedModel:()=>sC,Phi3VForCausalLM:()=>rn,Phi3VPreTrainedModel:()=>ra,PhiForCausalLM:()=>s$,PhiModel:()=>sk,PhiPreTrainedModel:()=>sT,PreTrainedModel:()=>j,PretrainedMixin:()=>n4,PvtForImageClassification:()=>sQ,PvtModel:()=>sK,PvtPreTrainedModel:()=>sH,PyAnnoteForAudioFrameClassification:()=>aF,PyAnnoteModel:()=>aA,PyAnnotePreTrainedModel:()=>aI,QuestionAnsweringModelOutput:()=>le,Qwen2ForCausalLM:()=>sx,Qwen2Model:()=>sw,Qwen2PreTrainedModel:()=>sy,Qwen2VLForConditionalGeneration:()=>sM,Qwen2VLPreTrainedModel:()=>sv,RTDetrForObjectDetection:()=>iM,RTDetrModel:()=>iv,RTDetrObjectDetectionOutput:()=>iT,RTDetrPreTrainedModel:()=>ix,ResNetForImageClassification:()=>iB,ResNetModel:()=>iL,ResNetPreTrainedModel:()=>iO,RoFormerForMaskedLM:()=>ea,RoFormerForQuestionAnswering:()=>el,RoFormerForSequenceClassification:()=>en,RoFormerForTokenClassification:()=>eo,RoFormerModel:()=>ei,RoFormerPreTrainedModel:()=>es,RobertaForMaskedLM:()=>tF,RobertaForQuestionAnswering:()=>tL,RobertaForSequenceClassification:()=>tz,RobertaForTokenClassification:()=>tO,RobertaModel:()=>tA,RobertaPreTrainedModel:()=>tI,SamImageSegmentationOutput:()=>ay,SamModel:()=>ab,SamPreTrainedModel:()=>a_,SapiensForDepthEstimation:()=>iJ,SapiensForNormalEstimation:()=>iY,SapiensForSemanticSegmentation:()=>iX,SapiensPreTrainedModel:()=>iQ,SegformerForImageClassification:()=>nx,SegformerForSemanticSegmentation:()=>nv,SegformerModel:()=>nw,SegformerPreTrainedModel:()=>ny,Seq2SeqLMOutput:()=>o6,SequenceClassifierOutput:()=>o8,SiglipModel:()=>rm,SiglipPreTrainedModel:()=>rh,SiglipTextModel:()=>rf,SiglipVisionModel:()=>rg,SpeechT5ForSpeechToText:()=>a7,SpeechT5ForTextToSpeech:()=>ne,SpeechT5HifiGan:()=>nt,SpeechT5Model:()=>a9,SpeechT5PreTrainedModel:()=>a5,SqueezeBertForMaskedLM:()=>e7,SqueezeBertForQuestionAnswering:()=>tt,SqueezeBertForSequenceClassification:()=>te,SqueezeBertModel:()=>e9,SqueezeBertPreTrainedModel:()=>e5,StableLmForCausalLM:()=>nk,StableLmModel:()=>nT,StableLmPreTrainedModel:()=>nM,Starcoder2ForCausalLM:()=>nu,Starcoder2Model:()=>nl,Starcoder2PreTrainedModel:()=>no,StyleTextToSpeech2Model:()=>a8,StyleTextToSpeech2PreTrainedModel:()=>a6,Swin2SRForImageSuperResolution:()=>iG,Swin2SRModel:()=>iV,Swin2SRPreTrainedModel:()=>ij,SwinForImageClassification:()=>iR,SwinModel:()=>iD,SwinPreTrainedModel:()=>iN,T5ForConditionalGeneration:()=>tu,T5Model:()=>tl,T5PreTrainedModel:()=>to,TableTransformerForObjectDetection:()=>iC,TableTransformerModel:()=>i$,TableTransformerObjectDetectionOutput:()=>iS,TableTransformerPreTrainedModel:()=>ik,TokenClassifierOutput:()=>o9,TrOCRForCausalLM:()=>ns,TrOCRPreTrainedModel:()=>nr,UniSpeechForCTC:()=>aN,UniSpeechForSequenceClassification:()=>aD,UniSpeechModel:()=>aB,UniSpeechPreTrainedModel:()=>aL,UniSpeechSatForAudioFrameClassification:()=>aU,UniSpeechSatForCTC:()=>aV,UniSpeechSatForSequenceClassification:()=>aG,UniSpeechSatModel:()=>aj,UniSpeechSatPreTrainedModel:()=>aR,ViTForImageClassification:()=>sj,ViTMAEModel:()=>sJ,ViTMAEPreTrainedModel:()=>sX,ViTMSNForImageClassification:()=>s0,ViTMSNModel:()=>sZ,ViTMSNPreTrainedModel:()=>sY,ViTModel:()=>sR,ViTPreTrainedModel:()=>sD,VisionEncoderDecoderModel:()=>t4,VitMatteForImageMatting:()=>s5,VitMattePreTrainedModel:()=>s8,VitPoseForPoseEstimation:()=>sW,VitPosePreTrainedModel:()=>sq,VitsModel:()=>nb,VitsModelOutput:()=>li,VitsPreTrainedModel:()=>n_,Wav2Vec2BertForCTC:()=>aH,Wav2Vec2BertForSequenceClassification:()=>aK,Wav2Vec2BertModel:()=>aW,Wav2Vec2BertPreTrainedModel:()=>aq,Wav2Vec2ForAudioFrameClassification:()=>aE,Wav2Vec2ForCTC:()=>aS,Wav2Vec2ForSequenceClassification:()=>aP,Wav2Vec2Model:()=>aC,Wav2Vec2PreTrainedModel:()=>a$,WavLMForAudioFrameClassification:()=>a4,WavLMForCTC:()=>a1,WavLMForSequenceClassification:()=>a2,WavLMForXVector:()=>a3,WavLMModel:()=>a0,WavLMPreTrainedModel:()=>aZ,WeSpeakerResNetModel:()=>aO,WeSpeakerResNetPreTrainedModel:()=>az,WhisperForConditionalGeneration:()=>t0,WhisperModel:()=>tZ,WhisperPreTrainedModel:()=>tY,XLMForQuestionAnswering:()=>tV,XLMForSequenceClassification:()=>tR,XLMForTokenClassification:()=>tj,XLMModel:()=>tN,XLMPreTrainedModel:()=>tB,XLMRobertaForMaskedLM:()=>tq,XLMRobertaForQuestionAnswering:()=>tK,XLMRobertaForSequenceClassification:()=>tW,XLMRobertaForTokenClassification:()=>tH,XLMRobertaModel:()=>tU,XLMRobertaPreTrainedModel:()=>tG,XLMWithLMHeadModel:()=>tD,XVectorOutput:()=>o5,YolosForObjectDetection:()=>af,YolosModel:()=>am,YolosObjectDetectionOutput:()=>ag,YolosPreTrainedModel:()=>ah});var i=s("./src/configs.js"),a=s("./src/backends/onnx.js"),n=s("./src/utils/dtypes.js"),o=s("./src/utils/generic.js"),l=s("./src/utils/core.js"),u=s("./src/utils/hub.js"),d=s("./src/utils/constants.js"),c=s("./src/generation/logits_process.js"),p=s("./src/generation/configuration_utils.js"),h=s("./src/utils/tensor.js"),m=s("./src/utils/image.js"),f=s("./src/utils/maths.js"),g=s("./src/generation/stopping_criteria.js"),_=s("./src/generation/logits_sampler.js"),b=s("./src/env.js"),y=s("./src/models/whisper/generation_whisper.js"),w=s("./src/models/whisper/common_whisper.js");let x={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9},v=new Map,M=new Map,T=new Map;async function k(t,r,s){let o=s.config?.["transformers.js_config"]??{},l=s.device??o.device;l&&"string"!=typeof l&&(l.hasOwnProperty(r)?l=l[r]:(console.warn(`device not specified for "${r}". Using the default device.`),l=null));let d=l??(b.apis.IS_NODE_ENV?"cpu":"wasm"),c=(0,a.deviceToExecutionProviders)(d),p=s.dtype??o.dtype;if("string"!=typeof p&&(p&&p.hasOwnProperty(r)?p=p[r]:(p=n.DEFAULT_DEVICE_DTYPE_MAPPING[d]??n.DATA_TYPES.fp32,console.warn(`dtype not specified for "${r}". Using the default dtype (${p}) for this device (${d}).`))),p===n.DATA_TYPES.auto){let t=o.dtype;"string"!=typeof t&&(t=t[r]),p=t&&t!==n.DATA_TYPES.auto&&n.DATA_TYPES.hasOwnProperty(t)?t:n.DEFAULT_DEVICE_DTYPE_MAPPING[d]??n.DATA_TYPES.fp32}let h=p;if(n.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(h)){if(h===n.DATA_TYPES.fp16&&"webgpu"===d&&!await (0,n.isWebGpuFp16Supported)())throw Error(`The device (${d}) does not support fp16.`)}else throw Error(`Invalid dtype: ${h}. Should be one of: ${Object.keys(n.DATA_TYPES).join(", ")}`);let m=o.kv_cache_dtype?"string"==typeof o.kv_cache_dtype?o.kv_cache_dtype:o.kv_cache_dtype[h]??"float32":void 0;if(m&&!["float32","float16"].includes(m))throw Error(`Invalid kv_cache_dtype: ${m}. Should be one of: float32, float16`);let f=n.DEFAULT_DTYPE_SUFFIX_MAPPING[h],g=`${s.subfolder??""}/${r}${f}.onnx`,_={...s.session_options};_.executionProviders??=c;let y=o.free_dimension_overrides;y?_.freeDimensionOverrides??=y:d.startsWith("webnn")&&!_.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');let w=(0,u.getModelFile)(t,g,!0,s),x=s.use_external_data_format??o.use_external_data_format,v=[];if(x&&(!0===x||"object"==typeof x&&x.hasOwnProperty(r)&&!0===x[r])){if(b.apis.IS_NODE_ENV)throw Error("External data format is not yet supported in Node.js");let i=`${r}${f}.onnx_data`,a=`${s.subfolder??""}/${i}`;v.push(new Promise(async(r,n)=>{r({path:i,data:await (0,u.getModelFile)(t,a,!0,s)})}))}else void 0!==_.externalData&&(v=_.externalData.map(async r=>{if("string"==typeof r.data){let i=await (0,u.getModelFile)(t,r.data,!0,s);return{...r,data:i}}return r}));if(v.length>0&&(_.externalData=await Promise.all(v)),"webgpu"===d){let t=(0,i.getKeyValueShapes)(s.config,{prefix:"present"});if(Object.keys(t).length>0&&!(0,a.isONNXProxy)()){let r={};for(let s in t)r[s]="gpu-buffer";_.preferredOutputLocation=r}}return{buffer:await w,session_options:_,session_config:{dtype:h,kv_cache_dtype:m}}}async function $(t,r,s){return Object.fromEntries(await Promise.all(Object.keys(r).map(async i=>{let{buffer:n,session_options:o,session_config:l}=await k(t,r[i],s);return[i,await (0,a.createInferenceSession)(n,o,l)]})))}async function C(t,r,s){return Object.fromEntries(await Promise.all(Object.keys(r).map(async i=>{let a=await (0,u.getModelJSON)(t,r[i],!1,s);return[i,a]})))}async function S(t,r){let s=function(t,r){let s=Object.create(null),i=[];for(let n of t.inputNames){let t=r[n];if(!(t instanceof h.Tensor)){i.push(n);continue}s[n]=(0,a.isONNXProxy)()?t.clone():t}if(i.length>0)throw Error(`An error occurred during model execution: "Missing the following inputs: ${i.join(", ")}.`);let n=Object.keys(r).length,o=t.inputNames.length;if(n>o){let s=Object.keys(r).filter(r=>!t.inputNames.includes(r));console.warn(`WARNING: Too many inputs were provided (${n} > ${o}). The following inputs will be ignored: "${s.join(", ")}".`)}return s}(t,r);try{let r=Object.fromEntries(Object.entries(s).map(([t,r])=>[t,r.ort_tensor])),i=await t.run(r);return i=function t(r){for(let s in r)(0,a.isONNXTensor)(r[s])?r[s]=new h.Tensor(r[s]):"object"==typeof r[s]&&t(r[s]);return r}(i)}catch(r){let t=Object.fromEntries(Object.entries(s).map(([t,{type:r,dims:s,data:i}])=>[t,{type:r,dims:s,data:i}]));throw console.error(`An error occurred during model execution: "${r}".`),console.error("Inputs given to model:",t),r}}function P(t){if(t instanceof h.Tensor)return t;if(0===t.length)throw Error("items must be non-empty");if(!Array.isArray(t[0]))return new h.Tensor("int64",BigInt64Array.from(t.map(t=>BigInt(t))),[1,t.length]);if(t.some(r=>r.length!==t[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new h.Tensor("int64",BigInt64Array.from(t.flat().map(t=>BigInt(t))),[t.length,t[0].length])}function E(t){return new h.Tensor("bool",[t],[1])}async function I(t,r){let{encoder_outputs:s,input_ids:i,decoder_input_ids:a,...n}=r;if(!s){let i=(0,l.pick)(r,t.sessions.model.inputNames);s=(await A(t,i)).last_hidden_state}return n.input_ids=a,n.encoder_hidden_states=s,t.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(n.encoder_attention_mask=r.attention_mask),await F(t,n,!0)}async function A(t,r){let s=t.sessions.model,i=(0,l.pick)(r,s.inputNames);if(s.inputNames.includes("inputs_embeds")&&!i.inputs_embeds){if(!r.input_ids)throw Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");i.inputs_embeds=await t.encode_text({input_ids:r.input_ids})}if(s.inputNames.includes("token_type_ids")&&!i.token_type_ids){if(!i.input_ids)throw Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");i.token_type_ids=(0,h.zeros_like)(i.input_ids)}if(s.inputNames.includes("pixel_mask")&&!i.pixel_mask){if(!i.pixel_values)throw Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");let t=i.pixel_values.dims;i.pixel_mask=(0,h.ones)([t[0],t[2],t[3]])}return await S(s,i)}async function F(t,r,s=!1){let i=t.sessions[s?"decoder_model_merged":"model"],{past_key_values:a,...n}=r;if(i.inputNames.includes("use_cache_branch")&&(n.use_cache_branch=E(!!a)),i.inputNames.includes("position_ids")&&n.attention_mask&&!n.position_ids){let r="paligemma"===t.config.model_type?1:0;n.position_ids=function(t,r=null,s=0){let{input_ids:i,inputs_embeds:a,attention_mask:n}=t,{data:o,dims:l}=L(n,s),u=new h.Tensor("int64",o,l);if(r){let t=-(i??a).dims.at(1);u=u.slice(null,[t,null])}return u}(n,a,r)}t.addPastKeyValues(n,a);let o=(0,l.pick)(n,i.inputNames);return await S(i,o)}function z({image_token_id:t,inputs_embeds:r,image_features:s,input_ids:i,attention_mask:a}){let n=i.tolist().map(r=>r.reduce((r,s,i)=>(s==t&&r.push(i),r),[])),o=n.reduce((t,r)=>t+r.length,0),l=s.dims[0];if(o!==l)throw Error(`Image features and image tokens do not match: tokens: ${o}, features ${l}`);let u=0;for(let t=0;t<n.length;++t){let i=n[t],a=r[t];for(let t=0;t<i.length;++t)a[i[t]].data.set(s[u++].data)}return{inputs_embeds:r,attention_mask:a}}async function O(t,{input_ids:r=null,attention_mask:s=null,pixel_values:i=null,position_ids:a=null,inputs_embeds:n=null,past_key_values:o=null,generation_config:l=null,logits_processor:u=null,...d}){if(!n){if(n=await t.encode_text({input_ids:r,...d}),i&&1!==r.dims[1]){let a=await t.encode_image({pixel_values:i,...d});({inputs_embeds:n,attention_mask:s}=t._merge_input_ids_with_image_features({image_features:a,inputs_embeds:n,input_ids:r,attention_mask:s}))}else if(o&&i&&1===r.dims[1]){let t=r.dims[1],i=Object.values(o)[0].dims.at(-2);s=(0,h.cat)([(0,h.ones)([r.dims[0],i]),s.slice(null,[s.dims[1]-t,s.dims[1]])],1)}}if(!a&&"qwen2_vl"===t.config.model_type){let{image_grid_thw:i,video_grid_thw:n}=d;[a]=t.get_rope_index(r,i,n,s)}return await F(t,{inputs_embeds:n,past_key_values:o,attention_mask:s,position_ids:a,generation_config:l,logits_processor:u},!0)}function L(t,r=0){let[s,i]=t.dims,a=t.data,n=new BigInt64Array(a.length);for(let t=0;t<s;++t){let s=t*i,o=BigInt(r);for(let t=0;t<i;++t){let r=s+t;0n===a[r]?n[r]=BigInt(1):(n[r]=o,o+=a[r])}}return{data:n,dims:t.dims}}function B(t,r,s,i){if(s.past_key_values){let r=Object.values(s.past_key_values)[0].dims.at(-2),{input_ids:i,attention_mask:a}=s;if(a&&a.dims[1]>i.dims[1]);else if(r<i.dims[1])s.input_ids=i.slice(null,[r,null]);else if(null!=t.config.image_token_index&&i.data.some(r=>r==t.config.image_token_index)){let a=t.config.num_image_tokens;if(!a)throw Error("`num_image_tokens` is missing in the model configuration.");let n=i.dims[1]-(r-a);s.input_ids=i.slice(null,[-n,null]),s.attention_mask=(0,h.ones)([1,r+n])}}return s}function N(t,r,s,i){return s.past_key_values&&(r=r.map(t=>[t.at(-1)])),{...s,decoder_input_ids:P(r)}}function D(t,...r){return t.config.is_encoder_decoder?N(t,...r):B(t,...r)}function R(t,r,s,i){let a=!!s.past_key_values;return null!==i.guidance_scale&&i.guidance_scale>1&&(a?s.input_ids=(0,h.cat)([s.input_ids,s.input_ids],0):(s.input_ids=(0,h.cat)([s.input_ids,(0,h.full_like)(s.input_ids,BigInt(i.pad_token_id))],0),s.attention_mask=(0,h.cat)([s.attention_mask,(0,h.full_like)(s.attention_mask,0n)],0))),(a||!s.pixel_values)&&(s.pixel_values=(0,h.full)([0,0,3,384,384],1)),a&&(s.images_seq_mask=new h.Tensor("bool",[,].fill(!0).fill(!1,0,1),[1,1]),s.images_emb_mask=new h.Tensor("bool",[].fill(!1),[1,1,0])),s}class j extends o.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(t,r,s){super(),this.config=t,this.sessions=r,this.configs=s;let i=T.get(this.constructor),a=v.get(i);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,a){case x.DecoderOnly:this.can_generate=!0,this._forward=F,this._prepare_inputs_for_generation=B;break;case x.Seq2Seq:case x.Vision2Seq:case x.Musicgen:this.can_generate=!0,this._forward=I,this._prepare_inputs_for_generation=N;break;case x.EncoderDecoder:this._forward=I;break;case x.ImageTextToText:this.can_generate=!0,this._forward=O,this._prepare_inputs_for_generation=D;break;case x.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=D;break;case x.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=R;break;default:this._forward=A}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){let t=[];for(let r of Object.values(this.sessions))r?.handler?.dispose&&t.push(r.handler.dispose());return await Promise.all(t)}static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:a=null,local_files_only:n=!1,revision:o="main",model_file_name:l=null,subfolder:u="onnx",device:c=null,dtype:p=null,use_external_data_format:h=null,session_options:m={}}={}){let f,g={progress_callback:r,config:s,cache_dir:a,local_files_only:n,revision:o,model_file_name:l,subfolder:u,device:c,dtype:p,use_external_data_format:h,session_options:m},_=T.get(this),b=v.get(_);if(s=g.config=await i.AutoConfig.from_pretrained(t,g),b===x.DecoderOnly)f=await Promise.all([$(t,{model:g.model_file_name??"model"},g),C(t,{generation_config:"generation_config.json"},g)]);else if(b===x.Seq2Seq||b===x.Vision2Seq)f=await Promise.all([$(t,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},g),C(t,{generation_config:"generation_config.json"},g)]);else if(b===x.MaskGeneration)f=await Promise.all([$(t,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},g)]);else if(b===x.EncoderDecoder)f=await Promise.all([$(t,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},g)]);else if(b===x.ImageTextToText){let r={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};s.is_encoder_decoder&&(r.model="encoder_model"),f=await Promise.all([$(t,r,g),C(t,{generation_config:"generation_config.json"},g)])}else if(b===x.Musicgen)f=await Promise.all([$(t,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},g),C(t,{generation_config:"generation_config.json"},g)]);else if(b===x.MultiModality)f=await Promise.all([$(t,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},g),C(t,{generation_config:"generation_config.json"},g)]);else if(b===x.Phi3V)f=await Promise.all([$(t,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},g),C(t,{generation_config:"generation_config.json"},g)]);else{if(b!==x.EncoderOnly){let t=_??s?.model_type;"custom"!==t&&console.warn(`Model type for '${t}' not found, assuming encoder-only architecture. Please report this at ${d.GITHUB_ISSUE_URL}.`)}f=await Promise.all([$(t,{model:g.model_file_name??"model"},g)])}return new this(s,...f)}async _call(t){return await this.forward(t)}async forward(t){return await this._forward(this,t)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(t){let r=new c.LogitsProcessorList;return null!==t.temperature&&1!==t.temperature&&r.push(new c.TemperatureLogitsWarper(t.temperature)),null!==t.top_k&&0!==t.top_k&&r.push(new c.TopKLogitsWarper(t.top_k)),null!==t.top_p&&t.top_p<1&&r.push(new c.TopPLogitsWarper(t.top_p)),r}_get_logits_processor(t,r,s=null){let i=new c.LogitsProcessorList;if(null!==t.repetition_penalty&&1!==t.repetition_penalty&&i.push(new c.RepetitionPenaltyLogitsProcessor(t.repetition_penalty)),null!==t.no_repeat_ngram_size&&t.no_repeat_ngram_size>0&&i.push(new c.NoRepeatNGramLogitsProcessor(t.no_repeat_ngram_size)),null!==t.bad_words_ids&&i.push(new c.NoBadWordsLogitsProcessor(t.bad_words_ids,t.eos_token_id)),null!==t.min_length&&null!==t.eos_token_id&&t.min_length>0&&i.push(new c.MinLengthLogitsProcessor(t.min_length,t.eos_token_id)),null!==t.min_new_tokens&&null!==t.eos_token_id&&t.min_new_tokens>0&&i.push(new c.MinNewTokensLengthLogitsProcessor(r,t.min_new_tokens,t.eos_token_id)),null!==t.forced_bos_token_id&&i.push(new c.ForcedBOSTokenLogitsProcessor(t.forced_bos_token_id)),null!==t.forced_eos_token_id&&i.push(new c.ForcedEOSTokenLogitsProcessor(t.max_length,t.forced_eos_token_id)),null!==t.begin_suppress_tokens){let s=r>1||null===t.forced_bos_token_id?r:r+1;i.push(new c.SuppressTokensAtBeginLogitsProcessor(t.begin_suppress_tokens,s))}return null!==t.guidance_scale&&t.guidance_scale>1&&i.push(new c.ClassifierFreeGuidanceLogitsProcessor(t.guidance_scale)),null!==s&&i.extend(s),i}_prepare_generation_config(t,r,s=p.GenerationConfig){let i={...this.config};for(let t of["decoder","generator","text_config"])t in i&&Object.assign(i,i[t]);let a=new s(i);return Object.assign(a,this.generation_config??{}),t&&Object.assign(a,t),r&&Object.assign(a,(0,l.pick)(r,Object.getOwnPropertyNames(a))),a}_get_stopping_criteria(t,r=null){let s=new g.StoppingCriteriaList;return null!==t.max_length&&s.push(new g.MaxLengthCriteria(t.max_length,this.config.max_position_embeddings??null)),null!==t.eos_token_id&&s.push(new g.EosTokenCriteria(t.eos_token_id)),r&&s.extend(r),s}_validate_model_class(){if(!this.can_generate){let t=T.get(this.constructor),r=new Set,s=this.config.model_type;for(let t of[oi,ol,os,n9]){let i=t.get(s);i&&r.add(i[0])}let i=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw r.size>0&&(i+=` Please use the following class instead: ${[...r].join(", ")}`),Error(i)}}prepare_inputs_for_generation(...t){return this._prepare_inputs_for_generation(this,...t)}_update_model_kwargs_for_generation({generated_input_ids:t,outputs:r,model_inputs:s,is_encoder_decoder:i}){return s.past_key_values=this.getPastKeyValues(r,s.past_key_values),s.input_ids=new h.Tensor("int64",t.flat(),[t.length,1]),i||(s.attention_mask=(0,h.cat)([s.attention_mask,(0,h.ones)([s.attention_mask.dims[0],1])],1)),s.position_ids=null,s}_prepare_model_inputs({inputs:t,bos_token_id:r,model_kwargs:s}){let i=(0,l.pick)(s,this.forward_params),a=this.main_input_name;if(a in i){if(t)throw Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else i[a]=t;return{inputs_tensor:i[a],model_inputs:i,model_input_name:a}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:t,model_inputs:r,model_input_name:s,generation_config:i}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!r.inputs_embeds&&"_prepare_inputs_embeds"in this){let{input_ids:t,pixel_values:s,attention_mask:i,...a}=r,n=await this._prepare_inputs_embeds(r);r={...a,...(0,l.pick)(n,["inputs_embeds","attention_mask"])}}let{last_hidden_state:a}=await A(this,r);if(null!==i.guidance_scale&&i.guidance_scale>1)a=(0,h.cat)([a,(0,h.full_like)(a,0)],0),"attention_mask"in r&&(r.attention_mask=(0,h.cat)([r.attention_mask,(0,h.zeros_like)(r.attention_mask)],0));else if(r.decoder_input_ids){let t=P(r.decoder_input_ids).dims[0];if(t!==a.dims[0]){if(1!==a.dims[0])throw Error(`The encoder outputs have a different batch size (${a.dims[0]}) than the decoder inputs (${t}).`);a=(0,h.cat)(Array.from({length:t},()=>a),0)}}return r.encoder_outputs=a,r}_prepare_decoder_input_ids_for_generation({batch_size:t,model_input_name:r,model_kwargs:s,decoder_start_token_id:i,bos_token_id:a,generation_config:n}){let{decoder_input_ids:o,...l}=s;if(!(o instanceof h.Tensor)){if(o)Array.isArray(o[0])||(o=Array.from({length:t},()=>o));else if(i??=a,"musicgen"===this.config.model_type)o=Array.from({length:t*this.config.decoder.num_codebooks},()=>[i]);else if(Array.isArray(i)){if(i.length!==t)throw Error(`\`decoder_start_token_id\` expcted to have length ${t} but got ${i.length}`);o=i}else o=Array.from({length:t},()=>[i]);o=P(o)}return s.decoder_attention_mask=(0,h.ones_like)(o),{input_ids:o,model_inputs:l}}async generate({inputs:t=null,generation_config:r=null,logits_processor:s=null,stopping_criteria:i=null,streamer:a=null,...n}){let o,l;this._validate_model_class(),r=this._prepare_generation_config(r,n);let{inputs_tensor:u,model_inputs:d,model_input_name:c}=this._prepare_model_inputs({inputs:t,model_kwargs:n}),p=this.config.is_encoder_decoder;p&&("encoder_outputs"in d||(d=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:u,model_inputs:d,model_input_name:c,generation_config:r}))),p?{input_ids:o,model_inputs:d}=this._prepare_decoder_input_ids_for_generation({batch_size:d[c].dims.at(0),model_input_name:c,model_kwargs:d,decoder_start_token_id:r.decoder_start_token_id,bos_token_id:r.bos_token_id,generation_config:r}):o=d[c];let m=o.dims.at(-1);null!==r.max_new_tokens&&(r.max_length=m+r.max_new_tokens);let f=this._get_logits_processor(r,m,s),g=this._get_stopping_criteria(r,i),b=d[c].dims.at(0),y=_.LogitsSampler.getSampler(r),w=Array(b).fill(0),x=o.tolist();a&&a.put(x);let v={};for(;;){if(d=this.prepare_inputs_for_generation(x,d,r),l=await this.forward(d),r.output_attentions&&r.return_dict_in_generate){let t=this.getAttentions(l);for(let r in t)r in v||(v[r]=[]),v[r].push(t[r])}let t=f(x,l.logits.slice(null,-1,null)),s=[];for(let r=0;r<t.dims.at(0);++r){let i=t[r];for(let[t,a]of(await y(i))){let i=BigInt(t);w[r]+=a,x[r].push(i),s.push([i]);break}}if(a&&a.put(s),g(x).every(t=>t))break;d=this._update_model_kwargs_for_generation({generated_input_ids:s,outputs:l,model_inputs:d,is_encoder_decoder:p})}a&&a.end();let M=this.getPastKeyValues(l,d.past_key_values,!0),T=new h.Tensor("int64",x.flat(),[x.length,x[0].length]);if(r.return_dict_in_generate)return{sequences:T,past_key_values:M,...v};for(let t of Object.values(l))"gpu-buffer"===t.location&&t.dispose();return T}getPastKeyValues(t,r,s=!1){let i=Object.create(null);for(let a in t)if(a.startsWith("present")){let n=a.replace("present","past_key_values"),o=a.includes("encoder");if(o&&r?i[n]=r[n]:i[n]=t[a],r&&(!o||s)){let t=r[n];"gpu-buffer"===t.location&&t.dispose()}}return i}getAttentions(t){let r={};for(let s of["cross_attentions","encoder_attentions","decoder_attentions"])for(let i in t)i.startsWith(s)&&(s in r||(r[s]=[]),r[s].push(t[i]));return r}addPastKeyValues(t,r){if(r)Object.assign(t,r);else{let r=this.sessions.decoder_model_merged??this.sessions.model,s=r?.config?.kv_cache_dtype??"float32",a="float16"===s?new Uint16Array:[],n=(t[this.main_input_name]??t.attention_mask)?.dims?.[0]??1,o=(0,i.getKeyValueShapes)(this.config,{batch_size:n});for(let r in o)t[r]=new h.Tensor(s,a,o[r])}}async encode_image({pixel_values:t}){let r=(await S(this.sessions.vision_encoder,{pixel_values:t})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${r.dims[1]}).`),this.config.num_image_tokens=r.dims[1]),r}async encode_text({input_ids:t}){return(await S(this.sessions.embed_tokens,{input_ids:t})).inputs_embeds}}class V{}class G extends V{constructor({last_hidden_state:t,hidden_states:r=null,attentions:s=null}){super(),this.last_hidden_state=t,this.hidden_states=r,this.attentions=s}}class U extends j{}class q extends U{}class W extends U{async _call(t){return new o7(await super._call(t))}}class H extends U{async _call(t){return new o8(await super._call(t))}}class K extends U{async _call(t){return new o9(await super._call(t))}}class Q extends U{async _call(t){return new le(await super._call(t))}}class X extends j{}class J extends X{}class Y extends X{async _call(t){return new o7(await super._call(t))}}class Z extends X{async _call(t){return new o8(await super._call(t))}}class ee extends X{async _call(t){return new o9(await super._call(t))}}class et extends j{}class er extends et{}class es extends j{}class ei extends es{}class ea extends es{async _call(t){return new o7(await super._call(t))}}class en extends es{async _call(t){return new o8(await super._call(t))}}class eo extends es{async _call(t){return new o9(await super._call(t))}}class el extends es{async _call(t){return new le(await super._call(t))}}class eu extends j{}class ed extends eu{}class ec extends eu{async _call(t){return new o7(await super._call(t))}}class ep extends eu{async _call(t){return new o8(await super._call(t))}}class eh extends eu{async _call(t){return new o9(await super._call(t))}}class em extends eu{async _call(t){return new le(await super._call(t))}}class ef extends j{}class eg extends ef{}class e_ extends ef{async _call(t){return new o7(await super._call(t))}}class eb extends ef{async _call(t){return new o8(await super._call(t))}}class ey extends ef{async _call(t){return new o9(await super._call(t))}}class ew extends ef{async _call(t){return new le(await super._call(t))}}class ex extends j{}class ev extends ex{}class eM extends ex{async _call(t){return new o7(await super._call(t))}}class eT extends ex{async _call(t){return new o8(await super._call(t))}}class ek extends ex{async _call(t){return new o9(await super._call(t))}}class e$ extends ex{async _call(t){return new le(await super._call(t))}}class eC extends j{}class eS extends eC{}class eP extends eC{async _call(t){return new o7(await super._call(t))}}class eE extends eC{async _call(t){return new o8(await super._call(t))}}class eI extends eC{async _call(t){return new o9(await super._call(t))}}class eA extends eC{async _call(t){return new le(await super._call(t))}}class eF extends j{}class ez extends eF{}class eO extends eF{async _call(t){return new o7(await super._call(t))}}class eL extends eF{async _call(t){return new o8(await super._call(t))}}class eB extends eF{async _call(t){return new o9(await super._call(t))}}class eN extends eF{async _call(t){return new le(await super._call(t))}}class eD extends j{}class eR extends eD{}class ej extends eD{async _call(t){return new o8(await super._call(t))}}class eV extends eD{async _call(t){return new o9(await super._call(t))}}class eG extends eD{async _call(t){return new le(await super._call(t))}}class eU extends eD{async _call(t){return new o7(await super._call(t))}}class eq extends j{}class eW extends eq{}class eH extends eq{async _call(t){return new o7(await super._call(t))}}class eK extends eq{async _call(t){return new o8(await super._call(t))}}class eQ extends eq{async _call(t){return new o9(await super._call(t))}}class eX extends j{}class eJ extends eX{}class eY extends eX{async _call(t){return new o7(await super._call(t))}}class eZ extends eX{async _call(t){return new o8(await super._call(t))}}class e0 extends eX{async _call(t){return new le(await super._call(t))}}class e1 extends j{}class e2 extends e1{}class e3 extends e1{async _call(t){return new o7(await super._call(t))}}class e4 extends e1{async _call(t){return new o8(await super._call(t))}}class e6 extends e1{async _call(t){return new o9(await super._call(t))}}class e8 extends e1{async _call(t){return new le(await super._call(t))}}class e5 extends j{}class e9 extends e5{}class e7 extends e5{async _call(t){return new o7(await super._call(t))}}class te extends e5{async _call(t){return new o8(await super._call(t))}}class tt extends e5{async _call(t){return new le(await super._call(t))}}class tr extends j{}class ts extends tr{}class ti extends tr{async _call(t){return new o8(await super._call(t))}}class ta extends tr{async _call(t){return new le(await super._call(t))}}class tn extends tr{async _call(t){return new o7(await super._call(t))}}class to extends j{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class tl extends to{}class tu extends to{}class td extends j{}class tc extends td{}class tp extends td{}class th extends j{}class tm extends th{}class tf extends th{}class tg extends j{}class t_ extends tg{}class tb extends tg{}class ty extends tg{async _call(t){return new o8(await super._call(t))}}class tw extends j{}class tx extends tw{}class tv extends tw{}class tM extends tw{async _call(t){return new o8(await super._call(t))}}class tT extends tw{}class tk extends j{}class t$ extends tk{}class tC extends tk{}class tS extends j{}class tP extends tS{}class tE extends tS{}class tI extends j{}class tA extends tI{}class tF extends tI{async _call(t){return new o7(await super._call(t))}}class tz extends tI{async _call(t){return new o8(await super._call(t))}}class tO extends tI{async _call(t){return new o9(await super._call(t))}}class tL extends tI{async _call(t){return new le(await super._call(t))}}class tB extends j{}class tN extends tB{}class tD extends tB{async _call(t){return new o7(await super._call(t))}}class tR extends tB{async _call(t){return new o8(await super._call(t))}}class tj extends tB{async _call(t){return new o9(await super._call(t))}}class tV extends tB{async _call(t){return new le(await super._call(t))}}class tG extends j{}class tU extends tG{}class tq extends tG{async _call(t){return new o7(await super._call(t))}}class tW extends tG{async _call(t){return new o8(await super._call(t))}}class tH extends tG{async _call(t){return new o9(await super._call(t))}}class tK extends tG{async _call(t){return new le(await super._call(t))}}class tQ extends j{}class tX extends tQ{}class tJ extends tQ{}class tY extends j{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class tZ extends tY{}class t0 extends tY{_prepare_generation_config(t,r){return super._prepare_generation_config(t,r,y.WhisperGenerationConfig)}_retrieve_init_tokens(t){let r=[t.decoder_start_token_id],s=t.language,i=t.task;if(t.is_multilingual){s||(console.warn("No language specified - defaulting to English (en)."),s="en");let a=(0,w.whisper_language_to_code)(s),n=`<|${a}|>`;r.push(t.lang_to_id[n]),r.push(t.task_to_id[i??"transcribe"])}else if(s||i)throw Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!t.return_timestamps&&t.no_timestamps_token_id&&r.at(-1)!==t.no_timestamps_token_id?r.push(t.no_timestamps_token_id):t.return_timestamps&&r.at(-1)===t.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),r.pop()),r.filter(t=>null!=t)}async generate({inputs:t=null,generation_config:r=null,logits_processor:s=null,stopping_criteria:i=null,...a}){r=this._prepare_generation_config(r,a);let n=a.decoder_input_ids??this._retrieve_init_tokens(r);if(r.return_timestamps&&(s??=new c.LogitsProcessorList).push(new c.WhisperTimeStampLogitsProcessor(r,n)),r.begin_suppress_tokens&&(s??=new c.LogitsProcessorList).push(new c.SuppressTokensAtBeginLogitsProcessor(r.begin_suppress_tokens,n.length)),r.return_token_timestamps){if(!r.alignment_heads)throw Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===r.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),r.output_attentions=!0,r.return_dict_in_generate=!0}let o=await super.generate({inputs:t,generation_config:r,logits_processor:s,decoder_input_ids:n,...a});return r.return_token_timestamps&&(o.token_timestamps=this._extract_token_timestamps(o,r.alignment_heads,r.num_frames)),o}_extract_token_timestamps(t,r,s=null,i=.02){if(!t.cross_attentions)throw Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==s&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let a=this.config.median_filter_width;void 0===a&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),a=7);let n=t.cross_attentions,o=Array.from({length:this.config.decoder_layers},(t,r)=>(0,h.cat)(n.map(t=>t[r]),2)),u=(0,h.stack)(r.map(([t,r])=>{if(t>=o.length)throw Error(`Layer index ${t} is out of bounds for cross attentions (length ${o.length}).`);return s?o[t].slice(null,r,null,[0,s]):o[t].slice(null,r)})).transpose(1,0,2,3),[d,c]=(0,h.std_mean)(u,-2,0,!0),p=u.clone();for(let t=0;t<p.dims[0];++t){let r=p[t];for(let s=0;s<r.dims[0];++s){let i=r[s],n=d[t][s][0].data,o=c[t][s][0].data;for(let t=0;t<i.dims[0];++t){let r=i[t].data;for(let t=0;t<r.length;++t)r[t]=(r[t]-o[t])/n[t];r.set((0,f.medianFilter)(r,a))}}}let m=[(0,h.mean)(p,1)],g=t.sequences.dims,_=new h.Tensor("float32",new Float32Array(g[0]*g[1]),g);for(let t=0;t<g[0];++t){let r=m[t].neg().squeeze_(0),[s,a]=(0,f.dynamic_time_warping)(r.tolist()),n=Array.from({length:s.length-1},(t,r)=>s[r+1]-s[r]),o=(0,l.mergeArrays)([1],n).map(t=>!!t),u=[];for(let t=0;t<o.length;++t)o[t]&&u.push(a[t]*i);_[t].data.set(u,1)}return _}}class t1 extends j{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class t2 extends t1{}class t3 extends t1{}class t4 extends j{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class t6 extends j{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class t8 extends t6{_merge_input_ids_with_image_features({inputs_embeds:t,image_features:r,input_ids:s,attention_mask:i}){let a=this.config.image_token_index,n=s.tolist().map(t=>t.findIndex(t=>t==a)),o=n.every(t=>-1===t),l=n.every(t=>-1!==t);if(!o&&!l)throw Error("Every input should contain either 0 or 1 image token.");if(o)return{inputs_embeds:t,attention_mask:i};let u=[],d=[];for(let s=0;s<n.length;++s){let a=n[s],o=t[s],l=r[s],c=i[s];u.push((0,h.cat)([o.slice([0,a]),l,o.slice([a+1,o.dims[0]])],0)),d.push((0,h.cat)([c.slice([0,a]),(0,h.ones)([l.dims[0]]),c.slice([a+1,c.dims[0]])],0))}return{inputs_embeds:(0,h.stack)(u,0),attention_mask:(0,h.stack)(d,0)}}}class t5 extends t8{}class t9 extends t8{}class t7 extends j{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class re extends t7{_merge_input_ids_with_image_features({inputs_embeds:t,image_features:r,input_ids:s,attention_mask:i}){return{inputs_embeds:(0,h.cat)([r,t],1),attention_mask:(0,h.cat)([(0,h.ones)(r.dims.slice(0,2)),i],1)}}async _prepare_inputs_embeds({input_ids:t,pixel_values:r,inputs_embeds:s,attention_mask:i}){let a,n;if(!t&&!r)throw Error("Either `input_ids` or `pixel_values` should be provided.");return t&&(a=await this.encode_text({input_ids:t})),r&&(n=await this.encode_image({pixel_values:r})),a&&n?{inputs_embeds:s,attention_mask:i}=this._merge_input_ids_with_image_features({inputs_embeds:a,image_features:n,input_ids:t,attention_mask:i}):s=a||n,{inputs_embeds:s,attention_mask:i}}async forward({input_ids:t,pixel_values:r,attention_mask:s,decoder_input_ids:i,decoder_attention_mask:a,encoder_outputs:n,past_key_values:o,inputs_embeds:l,decoder_inputs_embeds:u}){if(l||({inputs_embeds:l,attention_mask:s}=await this._prepare_inputs_embeds({input_ids:t,pixel_values:r,inputs_embeds:l,attention_mask:s})),!n){let{last_hidden_state:t}=await A(this,{inputs_embeds:l,attention_mask:s});n=t}if(!u){if(!i)throw Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");u=await this.encode_text({input_ids:i})}let d={inputs_embeds:u,attention_mask:a,encoder_attention_mask:s,encoder_hidden_states:n,past_key_values:o};return await F(this,d,!0)}}class rt extends j{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class rr extends rt{_merge_input_ids_with_image_features(t){let r=t.image_features.dims.at(-1),s=t.image_features.view(-1,r);return z({image_token_id:this.config.image_token_index,...t,image_features:s})}}class rs extends j{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class ri extends rs{async encode_image({pixel_values:t,pixel_attention_mask:r}){return(await S(this.sessions.vision_encoder,{pixel_values:t,pixel_attention_mask:r})).image_features}_merge_input_ids_with_image_features(t){let r=t.image_features.dims.at(-1),s=t.image_features.view(-1,r);return z({image_token_id:this.config.image_token_id,...t,image_features:s})}}class ra extends j{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class rn extends ra{async forward({input_ids:t=null,attention_mask:r=null,pixel_values:s=null,image_sizes:i=null,position_ids:a=null,inputs_embeds:n=null,past_key_values:o=null,generation_config:l=null,logits_processor:u=null,...d}){if(!n){let r;if(s&&1!==t.dims[1]){if(!i)throw Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:r}=await S(this.sessions.vision_encoder,{pixel_values:s,image_sizes:i}))}else{let t=this.config.normalized_config.hidden_size;r=new h.Tensor("float32",[],[0,t])}({inputs_embeds:n}=await S(this.sessions.prepare_inputs_embeds,{input_ids:t,image_features:r}))}return await F(this,{inputs_embeds:n,past_key_values:o,attention_mask:r,position_ids:a,generation_config:l,logits_processor:u},!1)}}class ro extends j{}class rl extends ro{}class ru extends ro{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}}class rd extends ro{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}}class rc extends ro{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}class rp extends ro{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}class rh extends j{}class rm extends rh{}class rf extends rh{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}}class rg extends ro{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}class r_ extends j{}class rb extends r_{}class ry extends j{}class rw extends ry{async forward(t){let r=!t.input_ids,s=!t.pixel_values;if(r&&s)throw Error("Either `input_ids` or `pixel_values` should be provided.");if(r&&(t.input_ids=(0,h.ones)([t.pixel_values.dims[0],1])),s){let{image_size:r}=this.config.vision_config;t.pixel_values=(0,h.full)([0,3,r,r],0)}let{text_embeddings:i,image_embeddings:a,l2norm_text_embeddings:n,l2norm_image_embeddings:o}=await super.forward(t),l={};return r||(l.text_embeddings=i,l.l2norm_text_embeddings=n),s||(l.image_embeddings=a,l.l2norm_image_embeddings=o),l}}class rx extends ry{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}}class rv extends ry{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}class rM extends j{}class rT extends rM{}class rk extends rM{}class r$ extends j{}class rC extends r${}class rS extends r${}class rP extends j{}class rE extends rP{}class rI extends rP{}class rA extends j{}class rF extends rA{}class rz extends rA{}class rO extends j{}class rL extends rO{}class rB extends rO{}class rN extends j{}class rD extends rN{}class rR extends rN{}class rj extends j{}class rV extends rj{}class rG extends rj{}class rU extends j{}class rq extends rU{}class rW extends rU{}class rH extends j{}class rK extends rH{}class rQ extends rH{}class rX extends j{}class rJ extends rX{}class rY extends rX{}class rZ extends j{}class r0 extends rZ{}class r1 extends rZ{}class r2 extends j{}class r3 extends r2{}class r4 extends r2{}class r6 extends j{}class r8 extends r6{}class r5 extends r6{}class r9 extends j{}class r7 extends r9{}class se extends r9{}class st extends j{}class sr extends st{}class ss extends st{}class si extends j{}class sa extends si{}class sn extends si{}class so extends j{}class sl extends so{}class su extends so{}class sd extends j{}class sc extends sd{}class sp extends sd{}class sh extends j{}class sm extends sh{}class sf extends sh{}class sg extends j{}class s_ extends sg{}class sb extends sg{}class sy extends j{}class sw extends sy{}class sx extends sy{}class sv extends j{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class sM extends sv{get_rope_index(t,r,s,i){let{vision_config:a,image_token_id:n,video_token_id:o,vision_start_token_id:l}=this.config,u=a.spatial_merge_size??2,d=[];if(r||s){let a=t.tolist();i||(i=(0,h.ones_like)(t));let c=i.tolist(),p=Array.from({length:3},r=>Array.from({length:t.dims[0]},r=>Array.from({length:t.dims[1]},t=>1))),m=r?r.tolist():[],g=s?s.tolist():[],_=0,b=0;for(let t=0;t<a.length;++t){let r=a[t].filter((r,s)=>1==c[t][s]),s=r.reduce((t,r,s)=>(r==l&&t.push(s),t),[]).map(t=>r[t+1]),i=s.filter(t=>t==n).length,h=s.filter(t=>t==o).length,y=[],w=0,x=i,v=h;for(let t=0;t<s.length;++t){let t,s,i,a;let l=r.findIndex((t,r)=>r>w&&t==n),d=r.findIndex((t,r)=>r>w&&t==o),c=x>0&&-1!==l?l:r.length+1,p=v>0&&-1!==d?d:r.length+1;c<p?([s,i,a]=m[_],++_,--x,t=c):([s,i,a]=g[b],++b,--v,t=p);let[h,M,T]=[Number(s),Math.floor(Number(i)/u),Math.floor(Number(a)/u)],k=t-w,$=y.length>0?(0,f.max)(y.at(-1))[0]+1:0;y.push(Array.from({length:3*k},(t,r)=>$+r%k));let C=k+$,S=h*M*T,P=Array.from({length:S},(t,r)=>C+Math.floor(r/(M*T))),E=Array.from({length:S},(t,r)=>C+Math.floor(r/T)%M),I=Array.from({length:S},(t,r)=>C+r%T);y.push([P,E,I].flat()),w=t+S}if(w<r.length){let t=y.length>0?(0,f.max)(y.at(-1))[0]+1:0,s=r.length-w;y.push(Array.from({length:3*s},(r,i)=>t+i%s))}let M=y.reduce((t,r)=>t+r.length,0),T=Array(M),k=0;for(let t=0;t<3;++t)for(let r=0;r<y.length;++r){let s=y[r],i=s.length/3;for(let r=t*i;r<(t+1)*i;++r)T[k++]=s[r]}let $=0,C=c[t];for(let r=0;r<C.length;++r)if(1==C[r]){for(let s=0;s<3;++s)p[s][t][r]=T[s*M/3+$];++$}let S=(0,f.max)(T)[0];d.push(S+1-a[t].length)}return[new h.Tensor("int64",p.flat(1/0),[3,t.dims[0],t.dims[1]]),new h.Tensor("int64",d,[d.length,1])]}if(i){let{data:t,dims:r}=L(i),s=BigInt64Array.from({length:3*t.length},(r,s)=>t[s%t.length]),a=Array.from({length:r[0]},(s,i)=>(0,f.max)(t.subarray(r[1]*i,r[1]*(i+1)))[0]+1n+BigInt(r[1]));return[new h.Tensor("int64",s,[3,...r]),new h.Tensor("int64",a,[a.length,1])]}{let[r,s]=t.dims,i=BigInt64Array.from({length:3*r*s},(t,i)=>BigInt(Math.floor(i%s/r)));return[new h.Tensor("int64",i,[3,...t.dims]),(0,h.zeros)([r,1])]}}async encode_image({pixel_values:t,image_grid_thw:r}){return(await S(this.sessions.vision_encoder,{pixel_values:t,grid_thw:r})).image_features}_merge_input_ids_with_image_features(t){return z({image_token_id:this.config.image_token_id,...t})}prepare_inputs_for_generation(t,r,s){if(r.attention_mask&&!r.position_ids){if(r.past_key_values){r.pixel_values=null;let t=BigInt(Object.values(r.past_key_values)[0].dims.at(-2)),s=r.rope_deltas.map(r=>t+r);r.position_ids=(0,h.stack)([s,s,s],0)}else[r.position_ids,r.rope_deltas]=this.get_rope_index(r.input_ids,r.image_grid_thw,r.video_grid_thw,r.attention_mask)}return r}}class sT extends j{}class sk extends sT{}class s$ extends sT{}class sC extends j{}class sS extends sC{}class sP extends sC{}class sE extends j{}class sI extends sE{}class sA extends sE{}class sF extends j{}class sz extends sF{}class sO extends sF{}class sL extends j{}class sB extends sL{}class sN extends sL{}class sD extends j{}class sR extends sD{}class sj extends sD{async _call(t){return new o8(await super._call(t))}}class sV extends j{}class sG extends sV{}class sU extends sV{async _call(t){return new o8(await super._call(t))}}class sq extends j{}class sW extends sq{}class sH extends j{}class sK extends sH{}class sQ extends sH{async _call(t){return new o8(await super._call(t))}}class sX extends j{}class sJ extends sX{}class sY extends j{}class sZ extends sY{}class s0 extends sY{async _call(t){return new o8(await super._call(t))}}class s1 extends j{}class s2 extends s1{}class s3 extends j{}class s4 extends s3{}class s6 extends s3{async _call(t){return new o8(await super._call(t))}}class s8 extends j{}class s5 extends s8{async _call(t){return new ls(await super._call(t))}}class s9 extends j{}class s7 extends s9{}class ie extends s9{async _call(t){return new o8(await super._call(t))}}class it extends j{}class ir extends it{}class is extends it{async _call(t){return new o8(await super._call(t))}}class ii extends j{}class ia extends ii{}class io extends ii{}class il extends j{}class iu extends il{}class id extends il{}class ic extends j{}class ip extends ic{}class ih extends ic{async _call(t){return new o8(await super._call(t))}}class im extends j{}class ig extends im{}class i_ extends im{async _call(t){return new iy(await super._call(t))}}class ib extends im{async _call(t){return new iw(await super._call(t))}}class iy extends V{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class iw extends V{constructor({logits:t,pred_boxes:r,pred_masks:s}){super(),this.logits=t,this.pred_boxes=r,this.pred_masks=s}}class ix extends j{}class iv extends ix{}class iM extends ix{async _call(t){return new iT(await super._call(t))}}class iT extends V{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class ik extends j{}class i$ extends ik{}class iC extends ik{async _call(t){return new iS(await super._call(t))}}class iS extends iy{}class iP extends j{}class iE extends iP{}class iI extends iP{async _call(t){return new o8(await super._call(t))}}class iA extends j{}class iF extends iA{}class iz extends iA{async _call(t){return new o8(await super._call(t))}}class iO extends j{}class iL extends iO{}class iB extends iO{async _call(t){return new o8(await super._call(t))}}class iN extends j{}class iD extends iN{}class iR extends iN{async _call(t){return new o8(await super._call(t))}}class ij extends j{}class iV extends ij{}class iG extends ij{}class iU extends j{}class iq extends iU{}class iW extends iU{}class iH extends j{}class iK extends iH{}class iQ extends j{}class iX extends iQ{}class iJ extends iQ{}class iY extends iQ{}class iZ extends j{}class i0 extends iZ{}class i1 extends j{}class i2 extends i1{}class i3 extends i1{}class i4 extends j{}class i6 extends i4{}class i8 extends i4{}class i5 extends j{}class i9 extends i5{}class i7 extends j{}class ae extends i7{}class at extends i7{async _call(t){return new o8(await super._call(t))}}class ar extends j{}class as extends ar{}class ai extends ar{async _call(t){return new o8(await super._call(t))}}class aa extends j{}class an extends aa{}class ao extends aa{async _call(t){return new o8(await super._call(t))}}class al extends j{}class au extends al{}class ad extends al{async _call(t){return new o8(await super._call(t))}}class ac extends j{}class ap extends ac{}class ah extends j{}class am extends ah{}class af extends ah{async _call(t){return new ag(await super._call(t))}}class ag extends V{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class a_ extends j{}class ab extends a_{async get_image_embeddings({pixel_values:t}){return await A(this,{pixel_values:t})}async forward(t){if(t.image_embeddings&&t.image_positional_embeddings||(t={...t,...await this.get_image_embeddings(t)}),!t.input_labels&&t.input_points){let r=t.input_points.dims.slice(0,-1),s=r.reduce((t,r)=>t*r,1);t.input_labels=new h.Tensor("int64",new BigInt64Array(s).fill(1n),r)}let r={image_embeddings:t.image_embeddings,image_positional_embeddings:t.image_positional_embeddings};return t.input_points&&(r.input_points=t.input_points),t.input_labels&&(r.input_labels=t.input_labels),t.input_boxes&&(r.input_boxes=t.input_boxes),await S(this.sessions.prompt_encoder_mask_decoder,r)}async _call(t){return new ay(await super._call(t))}}class ay extends V{constructor({iou_scores:t,pred_masks:r}){super(),this.iou_scores=t,this.pred_masks=r}}class aw extends j{}class ax extends aw{}class av extends aw{}class aM extends j{}class aT extends aM{}class ak extends aM{}class a$ extends j{}class aC extends a${}class aS extends a${async _call(t){return new lt(await super._call(t))}}class aP extends a${async _call(t){return new o8(await super._call(t))}}class aE extends a${async _call(t){return new o9(await super._call(t))}}class aI extends j{}class aA extends aI{}class aF extends aI{async _call(t){return new o9(await super._call(t))}}class az extends j{}class aO extends az{}class aL extends j{}class aB extends aL{}class aN extends aL{async _call(t){return new lt(await super._call(t))}}class aD extends aL{async _call(t){return new o8(await super._call(t))}}class aR extends j{}class aj extends aR{}class aV extends aR{async _call(t){return new lt(await super._call(t))}}class aG extends aR{async _call(t){return new o8(await super._call(t))}}class aU extends aR{async _call(t){return new o9(await super._call(t))}}class aq extends j{}class aW extends aq{}class aH extends aq{async _call(t){return new lt(await super._call(t))}}class aK extends aq{async _call(t){return new o8(await super._call(t))}}class aQ extends j{}class aX extends a${}class aJ extends a${async _call(t){return new lt(await super._call(t))}}class aY extends a${async _call(t){return new o8(await super._call(t))}}class aZ extends j{}class a0 extends aZ{}class a1 extends aZ{async _call(t){return new lt(await super._call(t))}}class a2 extends aZ{async _call(t){return new o8(await super._call(t))}}class a3 extends aZ{async _call(t){return new o5(await super._call(t))}}class a4 extends aZ{async _call(t){return new o9(await super._call(t))}}class a6 extends j{}class a8 extends a6{}class a5 extends j{}class a9 extends a5{}class a7 extends a5{}class ne extends a5{async generate_speech(t,r,{threshold:s=.5,minlenratio:i=0,maxlenratio:a=20,vocoder:n=null}={}){let{encoder_outputs:o,encoder_attention_mask:l}=await A(this,{input_ids:t}),u=o.dims[1]/this.config.reduction_factor,d=Math.floor(u*a),c=Math.floor(u*i),p=this.config.num_mel_bins,m=[],f=null,g=null,_=0;for(;;){++_;let t={use_cache_branch:E(!!g),output_sequence:g?g.output_sequence_out:new h.Tensor("float32",new Float32Array(p),[1,1,p]),encoder_attention_mask:l,speaker_embeddings:r,encoder_hidden_states:o};this.addPastKeyValues(t,f),g=await S(this.sessions.decoder_model_merged,t),f=this.getPastKeyValues(g,f);let{prob:i,spectrum:a}=g;if(m.push(a),_>=c&&(Array.from(i.data).filter(t=>t>=s).length>0||_>=d))break}let b=(0,h.cat)(m),{waveform:y}=await S(n.sessions.model,{spectrogram:b});return{spectrogram:b,waveform:y}}}class nt extends j{main_input_name="spectrogram"}class nr extends j{}class ns extends nr{}class ni extends j{}class na extends ni{}class nn extends ni{}class no extends j{}class nl extends no{}class nu extends no{}class nd extends j{}class nc extends nd{}class np extends nd{}class nh extends j{}class nm extends nh{}class nf extends nh{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}}class ng extends nh{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"audio_model"})}}class n_ extends j{}class nb extends n_{async _call(t){return new li(await super._call(t))}}class ny extends j{}class nw extends ny{}class nx extends ny{}class nv extends ny{}class nM extends j{}class nT extends nM{}class nk extends nM{}class n$ extends j{}class nC extends n${}class nS extends n${async _call(t){return new o8(await super._call(t))}}class nP extends j{}class nE extends nP{}class nI extends nP{}class nA extends j{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(t){let[r,s]=t.dims,i=this.config.decoder.num_codebooks,a=s-i,n=0;for(let r=0;r<t.size;++r){if(t.data[r]===this.config.decoder.pad_token_id)continue;let o=r%s-Math.floor(r/s)%i;o>0&&o<=a&&(t.data[n++]=t.data[r])}let o=Math.floor(r/i),l=n/(o*i);return new h.Tensor(t.type,t.data.slice(0,n),[o,i,l])}prepare_inputs_for_generation(t,r,s){let i=structuredClone(t);for(let t=0;t<i.length;++t)for(let r=0;r<i[t].length;++r)t%this.config.decoder.num_codebooks>=r&&(i[t][r]=BigInt(this.config.decoder.pad_token_id));return null!==s.guidance_scale&&s.guidance_scale>1&&(i=i.concat(i)),super.prepare_inputs_for_generation(i,r,s)}async generate(t){let r=await super.generate(t),s=this._apply_and_filter_by_delay_pattern_mask(r).unsqueeze_(0),{audio_values:i}=await S(this.sessions.encodec_decode,{audio_codes:s});return i}}class nF extends j{}class nz extends nF{}class nO extends nF{async _call(t){return new o8(await super._call(t))}}class nL extends j{}class nB extends nL{}class nN extends nL{async _call(t){return new o8(await super._call(t))}}class nD extends j{}class nR extends nD{}class nj extends nD{async _call(t){return new o8(await super._call(t))}}class nV extends j{}class nG extends nV{}class nU extends nV{async _call(t){return new o8(await super._call(t))}}class nq extends j{}class nW extends nq{}class nH extends j{}class nK extends nH{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...t){super(...t),this._generation_mode="text"}async forward(t){let r;let s=this._generation_mode??"text";if("text"!==s&&t.past_key_values){let s=this.sessions.gen_img_embeds,i=(0,l.pick)({image_ids:t.input_ids},s.inputNames);r=await S(s,i)}else{let s=this.sessions.prepare_inputs_embeds,i=(0,l.pick)(t,s.inputNames);r=await S(s,i)}let i={...t,...r},a=await F(this,i),n=this.sessions["text"===s?"lm_head":"gen_head"];if(!n)throw Error(`Unable to find "${n}" generation head`);let o=await S(n,(0,l.pick)(a,n.inputNames));return{...r,...a,...o}}async generate(t){return this._generation_mode="text",super.generate(t)}async generate_images(t){this._generation_mode="image";let r=(t.inputs??t[this.main_input_name]).dims[1],s=(await super.generate(t)).slice(null,[r,null]),i=this.sessions.image_decode,{decoded_image:a}=await S(i,{generated_tokens:s}),n=a.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),o=[];for(let t of n){let r=m.RawImage.fromTensor(t);o.push(r)}return o}}class nQ extends V{constructor({char_logits:t,bpe_logits:r,wp_logits:s}){super(),this.char_logits=t,this.bpe_logits=r,this.wp_logits=s}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class nX extends j{}class nJ extends nX{async _call(t){return new nQ(await super._call(t))}}class nY extends j{}class nZ extends nY{}class n0 extends nY{}class n1 extends j{}class n2 extends n1{}class n3 extends n1{}class n4{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:a=null,local_files_only:n=!1,revision:o="main",model_file_name:l=null,subfolder:u="onnx",device:d=null,dtype:c=null,use_external_data_format:p=null,session_options:h={}}={}){let m={progress_callback:r,config:s,cache_dir:a,local_files_only:n,revision:o,model_file_name:l,subfolder:u,device:d,dtype:c,use_external_data_format:p,session_options:h};if(m.config=await i.AutoConfig.from_pretrained(t,m),!this.MODEL_CLASS_MAPPINGS)throw Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let r of this.MODEL_CLASS_MAPPINGS){let s=r.get(m.config.model_type);if(s)return await s[1].from_pretrained(t,m)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${m.config.model_type}", attempting to construct from base class.`),await j.from_pretrained(t,m);throw Error(`Unsupported model type: ${m.config.model_type}`)}}let n6=new Map([["bert",["BertModel",q]],["modernbert",["ModernBertModel",J]],["nomic_bert",["NomicBertModel",er]],["roformer",["RoFormerModel",ei]],["electra",["ElectraModel",eg]],["esm",["EsmModel",eW]],["convbert",["ConvBertModel",ed]],["camembert",["CamembertModel",ev]],["deberta",["DebertaModel",eS]],["deberta-v2",["DebertaV2Model",ez]],["mpnet",["MPNetModel",e2]],["albert",["AlbertModel",ts]],["distilbert",["DistilBertModel",eR]],["roberta",["RobertaModel",tA]],["xlm",["XLMModel",tN]],["xlm-roberta",["XLMRobertaModel",tU]],["clap",["ClapModel",nm]],["clip",["CLIPModel",rl]],["clipseg",["CLIPSegModel",rT]],["chinese_clip",["ChineseCLIPModel",rb]],["siglip",["SiglipModel",rm]],["jina_clip",["JinaCLIPModel",rw]],["mobilebert",["MobileBertModel",eJ]],["squeezebert",["SqueezeBertModel",e9]],["wav2vec2",["Wav2Vec2Model",aC]],["wav2vec2-bert",["Wav2Vec2BertModel",aW]],["unispeech",["UniSpeechModel",aB]],["unispeech-sat",["UniSpeechSatModel",aj]],["hubert",["HubertModel",aX]],["wavlm",["WavLMModel",a0]],["audio-spectrogram-transformer",["ASTModel",tX]],["vits",["VitsModel",nb]],["pyannote",["PyAnnoteModel",aA]],["wespeaker-resnet",["WeSpeakerResNetModel",aO]],["detr",["DetrModel",ig]],["rt_detr",["RTDetrModel",iv]],["table-transformer",["TableTransformerModel",i$]],["vit",["ViTModel",sR]],["ijepa",["IJepaModel",sG]],["pvt",["PvtModel",sK]],["vit_msn",["ViTMSNModel",sZ]],["vit_mae",["ViTMAEModel",sJ]],["groupvit",["GroupViTModel",s2]],["fastvit",["FastViTModel",s4]],["mobilevit",["MobileViTModel",s7]],["mobilevitv2",["MobileViTV2Model",ir]],["owlvit",["OwlViTModel",ia]],["owlv2",["Owlv2Model",iu]],["beit",["BeitModel",ip]],["deit",["DeiTModel",iE]],["hiera",["HieraModel",iF]],["convnext",["ConvNextModel",ae]],["convnextv2",["ConvNextV2Model",as]],["dinov2",["Dinov2Model",an]],["dinov2_with_registers",["Dinov2WithRegistersModel",au]],["resnet",["ResNetModel",iL]],["swin",["SwinModel",iD]],["swin2sr",["Swin2SRModel",iV]],["donut-swin",["DonutSwinModel",i9]],["yolos",["YolosModel",am]],["dpt",["DPTModel",iq]],["glpn",["GLPNModel",i6]],["hifigan",["SpeechT5HifiGan",nt]],["efficientnet",["EfficientNetModel",nC]],["decision_transformer",["DecisionTransformerModel",nW]],["patchtst",["PatchTSTForPrediction",nZ]],["patchtsmixer",["PatchTSMixerForPrediction",n2]],["mobilenet_v1",["MobileNetV1Model",nz]],["mobilenet_v2",["MobileNetV2Model",nB]],["mobilenet_v3",["MobileNetV3Model",nR]],["mobilenet_v4",["MobileNetV4Model",nG]],["maskformer",["MaskFormerModel",i2]],["mgp-str",["MgpstrForSceneTextRecognition",nJ]],["style_text_to_speech_2",["StyleTextToSpeech2Model",a8]]]),n8=new Map([["t5",["T5Model",tl]],["longt5",["LongT5Model",tc]],["mt5",["MT5Model",tm]],["bart",["BartModel",t_]],["mbart",["MBartModel",tx]],["marian",["MarianModel",ax]],["whisper",["WhisperModel",tZ]],["m2m_100",["M2M100Model",aT]],["blenderbot",["BlenderbotModel",t$]],["blenderbot-small",["BlenderbotSmallModel",tP]]]),n5=new Map([["bloom",["BloomModel",sI]],["jais",["JAISModel",rE]],["gpt2",["GPT2Model",rC]],["gptj",["GPTJModel",rD]],["gpt_bigcode",["GPTBigCodeModel",rV]],["gpt_neo",["GPTNeoModel",rF]],["gpt_neox",["GPTNeoXModel",rL]],["codegen",["CodeGenModel",rq]],["llama",["LlamaModel",rK]],["exaone",["ExaoneModel",r3]],["olmo",["OlmoModel",r7]],["olmo2",["Olmo2Model",sr]],["mobilellm",["MobileLLMModel",r8]],["granite",["GraniteModel",sa]],["cohere",["CohereModel",sl]],["gemma",["GemmaModel",sc]],["gemma2",["Gemma2Model",sm]],["helium",["HeliumModel",rJ]],["glm",["GlmModel",r0]],["openelm",["OpenELMModel",s_]],["qwen2",["Qwen2Model",sw]],["phi",["PhiModel",sk]],["phi3",["Phi3Model",sS]],["mpt",["MptModel",sz]],["opt",["OPTModel",sB]],["mistral",["MistralModel",na]],["starcoder2",["Starcoder2Model",nl]],["falcon",["FalconModel",nc]],["stablelm",["StableLmModel",nT]]]),n9=new Map([["speecht5",["SpeechT5ForSpeechToText",a7]],["whisper",["WhisperForConditionalGeneration",t0]],["moonshine",["MoonshineForConditionalGeneration",t3]]]),n7=new Map([["speecht5",["SpeechT5ForTextToSpeech",ne]]]),oe=new Map([["vits",["VitsModel",nb]],["musicgen",["MusicgenForConditionalGeneration",nA]]]),ot=new Map([["bert",["BertForSequenceClassification",H]],["modernbert",["ModernBertForSequenceClassification",Z]],["roformer",["RoFormerForSequenceClassification",en]],["electra",["ElectraForSequenceClassification",eb]],["esm",["EsmForSequenceClassification",eK]],["convbert",["ConvBertForSequenceClassification",ep]],["camembert",["CamembertForSequenceClassification",eT]],["deberta",["DebertaForSequenceClassification",eE]],["deberta-v2",["DebertaV2ForSequenceClassification",eL]],["mpnet",["MPNetForSequenceClassification",e4]],["albert",["AlbertForSequenceClassification",ti]],["distilbert",["DistilBertForSequenceClassification",ej]],["roberta",["RobertaForSequenceClassification",tz]],["xlm",["XLMForSequenceClassification",tR]],["xlm-roberta",["XLMRobertaForSequenceClassification",tW]],["bart",["BartForSequenceClassification",ty]],["mbart",["MBartForSequenceClassification",tM]],["mobilebert",["MobileBertForSequenceClassification",eZ]],["squeezebert",["SqueezeBertForSequenceClassification",te]]]),or=new Map([["bert",["BertForTokenClassification",K]],["modernbert",["ModernBertForTokenClassification",ee]],["roformer",["RoFormerForTokenClassification",eo]],["electra",["ElectraForTokenClassification",ey]],["esm",["EsmForTokenClassification",eQ]],["convbert",["ConvBertForTokenClassification",eh]],["camembert",["CamembertForTokenClassification",ek]],["deberta",["DebertaForTokenClassification",eI]],["deberta-v2",["DebertaV2ForTokenClassification",eB]],["mpnet",["MPNetForTokenClassification",e6]],["distilbert",["DistilBertForTokenClassification",eV]],["roberta",["RobertaForTokenClassification",tO]],["xlm",["XLMForTokenClassification",tj]],["xlm-roberta",["XLMRobertaForTokenClassification",tH]]]),os=new Map([["t5",["T5ForConditionalGeneration",tu]],["longt5",["LongT5ForConditionalGeneration",tp]],["mt5",["MT5ForConditionalGeneration",tf]],["bart",["BartForConditionalGeneration",tb]],["mbart",["MBartForConditionalGeneration",tv]],["marian",["MarianMTModel",av]],["m2m_100",["M2M100ForConditionalGeneration",ak]],["blenderbot",["BlenderbotForConditionalGeneration",tC]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",tE]]]),oi=new Map([["bloom",["BloomForCausalLM",sA]],["gpt2",["GPT2LMHeadModel",rS]],["jais",["JAISLMHeadModel",rI]],["gptj",["GPTJForCausalLM",rR]],["gpt_bigcode",["GPTBigCodeForCausalLM",rG]],["gpt_neo",["GPTNeoForCausalLM",rz]],["gpt_neox",["GPTNeoXForCausalLM",rB]],["codegen",["CodeGenForCausalLM",rW]],["llama",["LlamaForCausalLM",rQ]],["exaone",["ExaoneForCausalLM",r4]],["olmo",["OlmoForCausalLM",se]],["olmo2",["Olmo2ForCausalLM",ss]],["mobilellm",["MobileLLMForCausalLM",r5]],["granite",["GraniteForCausalLM",sn]],["cohere",["CohereForCausalLM",su]],["gemma",["GemmaForCausalLM",sp]],["gemma2",["Gemma2ForCausalLM",sf]],["helium",["HeliumForCausalLM",rY]],["glm",["GlmForCausalLM",r1]],["openelm",["OpenELMForCausalLM",sb]],["qwen2",["Qwen2ForCausalLM",sx]],["phi",["PhiForCausalLM",s$]],["phi3",["Phi3ForCausalLM",sP]],["mpt",["MptForCausalLM",sO]],["opt",["OPTForCausalLM",sN]],["mbart",["MBartForCausalLM",tT]],["mistral",["MistralForCausalLM",nn]],["starcoder2",["Starcoder2ForCausalLM",nu]],["falcon",["FalconForCausalLM",np]],["trocr",["TrOCRForCausalLM",ns]],["stablelm",["StableLmForCausalLM",nk]],["phi3_v",["Phi3VForCausalLM",rn]]]),oa=new Map([["multi_modality",["MultiModalityCausalLM",nK]]]),on=new Map([["bert",["BertForMaskedLM",W]],["modernbert",["ModernBertForMaskedLM",Y]],["roformer",["RoFormerForMaskedLM",ea]],["electra",["ElectraForMaskedLM",e_]],["esm",["EsmForMaskedLM",eH]],["convbert",["ConvBertForMaskedLM",ec]],["camembert",["CamembertForMaskedLM",eM]],["deberta",["DebertaForMaskedLM",eP]],["deberta-v2",["DebertaV2ForMaskedLM",eO]],["mpnet",["MPNetForMaskedLM",e3]],["albert",["AlbertForMaskedLM",tn]],["distilbert",["DistilBertForMaskedLM",eU]],["roberta",["RobertaForMaskedLM",tF]],["xlm",["XLMWithLMHeadModel",tD]],["xlm-roberta",["XLMRobertaForMaskedLM",tq]],["mobilebert",["MobileBertForMaskedLM",eY]],["squeezebert",["SqueezeBertForMaskedLM",e7]]]),oo=new Map([["bert",["BertForQuestionAnswering",Q]],["roformer",["RoFormerForQuestionAnswering",el]],["electra",["ElectraForQuestionAnswering",ew]],["convbert",["ConvBertForQuestionAnswering",em]],["camembert",["CamembertForQuestionAnswering",e$]],["deberta",["DebertaForQuestionAnswering",eA]],["deberta-v2",["DebertaV2ForQuestionAnswering",eN]],["mpnet",["MPNetForQuestionAnswering",e8]],["albert",["AlbertForQuestionAnswering",ta]],["distilbert",["DistilBertForQuestionAnswering",eG]],["roberta",["RobertaForQuestionAnswering",tL]],["xlm",["XLMForQuestionAnswering",tV]],["xlm-roberta",["XLMRobertaForQuestionAnswering",tK]],["mobilebert",["MobileBertForQuestionAnswering",e0]],["squeezebert",["SqueezeBertForQuestionAnswering",tt]]]),ol=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",t4]],["idefics3",["Idefics3ForConditionalGeneration",ri]]]),ou=new Map([["llava",["LlavaForConditionalGeneration",t8]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",t5]],["moondream1",["Moondream1ForConditionalGeneration",t9]],["florence2",["Florence2ForConditionalGeneration",re]],["qwen2-vl",["Qwen2VLForConditionalGeneration",sM]],["idefics3",["Idefics3ForConditionalGeneration",ri]],["paligemma",["PaliGemmaForConditionalGeneration",rr]]]),od=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",t4]]]),oc=new Map([["vit",["ViTForImageClassification",sj]],["ijepa",["IJepaForImageClassification",sU]],["pvt",["PvtForImageClassification",sQ]],["vit_msn",["ViTMSNForImageClassification",s0]],["fastvit",["FastViTForImageClassification",s6]],["mobilevit",["MobileViTForImageClassification",ie]],["mobilevitv2",["MobileViTV2ForImageClassification",is]],["beit",["BeitForImageClassification",ih]],["deit",["DeiTForImageClassification",iI]],["hiera",["HieraForImageClassification",iz]],["convnext",["ConvNextForImageClassification",at]],["convnextv2",["ConvNextV2ForImageClassification",ai]],["dinov2",["Dinov2ForImageClassification",ao]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",ad]],["resnet",["ResNetForImageClassification",iB]],["swin",["SwinForImageClassification",iR]],["segformer",["SegformerForImageClassification",nx]],["efficientnet",["EfficientNetForImageClassification",nS]],["mobilenet_v1",["MobileNetV1ForImageClassification",nO]],["mobilenet_v2",["MobileNetV2ForImageClassification",nN]],["mobilenet_v3",["MobileNetV3ForImageClassification",nj]],["mobilenet_v4",["MobileNetV4ForImageClassification",nU]]]),op=new Map([["detr",["DetrForObjectDetection",i_]],["rt_detr",["RTDetrForObjectDetection",iM]],["table-transformer",["TableTransformerForObjectDetection",iC]],["yolos",["YolosForObjectDetection",af]]]),oh=new Map([["owlvit",["OwlViTForObjectDetection",io]],["owlv2",["Owlv2ForObjectDetection",id]],["grounding-dino",["GroundingDinoForObjectDetection",ap]]]),om=new Map([["detr",["DetrForSegmentation",ib]],["clipseg",["CLIPSegForImageSegmentation",rk]]]),of=new Map([["segformer",["SegformerForSemanticSegmentation",nv]],["sapiens",["SapiensForSemanticSegmentation",iX]]]),og=new Map([["detr",["DetrForSegmentation",ib]],["maskformer",["MaskFormerForInstanceSegmentation",i3]]]),o_=new Map([["sam",["SamModel",ab]]]),ob=new Map([["wav2vec2",["Wav2Vec2ForCTC",aS]],["wav2vec2-bert",["Wav2Vec2BertForCTC",aH]],["unispeech",["UniSpeechForCTC",aN]],["unispeech-sat",["UniSpeechSatForCTC",aV]],["wavlm",["WavLMForCTC",a1]],["hubert",["HubertForCTC",aJ]]]),oy=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",aP]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",aK]],["unispeech",["UniSpeechForSequenceClassification",aD]],["unispeech-sat",["UniSpeechSatForSequenceClassification",aG]],["wavlm",["WavLMForSequenceClassification",a2]],["hubert",["HubertForSequenceClassification",aY]],["audio-spectrogram-transformer",["ASTForAudioClassification",tJ]]]),ow=new Map([["wavlm",["WavLMForXVector",a3]]]),ox=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",aU]],["wavlm",["WavLMForAudioFrameClassification",a4]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",aE]],["pyannote",["PyAnnoteForAudioFrameClassification",aF]]]),ov=new Map([["vitmatte",["VitMatteForImageMatting",s5]]]),oM=new Map([["patchtst",["PatchTSTForPrediction",n0]],["patchtsmixer",["PatchTSMixerForPrediction",n3]]]),oT=new Map([["swin2sr",["Swin2SRForImageSuperResolution",iG]]]),ok=new Map([["dpt",["DPTForDepthEstimation",iW]],["depth_anything",["DepthAnythingForDepthEstimation",iK]],["glpn",["GLPNForDepthEstimation",i8]],["sapiens",["SapiensForDepthEstimation",iJ]],["depth_pro",["DepthProForDepthEstimation",i0]]]),o$=new Map([["sapiens",["SapiensForNormalEstimation",iY]]]),oC=new Map([["vitpose",["VitPoseForPoseEstimation",sW]]]),oS=new Map([["clip",["CLIPVisionModelWithProjection",rp]],["siglip",["SiglipVisionModel",rg]],["jina_clip",["JinaCLIPVisionModel",rv]]]),oP=[[n6,x.EncoderOnly],[n8,x.EncoderDecoder],[n5,x.DecoderOnly],[ot,x.EncoderOnly],[or,x.EncoderOnly],[os,x.Seq2Seq],[n9,x.Seq2Seq],[oi,x.DecoderOnly],[oa,x.MultiModality],[on,x.EncoderOnly],[oo,x.EncoderOnly],[ol,x.Vision2Seq],[ou,x.ImageTextToText],[oc,x.EncoderOnly],[om,x.EncoderOnly],[og,x.EncoderOnly],[of,x.EncoderOnly],[ov,x.EncoderOnly],[oM,x.EncoderOnly],[oT,x.EncoderOnly],[ok,x.EncoderOnly],[o$,x.EncoderOnly],[oC,x.EncoderOnly],[op,x.EncoderOnly],[oh,x.EncoderOnly],[o_,x.MaskGeneration],[ob,x.EncoderOnly],[oy,x.EncoderOnly],[n7,x.Seq2Seq],[oe,x.EncoderOnly],[ow,x.EncoderOnly],[ox,x.EncoderOnly],[oS,x.EncoderOnly]];for(let[t,r]of oP)for(let[s,i]of t.values())v.set(s,r),T.set(i,s),M.set(s,i);for(let[t,r,s]of[["MusicgenForConditionalGeneration",nA,x.Musicgen],["Phi3VForCausalLM",rn,x.Phi3V],["CLIPTextModelWithProjection",rd,x.EncoderOnly],["SiglipTextModel",rf,x.EncoderOnly],["JinaCLIPTextModel",rx,x.EncoderOnly],["ClapTextModelWithProjection",nf,x.EncoderOnly],["ClapAudioModelWithProjection",ng,x.EncoderOnly]])v.set(t,s),T.set(r,t),M.set(t,r);class oE extends n4{static MODEL_CLASS_MAPPINGS=oP.map(t=>t[0]);static BASE_IF_FAIL=!0}class oI extends n4{static MODEL_CLASS_MAPPINGS=[ot]}class oA extends n4{static MODEL_CLASS_MAPPINGS=[or]}class oF extends n4{static MODEL_CLASS_MAPPINGS=[os]}class oz extends n4{static MODEL_CLASS_MAPPINGS=[n9]}class oO extends n4{static MODEL_CLASS_MAPPINGS=[n7]}class oL extends n4{static MODEL_CLASS_MAPPINGS=[oe]}class oB extends n4{static MODEL_CLASS_MAPPINGS=[oi]}class oN extends n4{static MODEL_CLASS_MAPPINGS=[on]}class oD extends n4{static MODEL_CLASS_MAPPINGS=[oo]}class oR extends n4{static MODEL_CLASS_MAPPINGS=[ol]}class oj extends n4{static MODEL_CLASS_MAPPINGS=[oc]}class oV extends n4{static MODEL_CLASS_MAPPINGS=[om]}class oG extends n4{static MODEL_CLASS_MAPPINGS=[of]}class oU extends n4{static MODEL_CLASS_MAPPINGS=[og]}class oq extends n4{static MODEL_CLASS_MAPPINGS=[op]}class oW extends n4{static MODEL_CLASS_MAPPINGS=[oh]}class oH extends n4{static MODEL_CLASS_MAPPINGS=[o_]}class oK extends n4{static MODEL_CLASS_MAPPINGS=[ob]}class oQ extends n4{static MODEL_CLASS_MAPPINGS=[oy]}class oX extends n4{static MODEL_CLASS_MAPPINGS=[ow]}class oJ extends n4{static MODEL_CLASS_MAPPINGS=[ox]}class oY extends n4{static MODEL_CLASS_MAPPINGS=[od]}class oZ extends n4{static MODEL_CLASS_MAPPINGS=[ov]}class o0 extends n4{static MODEL_CLASS_MAPPINGS=[oT]}class o1 extends n4{static MODEL_CLASS_MAPPINGS=[ok]}class o2 extends n4{static MODEL_CLASS_MAPPINGS=[o$]}class o3 extends n4{static MODEL_CLASS_MAPPINGS=[oC]}class o4 extends n4{static MODEL_CLASS_MAPPINGS=[oS]}class o6 extends V{constructor({logits:t,past_key_values:r,encoder_outputs:s,decoder_attentions:i=null,cross_attentions:a=null}){super(),this.logits=t,this.past_key_values=r,this.encoder_outputs=s,this.decoder_attentions=i,this.cross_attentions=a}}class o8 extends V{constructor({logits:t,...r}){super(),this.logits=t;let s=Object.values(r);s.length>0&&(this.attentions=s)}}class o5 extends V{constructor({logits:t,embeddings:r}){super(),this.logits=t,this.embeddings=r}}class o9 extends V{constructor({logits:t}){super(),this.logits=t}}class o7 extends V{constructor({logits:t}){super(),this.logits=t}}class le extends V{constructor({start_logits:t,end_logits:r}){super(),this.start_logits=t,this.end_logits=r}}class lt extends V{constructor({logits:t}){super(),this.logits=t}}class lr extends V{constructor({logits:t,past_key_values:r}){super(),this.logits=t,this.past_key_values=r}}class ls extends V{constructor({alphas:t}){super(),this.alphas=t}}class li extends V{constructor({waveform:t,spectrogram:r}){super(),this.waveform=t,this.spectrogram=r}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(t,r,s)=>{s.r(r),s.d(r,{ASTFeatureExtractor:()=>n});var i=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var a=s("./src/utils/audio.js");class n extends i.FeatureExtractor{constructor(t){super(t);let r=this.config.sampling_rate,s=(0,a.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);for(let t=0;t<s.length;++t)s[t].push(0);this.mel_filters=s,this.window=(0,a.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(t,r){return(0,a.spectrogram)(t,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:r,transpose:!0})}async _call(t){(0,i.validate_audio_inputs)(t,"ASTFeatureExtractor");let r=await this._extract_fbank_features(t,this.config.max_length);if(this.config.do_normalize){let t=2*this.std,s=r.data;for(let r=0;r<s.length;++r)s[r]=(s[r]-this.mean)/t}return{input_values:r.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(t,r,s)=>{s.r(r),s.d(r,{AutoFeatureExtractor:()=>o});var i=s("./src/utils/constants.js"),a=s("./src/utils/hub.js");s("./src/base/feature_extraction_utils.js");var n=s("./src/models/feature_extractors.js");class o{static async from_pretrained(t,r={}){let s=await (0,a.getModelJSON)(t,i.FEATURE_EXTRACTOR_NAME,!0,r),o=s.feature_extractor_type,l=n[o];if(!l)throw Error(`Unknown feature_extractor_type: '${o}'. Please report this at ${i.GITHUB_ISSUE_URL}.`);return new l(s)}}},"./src/models/auto/image_processing_auto.js":(t,r,s)=>{s.r(r),s.d(r,{AutoImageProcessor:()=>l});var i=s("./src/utils/constants.js"),a=s("./src/utils/hub.js"),n=s("./src/base/image_processors_utils.js"),o=s("./src/models/image_processors.js");class l{static async from_pretrained(t,r={}){let s=await (0,a.getModelJSON)(t,i.IMAGE_PROCESSOR_NAME,!0,r),l=s.image_processor_type??s.feature_extractor_type,u=o[l];return u||(void 0!==l&&console.warn(`Image processor type '${l}' not found, assuming base ImageProcessor. Please report this at ${i.GITHUB_ISSUE_URL}.`),u=n.ImageProcessor),new u(s)}}},"./src/models/auto/processing_auto.js":(t,r,s)=>{s.r(r),s.d(r,{AutoProcessor:()=>d});var i=s("./src/utils/constants.js"),a=s("./src/utils/hub.js"),n=s("./src/base/processing_utils.js"),o=s("./src/models/processors.js"),l=s("./src/models/image_processors.js"),u=s("./src/models/feature_extractors.js");class d{static async from_pretrained(t,r={}){let s=await (0,a.getModelJSON)(t,i.IMAGE_PROCESSOR_NAME,!0,r),{image_processor_type:d,feature_extractor_type:c,processor_class:p}=s;if(p&&o[p])return o[p].from_pretrained(t,r);if(!d&&!c)throw Error("No `image_processor_type` or `feature_extractor_type` found in the config.");let h={};if(d){let t=l[d];if(!t)throw Error(`Unknown image_processor_type: '${d}'.`);h.image_processor=new t(s)}if(c){let t=l[c];if(t)h.image_processor=new t(s);else{let t=u[c];if(!t)throw Error(`Unknown feature_extractor_type: '${c}'.`);h.feature_extractor=new t(s)}}return new n.Processor({},h)}}},"./src/models/beit/image_processing_beit.js":(t,r,s)=>{s.r(r),s.d(r,{BeitFeatureExtractor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(t,r,s)=>{s.r(r),s.d(r,{BitImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(t,r,s)=>{s.r(r),s.d(r,{ChineseCLIPFeatureExtractor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(t,r,s)=>{s.r(r),s.d(r,{ClapFeatureExtractor:()=>n});var i=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var a=s("./src/utils/audio.js");class n extends i.FeatureExtractor{constructor(t){super(t),this.mel_filters=(0,a.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,a.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,a.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(t,r,s,i){let a;let n=t.length-r;if(n>0){if("rand_trunc"===s){let s=Math.floor(Math.random()*(n+1));t=t.subarray(s,s+r),a=await this._extract_fbank_features(t,this.mel_filters_slaney,this.config.nb_max_samples)}else throw Error(`Truncation strategy "${s}" not implemented`)}else{if(n<0){let s=new Float64Array(r);if(s.set(t),"repeat"===i)for(let i=t.length;i<r;i+=t.length)s.set(t.subarray(0,Math.min(t.length,r-i)),i);else if("repeatpad"===i)for(let r=t.length;r<-n;r+=t.length)s.set(t,r);t=s}if("fusion"===s)throw Error(`Truncation strategy "${s}" not implemented`);a=await this._extract_fbank_features(t,this.mel_filters_slaney,this.config.nb_max_samples)}return a.unsqueeze_(0)}async _extract_fbank_features(t,r,s=null){return(0,a.spectrogram)(t,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:r,log_mel:"dB",max_num_frames:s,do_pad:!1,transpose:!0})}async _call(t,{max_length:r=null}={}){return(0,i.validate_audio_inputs)(t,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(t,r??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(t,r,s)=>{s.r(r),s.d(r,{CLIPFeatureExtractor:()=>n,CLIPImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}class n extends a{}},"./src/models/convnext/image_processing_convnext.js":(t,r,s)=>{s.r(r),s.d(r,{ConvNextFeatureExtractor:()=>n,ConvNextImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{constructor(t){super(t),this.crop_pct=this.config.crop_pct??.875}async resize(t){let r=this.size?.shortest_edge;if(void 0===r)throw Error("Size dictionary must contain 'shortest_edge' key.");if(r<384){let s=Math.floor(r/this.crop_pct),[i,a]=this.get_resize_output_image_size(t,{shortest_edge:s});t=await t.resize(i,a,{resample:this.resample}),t=await t.center_crop(r,r)}else t=await t.resize(r,r,{resample:this.resample});return t}}class n extends a{}},"./src/models/deit/image_processing_deit.js":(t,r,s)=>{s.r(r),s.d(r,{DeiTFeatureExtractor:()=>n,DeiTImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}class n extends a{}},"./src/models/detr/image_processing_detr.js":(t,r,s)=>{s.r(r),s.d(r,{DetrFeatureExtractor:()=>o,DetrImageProcessor:()=>n});var i=s("./src/base/image_processors_utils.js"),a=s("./src/utils/tensor.js");class n extends i.ImageProcessor{async _call(t){let r=await super._call(t),s=[r.pixel_values.dims[0],64,64],i=(0,a.full)(s,1n);return{...r,pixel_mask:i}}post_process_object_detection(...t){return(0,i.post_process_object_detection)(...t)}post_process_panoptic_segmentation(...t){return(0,i.post_process_panoptic_segmentation)(...t)}post_process_instance_segmentation(...t){return(0,i.post_process_instance_segmentation)(...t)}}class o extends n{}},"./src/models/donut/image_processing_donut.js":(t,r,s)=>{s.r(r),s.d(r,{DonutFeatureExtractor:()=>n,DonutImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{pad_image(t,r,s,i={}){let[a,n,o]=r,l=this.image_mean;Array.isArray(this.image_mean)||(l=Array(o).fill(l));let u=this.image_std;Array.isArray(u)||(u=Array(o).fill(l));let d=l.map((t,r)=>-t/u[r]);return super.pad_image(t,r,s,{center:!0,constant_values:d,...i})}}class n extends a{}},"./src/models/dpt/image_processing_dpt.js":(t,r,s)=>{s.r(r),s.d(r,{DPTFeatureExtractor:()=>n,DPTImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}class n extends a{}},"./src/models/efficientnet/image_processing_efficientnet.js":(t,r,s)=>{s.r(r),s.d(r,{EfficientNetImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{constructor(t){super(t),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(t=>t*t))}}},"./src/models/feature_extractors.js":(t,r,s)=>{s.r(r),s.d(r,{ASTFeatureExtractor:()=>i.ASTFeatureExtractor,ClapFeatureExtractor:()=>a.ClapFeatureExtractor,ImageFeatureExtractor:()=>h.ImageProcessor,MoonshineFeatureExtractor:()=>n.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>o.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>l.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>d.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>c.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>p.WhisperFeatureExtractor});var i=s("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),a=s("./src/models/clap/feature_extraction_clap.js"),n=s("./src/models/moonshine/feature_extraction_moonshine.js"),o=s("./src/models/pyannote/feature_extraction_pyannote.js"),l=s("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),u=s("./src/models/speecht5/feature_extraction_speecht5.js"),d=s("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),c=s("./src/models/wespeaker/feature_extraction_wespeaker.js"),p=s("./src/models/whisper/feature_extraction_whisper.js"),h=s("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(t,r,s)=>{s.r(r),s.d(r,{Florence2Processor:()=>o});var i=s("./src/base/processing_utils.js"),a=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");class o extends i.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor;constructor(t,r){super(t,r);let{tasks_answer_post_processing_type:s,task_prompts_without_inputs:i,task_prompts_with_input:a}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(s??{})),this.task_prompts_without_inputs=new Map(Object.entries(i??{})),this.task_prompts_with_input=new Map(Object.entries(a??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(t){"string"==typeof t&&(t=[t]);let r=[];for(let s of t)if(this.task_prompts_without_inputs.has(s))r.push(this.task_prompts_without_inputs.get(s));else{for(let[t,i]of this.task_prompts_with_input)if(s.includes(t)){r.push(i.replaceAll("{input}",s).replaceAll(t,""));break}r.length!==t.length&&r.push(s)}return r}post_process_generation(t,r,s){let i;let a=this.tasks_answer_post_processing_type.get(r)??"pure_text";switch(t=t.replaceAll("<s>","").replaceAll("</s>",""),a){case"pure_text":i=t;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":let n="ocr"===a?"quad_boxes":"bboxes",o=t.matchAll(this.regexes[n]),l=[],u=[];for(let[t,r,...i]of o)l.push(r?r.trim():l.at(-1)??""),u.push(i.map((t,r)=>(Number(t)+.5)/this.size_per_bin*s[r%2]));i={labels:l,[n]:u};break;default:throw Error(`Task "${r}" (of type "${a}") not yet implemented.`)}return{[r]:i}}async _call(t,r=null,s={}){if(!t&&!r)throw Error("Either text or images must be provided");let i=await this.image_processor(t,s),a=r?this.tokenizer(r,s):{};return{...i,...a}}}},"./src/models/glpn/image_processing_glpn.js":(t,r,s)=>{s.r(r),s.d(r,{GLPNFeatureExtractor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(t,r,s)=>{s.r(r),s.d(r,{GroundingDinoImageProcessor:()=>n});var i=s("./src/base/image_processors_utils.js"),a=s("./src/utils/tensor.js");class n extends i.ImageProcessor{async _call(t){let r=await super._call(t),s=r.pixel_values.dims,i=(0,a.ones)([s[0],s[2],s[3]]);return{...r,pixel_mask:i}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(t,r,s)=>{s.r(r),s.d(r,{GroundingDinoProcessor:()=>l});var i=s("./src/base/processing_utils.js"),a=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js"),o=s("./src/base/image_processors_utils.js");class l extends i.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor;async _call(t,r,s={}){let i=t?await this.image_processor(t,s):{};return{...r?this.tokenizer(r,s):{},...i}}post_process_grounded_object_detection(t,r,{box_threshold:s=.25,text_threshold:i=.25,target_sizes:a=null}={}){let{logits:n,pred_boxes:l}=t,u=n.dims[0];if(null!==a&&a.length!==u)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let d=n.dims.at(1),c=n.sigmoid(),p=c.max(-1).tolist(),h=l.tolist().map(t=>t.map(t=>(0,o.center_to_corners_format)(t))),m=[];for(let t=0;t<u;++t){let n=null!==a?a[t]:null;null!==n&&(h[t]=h[t].map(t=>t.map((t,r)=>t*n[(r+1)%2])));let o=p[t],l=[],u=[],f=[];for(let a=0;a<d;++a){let n=o[a];if(n<=s)continue;let d=h[t][a],p=c[t][a];l.push(n),f.push(d);let m=function(t,r){let s=t.dims.at(-1)-1,i=t.tolist();i.fill(!1,0,1),i.fill(!1,s);let a=r.tolist();return i.map((t,r)=>t?r:null).filter(t=>null!==t).map(t=>a[t])}(p.gt(i),r[t]);u.push(m)}m.push({scores:l,boxes:f,labels:this.batch_decode(u)})}return m}}},"./src/models/idefics3/image_processing_idefics3.js":(t,r,s)=>{s.r(r),s.d(r,{Idefics3ImageProcessor:()=>n});var i=s("./src/base/image_processors_utils.js"),a=s("./src/utils/tensor.js");class n extends i.ImageProcessor{constructor(t){super(t),this.do_image_splitting=t.do_image_splitting??!0,this.max_image_size=t.max_image_size}get_resize_for_vision_encoder(t,r){let[s,i]=t.dims.slice(-2),a=i/s;return i>=s?s=Math.ceil((s=Math.floor((i=Math.ceil(i/r)*r)/a))/r)*r:i=Math.ceil((i=Math.floor((s=Math.ceil(s/r)*r)*a))/r)*r,{height:s,width:i}}async _call(t,{do_image_splitting:r=null,return_row_col_info:s=!1}={}){let i,n,o;if(Array.isArray(t)){if(0===t.length||!t[0])throw Error("No images provided.");i=Array.isArray(t[0])?t:[t]}else i=[[t]];let l=[],u=[],d=[],c=[],p=[];for(let t of i){let s,i=await Promise.all(t.map(t=>this.preprocess(t)));c.push(...i.map(t=>t.original_size)),p.push(...i.map(t=>t.reshaped_input_size)),i.forEach(t=>t.pixel_values.unsqueeze_(0));let{longest_edge:n}=this.max_image_size;if(r??this.do_image_splitting){let t=Array(i.length),r=Array(i.length);s=await Promise.all(i.map(async(s,i)=>{let o=this.get_resize_for_vision_encoder(s.pixel_values,n),l=await (0,a.interpolate_4d)(s.pixel_values,{size:[o.height,o.width]}),{frames:u,num_splits_h:d,num_splits_w:c}=await this.split_image(l,this.max_image_size);return t[i]=d,r[i]=c,(0,a.cat)(u,0)})),u.push(t),d.push(r)}else{let t=[n,n];s=await Promise.all(i.map(r=>(0,a.interpolate_4d)(r.pixel_values,{size:t}))),u.push(Array(i.length).fill(0)),d.push(Array(i.length).fill(0))}l.push((0,a.cat)(s,0))}let h=l.length,[m,f,g,_]=l[0].dims;if(1===h)n=l[0].unsqueeze_(0),o=(0,a.full)([h,m,g,_],!0);else{let t=Math.max(...l.map(t=>t.dims.at(0))),r=(o=(0,a.full)([h,t,g,_],!0)).data,s=t*g*_;for(let i=0;i<h;++i){let n=l[i].dims[0];if(n<t){l[i]=(0,a.cat)([l[i],(0,a.full)([t-n,f,g,_],0)],0);let o=i*s+n*g*_,u=(i+1)*s;r.fill(!1,o,u)}}n=(0,a.stack)(l,0)}return{pixel_values:n,pixel_attention_mask:o,original_sizes:c,reshaped_input_sizes:p,...s?{rows:u,cols:d}:{}}}async split_image(t,{longest_edge:r}){let s=[],[i,n]=t.dims.slice(-2),o=0,l=0;if(i>r||n>r){o=Math.ceil(i/r),l=Math.ceil(n/r);let u=Math.ceil(i/o),d=Math.ceil(n/l);for(let r=0;r<o;++r)for(let c=0;c<l;++c){let p,h,m,f;r===o-1?(h=i-u,f=i):(h=r*u,f=(r+1)*u),c===l-1?(p=n-d,m=n):(p=c*d,m=(c+1)*d);let g=[h,p],_=[f,m],b=await (0,a.slice)(t,g,_,[2,3]);s.push(b)}(i!==r||n!==r)&&(t=await (0,a.interpolate_4d)(t,{size:[r,r]}))}return s.push(t),{frames:s,num_splits_h:o,num_splits_w:l}}}},"./src/models/idefics3/processing_idefics3.js":(t,r,s)=>{s.r(r),s.d(r,{Idefics3Processor:()=>l});var i=s("./src/base/processing_utils.js"),a=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");s("./src/utils/image.js");var o=s("./src/utils/core.js");class l extends i.Processor{static image_processor_class=a.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(t,r=null,s={}){let i;s.return_row_col_info??=!0,r&&(i=await this.image_processor(r,s)),Array.isArray(t)||(t=[t]);let a=i.rows??[Array(t.length).fill(0)],n=i.cols??[Array(t.length).fill(0)],l=this.config.image_seq_len,u=[],d=[];for(let r=0;r<t.length;++r){let s=t[r],i=a[r],c=n[r];u.push((0,o.count)(s,this.image_token));let p=i.map((t,r)=>{var s,i,a,n,o,u;return s=t,i=c[r],a=l,n=this.fake_image_token,o=this.image_token,u=this.global_img_token,0===s&&0===i?`${n}${u}`+o.repeat(a)+`${n}`:function(t,r,s,i,a,n){let o="";for(let n=0;n<r;++n){for(let r=0;r<s;++r)o+=i+`<row_${n+1}_col_${r+1}>`+a.repeat(t);o+="\n"}return o+(`
${i}${n}`+a.repeat(t))+`${i}`}(a,s,i,n,o,u)}),h=s.split(this.image_token);if(0===h.length)throw Error("The image token should be present in the text.");let m=h[0];for(let t=0;t<p.length;++t)m+=p[t]+h[t+1];d.push(m)}return{...this.tokenizer(d),...i}}}},"./src/models/image_processors.js":(t,r,s)=>{s.r(r),s.d(r,{BeitFeatureExtractor:()=>i.BeitFeatureExtractor,BitImageProcessor:()=>a.BitImageProcessor,CLIPFeatureExtractor:()=>o.CLIPFeatureExtractor,CLIPImageProcessor:()=>o.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>n.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>l.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>l.ConvNextImageProcessor,DPTFeatureExtractor:()=>p.DPTFeatureExtractor,DPTImageProcessor:()=>p.DPTImageProcessor,DeiTFeatureExtractor:()=>u.DeiTFeatureExtractor,DeiTImageProcessor:()=>u.DeiTImageProcessor,DetrFeatureExtractor:()=>d.DetrFeatureExtractor,DetrImageProcessor:()=>d.DetrImageProcessor,DonutFeatureExtractor:()=>c.DonutFeatureExtractor,DonutImageProcessor:()=>c.DonutImageProcessor,EfficientNetImageProcessor:()=>h.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>m.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>g.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>b.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>y.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>w.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>x.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>x.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>v.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>v.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>M.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>M.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>T.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>T.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>k.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>k.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>$.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>$.MobileViTImageProcessor,NougatImageProcessor:()=>C.NougatImageProcessor,OwlViTFeatureExtractor:()=>P.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>P.OwlViTImageProcessor,Owlv2ImageProcessor:()=>S.Owlv2ImageProcessor,Phi3VImageProcessor:()=>E.Phi3VImageProcessor,PvtImageProcessor:()=>I.PvtImageProcessor,Qwen2VLImageProcessor:()=>A.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>F.RTDetrImageProcessor,SamImageProcessor:()=>z.SamImageProcessor,SegformerFeatureExtractor:()=>O.SegformerFeatureExtractor,SegformerImageProcessor:()=>O.SegformerImageProcessor,SiglipImageProcessor:()=>L.SiglipImageProcessor,Swin2SRImageProcessor:()=>B.Swin2SRImageProcessor,VLMImageProcessor:()=>_.VLMImageProcessor,ViTFeatureExtractor:()=>N.ViTFeatureExtractor,ViTImageProcessor:()=>N.ViTImageProcessor,VitMatteImageProcessor:()=>D.VitMatteImageProcessor,VitPoseImageProcessor:()=>R.VitPoseImageProcessor,YolosFeatureExtractor:()=>j.YolosFeatureExtractor,YolosImageProcessor:()=>j.YolosImageProcessor});var i=s("./src/models/beit/image_processing_beit.js"),a=s("./src/models/bit/image_processing_bit.js"),n=s("./src/models/chinese_clip/image_processing_chinese_clip.js"),o=s("./src/models/clip/image_processing_clip.js"),l=s("./src/models/convnext/image_processing_convnext.js"),u=s("./src/models/deit/image_processing_deit.js"),d=s("./src/models/detr/image_processing_detr.js"),c=s("./src/models/donut/image_processing_donut.js"),p=s("./src/models/dpt/image_processing_dpt.js"),h=s("./src/models/efficientnet/image_processing_efficientnet.js"),m=s("./src/models/glpn/image_processing_glpn.js"),f=s("./src/models/grounding_dino/image_processing_grounding_dino.js"),g=s("./src/models/idefics3/image_processing_idefics3.js"),_=s("./src/models/janus/image_processing_janus.js"),b=s("./src/models/jina_clip/image_processing_jina_clip.js"),y=s("./src/models/llava_onevision/image_processing_llava_onevision.js"),w=s("./src/models/mask2former/image_processing_mask2former.js"),x=s("./src/models/maskformer/image_processing_maskformer.js"),v=s("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),M=s("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),T=s("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),k=s("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),$=s("./src/models/mobilevit/image_processing_mobilevit.js"),C=s("./src/models/nougat/image_processing_nougat.js"),S=s("./src/models/owlv2/image_processing_owlv2.js"),P=s("./src/models/owlvit/image_processing_owlvit.js"),E=s("./src/models/phi3_v/image_processing_phi3_v.js"),I=s("./src/models/pvt/image_processing_pvt.js"),A=s("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),F=s("./src/models/rt_detr/image_processing_rt_detr.js"),z=s("./src/models/sam/image_processing_sam.js"),O=s("./src/models/segformer/image_processing_segformer.js"),L=s("./src/models/siglip/image_processing_siglip.js"),B=s("./src/models/swin2sr/image_processing_swin2sr.js"),N=s("./src/models/vit/image_processing_vit.js"),D=s("./src/models/vitmatte/image_processing_vitmatte.js"),R=s("./src/models/vitpose/image_processing_vitpose.js"),j=s("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(t,r,s)=>{s.r(r),s.d(r,{VLMImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{constructor(t){super({do_pad:!0,pad_size:{width:t.image_size,height:t.image_size},...t}),this.constant_values=this.config.background_color.map(t=>t*this.rescale_factor)}pad_image(t,r,s,i){return super.pad_image(t,r,s,{constant_values:this.constant_values,center:!0,...i})}}},"./src/models/janus/processing_janus.js":(t,r,s)=>{s.r(r),s.d(r,{VLChatProcessor:()=>d});var i=s("./src/base/processing_utils.js"),a=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js"),o=s("./src/utils/core.js"),l=s("./src/utils/tensor.js"),u=s("./src/utils/image.js");class d extends i.Processor{static image_processor_class=a.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;static uses_processor_config=!0;constructor(t,r){super(t,r),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(t,{images:r=null,chat_template:s="default"}={}){r?Array.isArray(r)||(r=[r]):r=await Promise.all(t.filter(t=>t.images).flatMap(t=>t.images).map(t=>u.RawImage.read(t)));let i=this.tokenizer,a=i.apply_chat_template(t,{tokenize:!1,add_generation_prompt:!0,chat_template:s}),n=t=>i.encode(t,{add_special_tokens:!1}),d=a.split(this.image_tag),c=d.length-1;if(r.length!==c)throw Error(`Number of images provided (${r.length}) does not match number of "${this.image_tag}" image tags (${c})`);let[p,h,m]=i.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]),f=n(d[0]),g=Array(f.length).fill(!1);for(let t=1;t<d.length;++t){let r=Array(this.num_image_tokens).fill(p),s=n(d[t]);f=(0,o.mergeArrays)(f,[h],r,[m],s);let i=Array(this.num_image_tokens).fill(!0);g=(0,o.mergeArrays)(g,[!1],i,[!1],Array(s.length).fill(!1))}let _=[1,f.length],b={input_ids:new l.Tensor("int64",f,_),attention_mask:new l.Tensor("int64",Array(f.length).fill(1),_),images_seq_mask:new l.Tensor("bool",g,_),images_emb_mask:new l.Tensor("bool",Array(c*this.num_image_tokens).fill(!0),[1,c,this.num_image_tokens])};if(r&&r.length>0){let t=await this.image_processor(r);return t.pixel_values.unsqueeze_(0),{...b,...t}}return b}}},"./src/models/jina_clip/image_processing_jina_clip.js":(t,r,s)=>{s.r(r),s.d(r,{JinaCLIPImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{constructor(t){let{resize_mode:r,fill_color:s,interpolation:i,size:a,...n}=t;super({...n,size:"squash"===r?{width:a,height:a}:"shortest"===r?{shortest_edge:a}:{longest_edge:a},resample:"bicubic"===i?3:2,do_center_crop:!0,crop_size:a,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(t,r,s)=>{s.r(r),s.d(r,{JinaCLIPProcessor:()=>o});var i=s("./src/base/processing_utils.js"),a=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");class o extends i.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor;async _call(t=null,r=null,s={}){if(!t&&!r)throw Error("Either text or images must be provided");let i=t?this.tokenizer(t,s):{},a=r?await this.image_processor(r,s):{};return{...i,...a}}}},"./src/models/llava_onevision/image_processing_llava_onevision.js":(t,r,s)=>{s.r(r),s.d(r,{LlavaOnevisionImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(t,r,s)=>{s.r(r),s.d(r,{Mask2FormerImageProcessor:()=>a});var i=s("./src/models/maskformer/image_processing_maskformer.js");class a extends i.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(t,r,s)=>{s.r(r),s.d(r,{MaskFormerFeatureExtractor:()=>n,MaskFormerImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{post_process_panoptic_segmentation(...t){return(0,i.post_process_panoptic_segmentation)(...t)}post_process_instance_segmentation(...t){return(0,i.post_process_instance_segmentation)(...t)}}class n extends a{}},"./src/models/mgp_str/processing_mgp_str.js":(t,r,s)=>{s.r(r),s.d(r,{MgpstrProcessor:()=>u});var i=s("./src/base/processing_utils.js"),a=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js"),o=s("./src/utils/maths.js");let l={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class u extends i.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(t,r){if(!l.hasOwnProperty(r))throw Error(`Format ${r} is not supported.`);let[s,i]=l[r],a=this[s].bind(this),[n,u]=t.dims,d=[],c=[],p=t.tolist();for(let t=0;t<n;++t){let r=p[t],s=[],a=[];for(let t=1;t<u;++t){let[n,l]=(0,o.max)((0,o.softmax)(r[t]));if(a.push(n),l==i)break;s.push(l)}let n=a.length>0?a.reduce((t,r)=>t*r,1):0;c.push(s),d.push(n)}return[a(c),d]}char_decode(t){return this.char_tokenizer.batch_decode(t).map(t=>t.replaceAll(" ",""))}bpe_decode(t){return this.bpe_tokenizer.batch_decode(t)}wp_decode(t){return this.wp_tokenizer.batch_decode(t).map(t=>t.replaceAll(" ",""))}batch_decode([t,r,s]){let[i,a]=this._decode_helper(t,"char"),[n,l]=this._decode_helper(r,"bpe"),[u,d]=this._decode_helper(s,"wp"),c=[],p=[];for(let t=0;t<i.length;++t){let[r,s]=(0,o.max)([a[t],l[t],d[t]]);c.push([i[t],n[t],u[t]][s]),p.push(r)}return{generated_text:c,scores:p,char_preds:i,bpe_preds:n,wp_preds:u}}static async from_pretrained(...t){let r=await super.from_pretrained(...t),s=await n.AutoTokenizer.from_pretrained("Xenova/gpt2"),i=await n.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return r.components={image_processor:r.image_processor,char_tokenizer:r.tokenizer,bpe_tokenizer:s,wp_tokenizer:i},r}async _call(t,r=null){let s=await this.image_processor(t);return r&&(s.labels=this.tokenizer(r).input_ids),s}}},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(t,r,s)=>{s.r(r),s.d(r,{MobileNetV1FeatureExtractor:()=>n,MobileNetV1ImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}class n extends a{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(t,r,s)=>{s.r(r),s.d(r,{MobileNetV2FeatureExtractor:()=>n,MobileNetV2ImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}class n extends a{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(t,r,s)=>{s.r(r),s.d(r,{MobileNetV3FeatureExtractor:()=>n,MobileNetV3ImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}class n extends a{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(t,r,s)=>{s.r(r),s.d(r,{MobileNetV4FeatureExtractor:()=>n,MobileNetV4ImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}class n extends a{}},"./src/models/mobilevit/image_processing_mobilevit.js":(t,r,s)=>{s.r(r),s.d(r,{MobileViTFeatureExtractor:()=>n,MobileViTImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}class n extends a{}},"./src/models/moonshine/feature_extraction_moonshine.js":(t,r,s)=>{s.r(r),s.d(r,{MoonshineFeatureExtractor:()=>n});var i=s("./src/base/feature_extraction_utils.js"),a=s("./src/utils/tensor.js");class n extends i.FeatureExtractor{async _call(t){(0,i.validate_audio_inputs)(t,"MoonshineFeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=[1,t.length];return{input_values:new a.Tensor("float32",t,r)}}}},"./src/models/moonshine/processing_moonshine.js":(t,r,s)=>{s.r(r),s.d(r,{MoonshineProcessor:()=>o});var i=s("./src/models/auto/feature_extraction_auto.js"),a=s("./src/tokenizers.js"),n=s("./src/base/processing_utils.js");class o extends n.Processor{static tokenizer_class=a.AutoTokenizer;static feature_extractor_class=i.AutoFeatureExtractor;async _call(t){return await this.feature_extractor(t)}}},"./src/models/nougat/image_processing_nougat.js":(t,r,s)=>{s.r(r),s.d(r,{NougatImageProcessor:()=>a});var i=s("./src/models/donut/image_processing_donut.js");class a extends i.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(t,r,s)=>{s.r(r),s.d(r,{Owlv2ImageProcessor:()=>a});var i=s("./src/models/owlvit/image_processing_owlvit.js");class a extends i.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(t,r,s)=>{s.r(r),s.d(r,{OwlViTFeatureExtractor:()=>n,OwlViTImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{post_process_object_detection(...t){return(0,i.post_process_object_detection)(...t)}}class n extends a{}},"./src/models/owlvit/processing_owlvit.js":(t,r,s)=>{s.r(r),s.d(r,{OwlViTProcessor:()=>o});var i=s("./src/base/processing_utils.js"),a=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");class o extends i.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor}},"./src/models/paligemma/processing_paligemma.js":(t,r,s)=>{s.r(r),s.d(r,{PaliGemmaProcessor:()=>l});var i=s("./src/base/processing_utils.js"),a=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");let o="<image>";class l extends i.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=a.AutoImageProcessor;static uses_processor_config=!1;async _call(t,r=null,s={}){let i;r||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),r=""),Array.isArray(t)||(t=[t]),Array.isArray(r)||(r=[r]);let a=this.tokenizer.bos_token,n=this.image_processor.config.image_seq_length;r.some(t=>t.includes(o))?i=r.map(t=>{let r=t.replaceAll(o,o.repeat(n)),s=r.lastIndexOf(o),i=-1===s?0:s+o.length;return r.slice(0,i)+a+r.slice(i)+"\n"}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),i=r.map(r=>{var s;return s=t.length,`${o.repeat(n*s)}${a}${r}
`}));let l=this.tokenizer(i,s);return{...await this.image_processor(t,s),...l}}}},"./src/models/phi3_v/image_processing_phi3_v.js":(t,r,s)=>{s.r(r),s.d(r,{Phi3VImageProcessor:()=>d});var i=s("./src/base/image_processors_utils.js"),a=s("./src/utils/tensor.js");let n=[2,3],{ceil:o,floor:l,sqrt:u}=Math;class d extends i.ImageProcessor{constructor(t){super({...t,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=t.num_crops}calc_num_image_tokens_from_image_size(t,r){let{num_img_tokens:s}=this.config;return l((l(r/336)*l(t/336)+1)*s+1+(l(r/336)+1)*u(s))}get_resize_output_image_size(t,r){let s=this._num_crops,[i,a]=t.size,n=i/a,o=1;for(;o*Math.ceil(o/n)<=s;)o+=1;let l=Math.floor(336*(o-=1));return[l,Math.floor(l/n)]}pad_image(t,r,s,i={}){let[a,n]=r,l=336*o(a/336),u=336*o(n/336),d=[1,1,1].map((t,r)=>(t-this.image_mean[r])/this.image_std[r]);return super.pad_image(t,r,{width:u,height:l},{center:!0,constant_values:d,...i})}async _call(t,{num_crops:r=null}={}){if(this._num_crops=r??=this.config.num_crops,r<4||u(r)%1!=0)throw Error("num_crops must be a square number >= 4");Array.isArray(t)||(t=[t]);let s=t.length,i=await Promise.all(t.map(t=>this.preprocess(t))),d=i.map(t=>t.original_size),c=i.map(t=>t.reshaped_input_size),p=[];for(let{pixel_values:t}of i){t.unsqueeze_(0);let[s,i]=t.dims.slice(-2),o=await (0,a.interpolate_4d)(t,{size:[336,336],mode:"bicubic"});if(r>0){let d=[],c=u(r),h=l(i/c),m=l(s/c);for(let r=0;r<c;++r)for(let o=0;o<c;++o){let l,u,p,f;r===c-1?(u=s-m,f=s):(u=r*m,f=(r+1)*m),o===c-1?(l=i-h,p=i):(l=o*h,p=(o+1)*h);let g=[u,l],_=[f,p],b=await (0,a.slice)(t,g,_,n);d.push(b)}let f=await (0,a.interpolate_4d)((0,a.cat)(d,0),{size:[336,336],mode:"bicubic"});p.push((0,a.cat)([o,f],0))}else p.push(o)}let h=(0,a.stack)(p,0),m=c.map(t=>t.map(t=>336*o(t/336)));return{pixel_values:h,original_sizes:d,reshaped_input_sizes:c,image_sizes:new a.Tensor("int64",m.flat(),[s,2]),num_img_tokens:m.map(([t,r])=>this.calc_num_image_tokens_from_image_size(r,t))}}}},"./src/models/phi3_v/processing_phi3_v.js":(t,r,s)=>{s.r(r),s.d(r,{Phi3VProcessor:()=>u});var i=s("./src/base/processing_utils.js"),a=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");s("./src/utils/image.js");let o="<|image|>",l=/<\|image_\d+\|>/g;class u extends i.Processor{static image_processor_class=a.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;async _call(t,r=null,{padding:s=!0,truncation:i=!0,num_crops:a=null}={}){let n,u;if(Array.isArray(t)||(t=[t]),r){let{num_img_tokens:d}=u=await this.image_processor(r,{num_crops:a}),c=t.map((t,r)=>t.split(l).join(o.repeat(d[r])));n=this.tokenizer(c,{padding:s,truncation:i});let p=this.tokenizer.model.convert_tokens_to_ids([o])[0];n.input_ids.map_(t=>t==p?-t:t)}else n=this.tokenizer(t);return{...n,...u}}}},"./src/models/processors.js":(t,r,s)=>{s.r(r),s.d(r,{Florence2Processor:()=>i.Florence2Processor,GroundingDinoProcessor:()=>a.GroundingDinoProcessor,Idefics3Processor:()=>n.Idefics3Processor,JinaCLIPProcessor:()=>l.JinaCLIPProcessor,MgpstrProcessor:()=>u.MgpstrProcessor,MoonshineProcessor:()=>d.MoonshineProcessor,OwlViTProcessor:()=>c.OwlViTProcessor,PaliGemmaProcessor:()=>h.PaliGemmaProcessor,Phi3VProcessor:()=>p.Phi3VProcessor,PyAnnoteProcessor:()=>m.PyAnnoteProcessor,Qwen2VLProcessor:()=>f.Qwen2VLProcessor,SamProcessor:()=>g.SamProcessor,SpeechT5Processor:()=>_.SpeechT5Processor,VLChatProcessor:()=>o.VLChatProcessor,Wav2Vec2Processor:()=>b.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>y.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>w.WhisperProcessor});var i=s("./src/models/florence2/processing_florence2.js"),a=s("./src/models/grounding_dino/processing_grounding_dino.js"),n=s("./src/models/idefics3/processing_idefics3.js"),o=s("./src/models/janus/processing_janus.js"),l=s("./src/models/jina_clip/processing_jina_clip.js"),u=s("./src/models/mgp_str/processing_mgp_str.js"),d=s("./src/models/moonshine/processing_moonshine.js"),c=s("./src/models/owlvit/processing_owlvit.js"),p=s("./src/models/phi3_v/processing_phi3_v.js"),h=s("./src/models/paligemma/processing_paligemma.js"),m=s("./src/models/pyannote/processing_pyannote.js"),f=s("./src/models/qwen2_vl/processing_qwen2_vl.js"),g=s("./src/models/sam/processing_sam.js"),_=s("./src/models/speecht5/processing_speecht5.js"),b=s("./src/models/wav2vec2/processing_wav2vec2.js"),y=s("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),w=s("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(t,r,s)=>{s.r(r),s.d(r,{PvtImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(t,r,s)=>{s.r(r),s.d(r,{PyAnnoteFeatureExtractor:()=>o});var i=s("./src/base/feature_extraction_utils.js"),a=s("./src/utils/tensor.js"),n=s("./src/utils/maths.js");class o extends i.FeatureExtractor{async _call(t){(0,i.validate_audio_inputs)(t,"PyAnnoteFeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=[1,1,t.length];return{input_values:new a.Tensor("float32",t,r)}}samples_to_frames(t){return(t-this.config.offset)/this.config.step}post_process_speaker_diarization(t,r){let s=r/this.samples_to_frames(r)/this.config.sampling_rate,i=[];for(let r of t.tolist()){let t=[],a=-1;for(let s=0;s<r.length;++s){let i=(0,n.softmax)(r[s]),[o,l]=(0,n.max)(i),[u,d]=[s,s+1];l!==a?(a=l,t.push({id:l,start:u,end:d,score:o})):(t.at(-1).end=d,t.at(-1).score+=o)}i.push(t.map(({id:t,start:r,end:i,score:a})=>({id:t,start:r*s,end:i*s,confidence:a/(i-r)})))}return i}}},"./src/models/pyannote/processing_pyannote.js":(t,r,s)=>{s.r(r),s.d(r,{PyAnnoteProcessor:()=>n});var i=s("./src/base/processing_utils.js"),a=s("./src/models/pyannote/feature_extraction_pyannote.js");class n extends i.Processor{static feature_extractor_class=a.PyAnnoteFeatureExtractor;async _call(t){return await this.feature_extractor(t)}post_process_speaker_diarization(...t){return this.feature_extractor.post_process_speaker_diarization(...t)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(t,r,s)=>{s.r(r),s.d(r,{Qwen2VLImageProcessor:()=>n});var i=s("./src/base/image_processors_utils.js"),a=s("./src/utils/tensor.js");class n extends i.ImageProcessor{async _call(t,...r){let{pixel_values:s,original_sizes:i,reshaped_input_sizes:n}=await super._call(t,...r),o=s,{temporal_patch_size:l,merge_size:u,patch_size:d}=this.config;1===o.dims[0]&&(o=(0,a.cat)(Array.from({length:l},()=>o),0));let c=o.dims[0]/l,p=o.dims[1],h=Math.floor(o.dims[2]/d),m=Math.floor(o.dims[3]/d);return{pixel_values:o.view(c,l,p,Math.floor(h/u),u,d,Math.floor(m/u),u,d).permute(0,3,6,4,7,2,1,5,8).view(c*h*m,p*l*d*d),image_grid_thw:new a.Tensor("int64",[c,h,m],[1,3]),original_sizes:i,reshaped_input_sizes:n}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(t,r,s)=>{s.r(r),s.d(r,{Qwen2VLProcessor:()=>o});var i=s("./src/base/processing_utils.js"),a=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");s("./src/utils/image.js");class o extends i.Processor{static image_processor_class=a.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;async _call(t,r=null,...s){let i,a;if(Array.isArray(t)||(t=[t]),r&&(a=(i=await this.image_processor(r)).image_grid_thw),a){let r=this.image_processor.config.merge_size**2,s=0,i=a.tolist();t=t.map(t=>{for(;t.includes("<|image_pad|>");){let a=Number(i[s++].reduce((t,r)=>t*r,1n));t=t.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(a/r)))}return t.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(t),...i}}}},"./src/models/rt_detr/image_processing_rt_detr.js":(t,r,s)=>{s.r(r),s.d(r,{RTDetrImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{post_process_object_detection(...t){return(0,i.post_process_object_detection)(...t)}}},"./src/models/sam/image_processing_sam.js":(t,r,s)=>{s.r(r),s.d(r,{SamImageProcessor:()=>o});var i=s("./src/base/image_processors_utils.js"),a=s("./src/utils/core.js"),n=s("./src/utils/tensor.js");class o extends i.ImageProcessor{reshape_input_points(t,r,s,i=!1){t=structuredClone(t);let o=(0,a.calculateDimensions)(t);if(3===o.length)i||(o=[1,...o]),t=[t];else if(4!==o.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let i=0;i<t.length;++i){let a=r[i],n=s[i],o=[n[0]/a[0],n[1]/a[1]];for(let r=0;r<t[i].length;++r)for(let s=0;s<t[i][r].length;++s)for(let a=0;a<t[i][r][s].length;++a)t[i][r][s][a]*=o[a%2]}return new n.Tensor("float32",Float32Array.from(t.flat(1/0)),o)}add_input_labels(t,r){let s=(0,a.calculateDimensions)(t);if(2===s.length)s=[1,...s],t=[t];else if(3!==s.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(s.some((t,s)=>t!==r.dims[s]))throw Error(`The first ${s.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new n.Tensor("int64",t.flat(1/0).map(BigInt),s)}async _call(t,{input_points:r=null,input_labels:s=null,input_boxes:i=null}={}){let a=await super._call(t);if(r&&(a.input_points=this.reshape_input_points(r,a.original_sizes,a.reshaped_input_sizes)),s){if(!a.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");a.input_labels=this.add_input_labels(s,a.input_points)}return i&&(a.input_boxes=this.reshape_input_points(i,a.original_sizes,a.reshaped_input_sizes,!0)),a}async post_process_masks(t,r,s,{mask_threshold:i=0,binarize:a=!0,pad_size:o=null}={}){let l=[],u=[(o=o??this.pad_size).height,o.width];for(let o=0;o<r.length;++o){let d=r[o],c=s[o],p=await (0,n.interpolate_4d)(t[o],{mode:"bilinear",size:u});if(p=p.slice(null,null,[0,c[0]],[0,c[1]]),p=await (0,n.interpolate_4d)(p,{mode:"bilinear",size:d}),a){let t=p.data,r=new Uint8Array(t.length);for(let s=0;s<t.length;++s)t[s]>i&&(r[s]=1);p=new n.Tensor("bool",r,p.dims)}l.push(p)}return l}generate_crop_boxes(t,r,{crop_n_layers:s=0,overlap_ratio:i=512/1500,points_per_crop:a=32,crop_n_points_downscale_factor:n=1}={}){}}},"./src/models/sam/processing_sam.js":(t,r,s)=>{s.r(r),s.d(r,{SamProcessor:()=>n});var i=s("./src/base/processing_utils.js"),a=s("./src/models/auto/image_processing_auto.js");class n extends i.Processor{static image_processor_class=a.AutoImageProcessor;async _call(...t){return await this.image_processor(...t)}post_process_masks(...t){return this.image_processor.post_process_masks(...t)}reshape_input_points(...t){return this.image_processor.reshape_input_points(...t)}}},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(t,r,s)=>{s.r(r),s.d(r,{SeamlessM4TFeatureExtractor:()=>o});var i=s("./src/base/feature_extraction_utils.js"),a=s("./src/utils/tensor.js"),n=s("./src/utils/audio.js");class o extends i.FeatureExtractor{constructor(t){super(t);let r=this.config.sampling_rate,s=(0,n.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);for(let t=0;t<s.length;++t)s[t].push(0);this.mel_filters=s,this.window=(0,n.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(t,r){return t=t.map(t=>32768*t),(0,n.spectrogram)(t,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:r,transpose:!0})}async _call(t,{padding:r=!0,pad_to_multiple_of:s=2,do_normalize_per_mel_bins:n=!0,return_attention_mask:o=!0}={}){let l;(0,i.validate_audio_inputs)(t,"SeamlessM4TFeatureExtractor");let u=await this._extract_fbank_features(t,this.config.max_length);if(n){let[t,r]=u.dims,s=u.data;for(let i=0;i<r;++i){let a=0;for(let n=0;n<t;++n)a+=s[n*r+i];let n=a/t,o=0;for(let a=0;a<t;++a)o+=(s[a*r+i]-n)**2;let l=Math.sqrt((o/=t-1)+1e-7);for(let a=0;a<t;++a){let t=a*r+i;s[t]=(s[t]-n)/l}}}if(r){let[t,r]=u.dims,i=u.data,n=t%s;if(n>0){let s=new Float32Array(r*(t+n));s.set(i),s.fill(this.config.padding_value,i.length);let d=t+n;u=new a.Tensor(u.type,s,[d,r]),o&&(l=new a.Tensor("int64",new BigInt64Array(d),[1,d])).data.fill(1n,0,t)}}let[d,c]=u.dims,p=this.config.stride;if(0!=d%p)throw Error(`The number of frames (${d}) must be a multiple of the stride (${p}).`);let h=u.view(1,Math.floor(d/p),c*p),m={input_features:h};if(o){let t=h.dims[1],r=new BigInt64Array(t);if(l){let t=l.data;for(let s=1,i=0;s<d;s+=p,++i)r[i]=t[s]}else r.fill(1n);m.attention_mask=new a.Tensor("int64",r,[1,t])}return m}}},"./src/models/segformer/image_processing_segformer.js":(t,r,s)=>{s.r(r),s.d(r,{SegformerFeatureExtractor:()=>n,SegformerImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{post_process_semantic_segmentation(...t){return(0,i.post_process_semantic_segmentation)(...t)}}class n extends a{}},"./src/models/siglip/image_processing_siglip.js":(t,r,s)=>{s.r(r),s.d(r,{SiglipImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(t,r,s)=>{s.r(r),s.d(r,{SpeechT5FeatureExtractor:()=>a});var i=s("./src/base/feature_extraction_utils.js");class a extends i.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(t,r,s)=>{s.r(r),s.d(r,{SpeechT5Processor:()=>o});var i=s("./src/base/processing_utils.js"),a=s("./src/tokenizers.js"),n=s("./src/models/auto/feature_extraction_auto.js");class o extends i.Processor{static tokenizer_class=a.AutoTokenizer;static feature_extractor_class=n.AutoFeatureExtractor;async _call(t){return await this.feature_extractor(t)}}},"./src/models/swin2sr/image_processing_swin2sr.js":(t,r,s)=>{s.r(r),s.d(r,{Swin2SRImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{pad_image(t,r,s,i={}){let[a,n,o]=r;return super.pad_image(t,r,{width:n+(s-n%s)%s,height:a+(s-a%s)%s},{mode:"symmetric",center:!1,constant_values:-1,...i})}}},"./src/models/vit/image_processing_vit.js":(t,r,s)=>{s.r(r),s.d(r,{ViTFeatureExtractor:()=>n,ViTImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{}class n extends a{}},"./src/models/vitmatte/image_processing_vitmatte.js":(t,r,s)=>{s.r(r),s.d(r,{VitMatteImageProcessor:()=>n});var i=s("./src/base/image_processors_utils.js"),a=s("./src/utils/tensor.js");class n extends i.ImageProcessor{async _call(t,r){Array.isArray(t)||(t=[t]),Array.isArray(r)||(r=[r]);let s=await Promise.all(t.map(t=>this.preprocess(t))),i=await Promise.all(r.map(t=>this.preprocess(t,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,a.stack)(s.map((t,r)=>(0,a.cat)([t.pixel_values,i[r].pixel_values],0)),0),original_sizes:s.map(t=>t.original_size),reshaped_input_sizes:s.map(t=>t.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(t,r,s)=>{s.r(r),s.d(r,{VitPoseImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{post_process_pose_estimation(t,r,{threshold:s=null}={}){let i=t.tolist(),[a,n,o,l]=t.dims,u=[];for(let t=0;t<a;++t){let a=i[t],n=r[t],d=[];for(let t=0;t<n.length;++t){let r=n[t],i=[],u=[],c=[],p=r.at(-2)/l,h=r.at(-1)/o;for(let t=0;t<a.length;++t){let[r,n]=[0,0],o=0,l=-1/0,d=a[t];for(let t=0;t<d.length;++t){let s=d[t];for(let i=0;i<s.length;++i){let a=s[i];o+=a,l=Math.max(l,a),r+=(i+.5)*a,n+=t*a}}if(null!=s&&l<s)continue;let m=[p*r/o,h*n/o];i.push(m),c.push(t),u.push(l)}d.push({bbox:r,scores:u,labels:c,keypoints:i})}u.push(d)}return u}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(t,r,s)=>{s.r(r),s.d(r,{Wav2Vec2FeatureExtractor:()=>n});var i=s("./src/base/feature_extraction_utils.js"),a=s("./src/utils/tensor.js");class n extends i.FeatureExtractor{_zero_mean_unit_var_norm(t){let r=t.reduce((t,r)=>t+r,0)/t.length,s=t.reduce((t,s)=>t+(s-r)**2,0)/t.length;return t.map(t=>(t-r)/Math.sqrt(s+1e-7))}async _call(t){(0,i.validate_audio_inputs)(t,"Wav2Vec2FeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=t;this.config.do_normalize&&(r=this._zero_mean_unit_var_norm(r));let s=[1,r.length];return{input_values:new a.Tensor("float32",r,s),attention_mask:new a.Tensor("int64",new BigInt64Array(r.length).fill(1n),s)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(t,r,s)=>{s.r(r),s.d(r,{Wav2Vec2Processor:()=>o});var i=s("./src/tokenizers.js"),a=s("./src/models/auto/feature_extraction_auto.js"),n=s("./src/base/processing_utils.js");class o extends n.Processor{static tokenizer_class=i.AutoTokenizer;static feature_extractor_class=a.AutoFeatureExtractor;async _call(t){return await this.feature_extractor(t)}}},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(t,r,s)=>{s.r(r),s.d(r,{Wav2Vec2ProcessorWithLM:()=>o});var i=s("./src/tokenizers.js"),a=s("./src/models/auto/feature_extraction_auto.js"),n=s("./src/base/processing_utils.js");class o extends n.Processor{static tokenizer_class=i.AutoTokenizer;static feature_extractor_class=a.AutoFeatureExtractor;async _call(t){return await this.feature_extractor(t)}}},"./src/models/wespeaker/feature_extraction_wespeaker.js":(t,r,s)=>{s.r(r),s.d(r,{WeSpeakerFeatureExtractor:()=>n});var i=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var a=s("./src/utils/audio.js");class n extends i.FeatureExtractor{constructor(t){super(t);let r=this.config.sampling_rate,s=(0,a.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);for(let t=0;t<s.length;++t)s[t].push(0);this.mel_filters=s,this.window=(0,a.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(t){return t=t.map(t=>32768*t),(0,a.spectrogram)(t,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(t){(0,i.validate_audio_inputs)(t,"WeSpeakerFeatureExtractor");let r=(await this._extract_fbank_features(t)).unsqueeze_(0);if(null===this.config.fbank_centering_span){let t=r.mean(1).data,s=r.data,[i,a,n]=r.dims;for(let r=0;r<i;++r){let i=r*a*n,o=r*n;for(let r=0;r<a;++r){let a=i+r*n;for(let r=0;r<n;++r)s[a+r]-=t[o+r]}}}return{input_features:r}}}},"./src/models/whisper/common_whisper.js":(t,r,s)=>{s.r(r),s.d(r,{WHISPER_LANGUAGE_MAPPING:()=>a,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>n,whisper_language_to_code:()=>o});let i=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],a=new Map(i),n=new Map([...i.map(([t,r])=>[r,t]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function o(t){t=t.toLowerCase();let r=n.get(t);if(void 0===r){if(a.has(t))r=t;else{let r=2===t.length?a.keys():a.values();throw Error(`Language "${t}" is not supported. Must be one of: ${JSON.stringify(r)}`)}}return r}},"./src/models/whisper/feature_extraction_whisper.js":(t,r,s)=>{s.r(r),s.d(r,{WhisperFeatureExtractor:()=>o});var i=s("./src/base/feature_extraction_utils.js");s("./src/utils/tensor.js");var a=s("./src/utils/audio.js"),n=s("./src/utils/maths.js");class o extends i.FeatureExtractor{constructor(t){super(t),this.config.mel_filters??=(0,a.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,a.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(t){let r=await (0,a.spectrogram)(t,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),s=r.data,i=(0,n.max)(s)[0];for(let t=0;t<s.length;++t)s[t]=(Math.max(s[t],i-8)+4)/4;return r}async _call(t){let r;return(0,i.validate_audio_inputs)(t,"WhisperFeatureExtractor"),t.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),r=t.slice(0,this.config.n_samples)):(r=new Float32Array(this.config.n_samples)).set(t),{input_features:(await this._extract_fbank_features(r)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(t,r,s)=>{s.r(r),s.d(r,{WhisperGenerationConfig:()=>a});var i=s("./src/generation/configuration_utils.js");class a extends i.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/models/whisper/processing_whisper.js":(t,r,s)=>{s.r(r),s.d(r,{WhisperProcessor:()=>o});var i=s("./src/models/auto/feature_extraction_auto.js"),a=s("./src/tokenizers.js"),n=s("./src/base/processing_utils.js");class o extends n.Processor{static tokenizer_class=a.AutoTokenizer;static feature_extractor_class=i.AutoFeatureExtractor;async _call(t){return await this.feature_extractor(t)}}},"./src/models/yolos/image_processing_yolos.js":(t,r,s)=>{s.r(r),s.d(r,{YolosFeatureExtractor:()=>n,YolosImageProcessor:()=>a});var i=s("./src/base/image_processors_utils.js");class a extends i.ImageProcessor{post_process_object_detection(...t){return(0,i.post_process_object_detection)(...t)}}class n extends a{}},"./src/ops/registry.js":(t,r,s)=>{s.r(r),s.d(r,{TensorOpRegistry:()=>u});var i=s("./src/backends/onnx.js"),a=s("./src/utils/tensor.js"),n=s("./src/env.js");let o=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV,l=async(t,r,s)=>{let n=await (0,i.createInferenceSession)(new Uint8Array(t),r),l=Promise.resolve();return async t=>{let r=(0,i.isONNXProxy)(),u=Object.fromEntries(Object.entries(t).map(([t,s])=>[t,(r?s.clone():s).ort_tensor])),d=await (l=o?l.then(()=>n.run(u)):n.run(u));return Array.isArray(s)?s.map(t=>new a.Tensor(d[t])):new a.Tensor(d[s])}};class u{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=l([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=l([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=l([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=l([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=l([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=l([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=l([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=l([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}},"./src/pipelines.js":(t,r,s)=>{s.r(r),s.d(r,{AudioClassificationPipeline:()=>P,AutomaticSpeechRecognitionPipeline:()=>I,DepthEstimationPipeline:()=>j,DocumentQuestionAnsweringPipeline:()=>N,FeatureExtractionPipeline:()=>C,FillMaskPipeline:()=>w,ImageClassificationPipeline:()=>F,ImageFeatureExtractionPipeline:()=>S,ImageSegmentationPipeline:()=>z,ImageToImagePipeline:()=>R,ImageToTextPipeline:()=>A,ObjectDetectionPipeline:()=>L,Pipeline:()=>g,QuestionAnsweringPipeline:()=>y,SummarizationPipeline:()=>v,Text2TextGenerationPipeline:()=>x,TextClassificationPipeline:()=>_,TextGenerationPipeline:()=>k,TextToAudioPipeline:()=>D,TokenClassificationPipeline:()=>b,TranslationPipeline:()=>M,ZeroShotAudioClassificationPipeline:()=>E,ZeroShotClassificationPipeline:()=>$,ZeroShotImageClassificationPipeline:()=>O,ZeroShotObjectDetectionPipeline:()=>B,pipeline:()=>U});var i=s("./src/tokenizers.js"),a=s("./src/models.js"),n=s("./src/models/auto/processing_auto.js");s("./src/base/processing_utils.js");var o=s("./src/utils/generic.js"),l=s("./src/utils/core.js"),u=s("./src/utils/maths.js"),d=s("./src/utils/audio.js"),c=s("./src/utils/tensor.js"),p=s("./src/utils/image.js");async function h(t){return Array.isArray(t)||(t=[t]),await Promise.all(t.map(t=>p.RawImage.read(t)))}async function m(t,r){return Array.isArray(t)||(t=[t]),await Promise.all(t.map(t=>"string"==typeof t||t instanceof URL?(0,d.read_audio)(t,r):t instanceof Float64Array?new Float32Array(t):t))}function f(t,r){r&&(t=t.map(t=>0|t));let[s,i,a,n]=t;return{xmin:s,ymin:i,xmax:a,ymax:n}}class g extends o.Callable{constructor({task:t,model:r,tokenizer:s=null,processor:i=null}){super(),this.task=t,this.model=r,this.tokenizer=s,this.processor=i}async dispose(){await this.model.dispose()}}class _ extends g{constructor(t){super(t)}async _call(t,{top_k:r=1}={}){let s=this.tokenizer(t,{padding:!0,truncation:!0}),i=await this.model(s),a="multi_label_classification"===this.model.config.problem_type?t=>t.sigmoid():t=>new c.Tensor("float32",(0,u.softmax)(t.data),t.dims),n=this.model.config.id2label,o=[];for(let t of i.logits){let s=a(t),i=await (0,c.topk)(s,r),l=i[0].tolist(),u=i[1].tolist().map((t,r)=>({label:n?n[t]:`LABEL_${t}`,score:l[r]}));1===r?o.push(...u):o.push(u)}return Array.isArray(t)||1===r?o:o[0]}}class b extends g{constructor(t){super(t)}async _call(t,{ignore_labels:r=["O"]}={}){let s=Array.isArray(t),i=this.tokenizer(s?t:[t],{padding:!0,truncation:!0}),a=(await this.model(i)).logits,n=this.model.config.id2label,o=[];for(let t=0;t<a.dims[0];++t){let s=i.input_ids[t],l=a[t],d=[];for(let t=0;t<l.dims[0];++t){let i=l[t],a=(0,u.max)(i.data)[1],o=n?n[a]:`LABEL_${a}`;if(r.includes(o))continue;let c=this.tokenizer.decode([s[t].item()],{skip_special_tokens:!0});if(""===c)continue;let p=(0,u.softmax)(i.data);d.push({entity:o,score:p[a],index:t,word:c})}o.push(d)}return s?o:o[0]}}class y extends g{constructor(t){super(t)}async _call(t,r,{top_k:s=1}={}){let i=this.tokenizer(t,{text_pair:r,padding:!0,truncation:!0}),{start_logits:a,end_logits:n}=await this.model(i),o=i.input_ids.tolist(),d=i.attention_mask.tolist(),c=this.tokenizer.all_special_ids,p=[];for(let t=0;t<a.dims[0];++t){let r=o[t],i=r.findIndex(t=>t==this.tokenizer.sep_token_id);d[t].map((t,s)=>1==t&&(0===s||s>i&&-1===c.findIndex(t=>t==r[s])));let h=a[t].tolist(),m=n[t].tolist();for(let s=1;s<h.length;++s)(0==d[t]||s<=i||-1!==c.findIndex(t=>t==r[s]))&&(h[s]=-1/0,m[s]=-1/0);let f=(0,u.softmax)(h).map((t,r)=>[t,r]),g=(0,u.softmax)(m).map((t,r)=>[t,r]);f[0][0]=0,g[0][0]=0;let _=(0,l.product)(f,g).filter(t=>t[0][1]<=t[1][1]).map(t=>[t[0][1],t[1][1],t[0][0]*t[1][0]]).sort((t,r)=>r[2]-t[2]);for(let t=0;t<Math.min(_.length,s);++t){let[s,i,a]=_[t],n=r.slice(s,i+1),o=this.tokenizer.decode(n,{skip_special_tokens:!0});p.push({answer:o,score:a})}}return 1===s?p[0]:p}}class w extends g{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let s=this.tokenizer(t,{padding:!0,truncation:!0}),{logits:i}=await this.model(s),a=[],n=s.input_ids.tolist();for(let t=0;t<n.length;++t){let s=n[t],o=s.findIndex(t=>t==this.tokenizer.mask_token_id);if(-1===o)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);let l=i[t][o],d=await (0,c.topk)(new c.Tensor("float32",(0,u.softmax)(l.data),l.dims),r),p=d[0].tolist(),h=d[1].tolist();a.push(h.map((t,r)=>{let i=s.slice();return i[o]=t,{score:p[r],token:Number(t),token_str:this.tokenizer.decode([t]),sequence:this.tokenizer.decode(i,{skip_special_tokens:!0})}}))}return Array.isArray(t)?a:a[0]}}class x extends g{_key="generated_text";constructor(t){super(t)}async _call(t,r={}){let s;Array.isArray(t)||(t=[t]),this.model.config.prefix&&(t=t.map(t=>this.model.config.prefix+t));let i=this.model.config.task_specific_params;i&&i[this.task]&&i[this.task].prefix&&(t=t.map(t=>i[this.task].prefix+t));let a=this.tokenizer,n={padding:!0,truncation:!0};s=this instanceof M&&"_build_translation_inputs"in a?a._build_translation_inputs(t,n,r):a(t,n);let o=await this.model.generate({...s,...r});return a.batch_decode(o,{skip_special_tokens:!0}).map(t=>({[this._key]:t}))}}class v extends x{_key="summary_text";constructor(t){super(t)}}class M extends x{_key="translation_text";constructor(t){super(t)}}function T(t){return Array.isArray(t)&&t.every(t=>"role"in t&&"content"in t)}class k extends g{constructor(t){super(t)}async _call(t,r={}){let s,i,a=!1,n=!1;if("string"==typeof t)s=t=[t];else if(Array.isArray(t)&&t.every(t=>"string"==typeof t))a=!0,s=t;else{if(T(t))t=[t];else if(Array.isArray(t)&&t.every(T))a=!0;else throw Error("Input must be a string, an array of strings, a Chat, or an array of Chats");n=!0,s=t.map(t=>this.tokenizer.apply_chat_template(t,{tokenize:!1,add_generation_prompt:!0}))}let o=r.add_special_tokens??!1,l=!n&&(r.return_full_text??!0);this.tokenizer.padding_side="left";let u=this.tokenizer(s,{add_special_tokens:o,padding:!0,truncation:!0}),d=await this.model.generate({...u,...r}),c=this.tokenizer.batch_decode(d,{skip_special_tokens:!0});!l&&u.input_ids.dims.at(-1)>0&&(i=this.tokenizer.batch_decode(u.input_ids,{skip_special_tokens:!0}).map(t=>t.length));let p=Array.from({length:t.length},t=>[]);for(let r=0;r<c.length;++r){let s=Math.floor(r/d.dims[0]*t.length);i&&(c[r]=c[r].slice(i[s])),p[s].push({generated_text:n?[...t[s],{role:"assistant",content:c[r]}]:c[r]})}return a||1!==p.length?p:p[0]}}class $ extends g{constructor(t){super(t),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([t,r])=>[t.toLowerCase(),r])),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(t,r,{hypothesis_template:s="This example is {}.",multi_label:i=!1}={}){let a=Array.isArray(t);a||(t=[t]),Array.isArray(r)||(r=[r]);let n=r.map(t=>s.replace("{}",t)),o=i||1===r.length,l=[];for(let s of t){let t=[];for(let r of n){let i=this.tokenizer(s,{text_pair:r,padding:!0,truncation:!0}),a=await this.model(i);o?t.push([a.logits.data[this.contradiction_id],a.logits.data[this.entailment_id]]):t.push(a.logits.data[this.entailment_id])}let i=(o?t.map(t=>(0,u.softmax)(t)[1]):(0,u.softmax)(t)).map((t,r)=>[t,r]).sort((t,r)=>r[0]-t[0]);l.push({sequence:s,labels:i.map(t=>r[t[1]]),scores:i.map(t=>t[0])})}return a?l:l[0]}}class C extends g{constructor(t){super(t)}async _call(t,{pooling:r="none",normalize:s=!1,quantize:i=!1,precision:a="binary"}={}){let n=this.tokenizer(t,{padding:!0,truncation:!0}),o=await this.model(n),l=o.last_hidden_state??o.logits??o.token_embeddings;if("none"===r);else if("mean"===r)l=(0,c.mean_pooling)(l,n.attention_mask);else if("cls"===r)l=l.slice(null,0);else throw Error(`Pooling method '${r}' not supported.`);return s&&(l=l.normalize(2,-1)),i&&(l=(0,c.quantize_embeddings)(l,a)),l}}class S extends g{constructor(t){super(t)}async _call(t,{pool:r=null}={}){let s;let i=await h(t),{pixel_values:a}=await this.processor(i),n=await this.model({pixel_values:a});if(r){if(!("pooler_output"in n))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");s=n.pooler_output}else s=n.last_hidden_state??n.logits??n.image_embeds;return s}}class P extends g{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let s=this.processor.feature_extractor.config.sampling_rate,i=await m(t,s),a=this.model.config.id2label,n=[];for(let t of i){let s=await this.processor(t),i=(await this.model(s)).logits[0],o=await (0,c.topk)(new c.Tensor("float32",(0,u.softmax)(i.data),i.dims),r),l=o[0].tolist(),d=o[1].tolist().map((t,r)=>({label:a?a[t]:`LABEL_${t}`,score:l[r]}));n.push(d)}return Array.isArray(t)?n:n[0]}}class E extends g{constructor(t){super(t)}async _call(t,r,{hypothesis_template:s="This is a sound of {}."}={}){let i=!Array.isArray(t);i&&(t=[t]);let a=r.map(t=>s.replace("{}",t)),n=this.tokenizer(a,{padding:!0,truncation:!0}),o=this.processor.feature_extractor.config.sampling_rate,l=await m(t,o),d=[];for(let t of l){let s=await this.processor(t),i=await this.model({...n,...s}),a=(0,u.softmax)(i.logits_per_audio.data);d.push([...a].map((t,s)=>({score:t,label:r[s]})))}return i?d[0]:d}}class I extends g{constructor(t){super(t)}async _call(t,r={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(t,r);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(t,r);case"moonshine":return this._call_moonshine(t,r);default:throw Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(t,r){r.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),r.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');let s=!Array.isArray(t);s&&(t=[t]);let i=this.processor.feature_extractor.config.sampling_rate,a=await m(t,i),n=[];for(let t of a){let r=await this.processor(t),s=(await this.model(r)).logits[0],i=[];for(let t of s)i.push((0,u.max)(t.data)[1]);let a=this.tokenizer.decode(i);n.push({text:a})}return s?n[0]:n}async _call_whisper(t,r){let s=r.return_timestamps??!1,i=r.chunk_length_s??0,a=r.force_full_sequences??!1,n=r.stride_length_s??null,o={...r};"word"===s&&(o.return_token_timestamps=!0,o.return_timestamps=!1);let l=!Array.isArray(t);l&&(t=[t]);let d=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,c=this.processor.feature_extractor.config.hop_length,p=this.processor.feature_extractor.config.sampling_rate,h=await m(t,p),f=[];for(let t of h){let r=[];if(i>0){if(null===n)n=i/6;else if(i<=n)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");let s=p*i,a=p*n,o=s-2*a,l=0;for(;;){let i=l+s,n=t.subarray(l,i),u=await this.processor(n),d=0===l,c=i>=t.length;if(r.push({stride:[n.length,d?0:a,c?0:a],input_features:u.input_features,is_last:c}),c)break;l+=o}}else r=[{stride:[t.length,0,0],input_features:(await this.processor(t)).input_features,is_last:!0}];for(let t of r){o.num_frames=Math.floor(t.stride[0]/c);let r=await this.model.generate({inputs:t.input_features,...o});"word"===s?(t.tokens=r.sequences.tolist()[0],t.token_timestamps=r.token_timestamps.tolist()[0].map(t=>(0,u.round)(t,2))):t.tokens=r[0].tolist(),t.stride=t.stride.map(t=>t/p)}let[l,h]=this.tokenizer._decode_asr(r,{time_precision:d,return_timestamps:s,force_full_sequences:a});f.push({text:l,...h})}return l?f[0]:f}async _call_moonshine(t,r){let s=!Array.isArray(t);s&&(t=[t]);let i=this.processor.feature_extractor.config.sampling_rate,a=await m(t,i),n=[];for(let t of a){let s=await this.processor(t),a=6*Math.floor(t.length/i),o=await this.model.generate({max_new_tokens:a,...r,...s}),l=this.processor.batch_decode(o,{skip_special_tokens:!0})[0];n.push({text:l})}return s?n[0]:n}}class A extends g{constructor(t){super(t)}async _call(t,r={}){let s=Array.isArray(t),i=await h(t),{pixel_values:a}=await this.processor(i),n=[];for(let t of a){t.dims=[1,...t.dims];let s=await this.model.generate({inputs:t,...r}),i=this.tokenizer.batch_decode(s,{skip_special_tokens:!0}).map(t=>({generated_text:t.trim()}));n.push(i)}return s?n:n[0]}}class F extends g{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let s=await h(t),{pixel_values:i}=await this.processor(s),a=await this.model({pixel_values:i}),n=this.model.config.id2label,o=[];for(let t of a.logits){let s=await (0,c.topk)(new c.Tensor("float32",(0,u.softmax)(t.data),t.dims),r),i=s[0].tolist(),a=s[1].tolist().map((t,r)=>({label:n?n[t]:`LABEL_${t}`,score:i[r]}));o.push(a)}return Array.isArray(t)?o:o[0]}}class z extends g{constructor(t){super(t),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(t,{threshold:r=.5,mask_threshold:s=.5,overlap_mask_area_threshold:i=.8,label_ids_to_fuse:a=null,target_sizes:n=null,subtask:o=null}={}){if(Array.isArray(t)&&1!==t.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");let l=await h(t),u=l.map(t=>[t.height,t.width]),{pixel_values:d,pixel_mask:c}=await this.processor(l),m=await this.model({pixel_values:d,pixel_mask:c}),f=null;if(null!==o)f=this.subtasks_mapping[o];else for(let[t,r]of Object.entries(this.subtasks_mapping))if(r in this.processor.image_processor){f=this.processor.image_processor[r].bind(this.processor.image_processor),o=t;break}let g=this.model.config.id2label,_=[];if("panoptic"===o||"instance"===o){let t=f(m,r,s,i,a,n??u)[0],o=t.segmentation;for(let r of t.segments_info){let t=new Uint8ClampedArray(o.data.length);for(let s=0;s<o.data.length;++s)o.data[s]===r.id&&(t[s]=255);let s=new p.RawImage(t,o.dims[1],o.dims[0],1);_.push({score:r.score,label:g[r.label_id],mask:s})}}else if("semantic"===o){let{segmentation:t,labels:r}=f(m,n??u)[0];for(let s of r){let r=new Uint8ClampedArray(t.data.length);for(let i=0;i<t.data.length;++i)t.data[i]===s&&(r[i]=255);let i=new p.RawImage(r,t.dims[1],t.dims[0],1);_.push({score:null,label:g[s],mask:i})}}else throw Error(`Subtask ${o} not supported.`);return _}}class O extends g{constructor(t){super(t)}async _call(t,r,{hypothesis_template:s="This is a photo of {}"}={}){let i=Array.isArray(t),a=await h(t),n=r.map(t=>s.replace("{}",t)),o=this.tokenizer(n,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:l}=await this.processor(a),d=await this.model({...o,pixel_values:l}),c="siglip"===this.model.config.model_type?t=>t.sigmoid().data:t=>(0,u.softmax)(t.data),p=[];for(let t of d.logits_per_image){let s=[...c(t)].map((t,s)=>({score:t,label:r[s]}));s.sort((t,r)=>r.score-t.score),p.push(s)}return i?p:p[0]}}class L extends g{constructor(t){super(t)}async _call(t,{threshold:r=.9,percentage:s=!1}={}){let i=Array.isArray(t);if(i&&1!==t.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");let a=await h(t),n=s?null:a.map(t=>[t.height,t.width]),{pixel_values:o,pixel_mask:l}=await this.processor(a),u=await this.model({pixel_values:o,pixel_mask:l}),d=this.processor.image_processor.post_process_object_detection(u,r,n),c=this.model.config.id2label,p=d.map(t=>t.boxes.map((r,i)=>({score:t.scores[i],label:c[t.classes[i]],box:f(r,!s)})));return i?p:p[0]}}class B extends g{constructor(t){super(t)}async _call(t,r,{threshold:s=.1,top_k:i=null,percentage:a=!1}={}){let n=Array.isArray(t),o=await h(t),l=this.tokenizer(r,{padding:!0,truncation:!0}),u=await this.processor(o),d=[];for(let t=0;t<o.length;++t){let n;let c=o[t],p=a?null:[[c.height,c.width]],h=u.pixel_values[t].unsqueeze_(0),m=await this.model({...l,pixel_values:h});if("post_process_grounded_object_detection"in this.processor){let t=this.processor.post_process_grounded_object_detection(m,l.input_ids,{box_threshold:s,text_threshold:s,target_sizes:p})[0];n=t.boxes.map((r,s)=>({score:t.scores[s],label:t.labels[s],box:f(r,!a)}))}else{let t=this.processor.image_processor.post_process_object_detection(m,s,p,!0)[0];n=t.boxes.map((s,i)=>({score:t.scores[i],label:r[t.classes[i]],box:f(s,!a)}))}n.sort((t,r)=>r.score-t.score),null!==i&&(n=n.slice(0,i)),d.push(n)}return n?d:d[0]}}class N extends g{constructor(t){super(t)}async _call(t,r,s={}){let i=(await h(t))[0],{pixel_values:a}=await this.processor(i),n=`<s_docvqa><s_question>${r}</s_question><s_answer>`,o=this.tokenizer(n,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,l=await this.model.generate({inputs:a,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:o,...s}),u=this.tokenizer.batch_decode(l)[0].match(/<s_answer>(.*?)<\/s_answer>/),d=null;return u&&u.length>=2&&(d=u[1].trim()),[{answer:d}]}}class D extends g{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(t){super(t),this.vocoder=t.vocoder??null}async _call(t,{speaker_embeddings:r=null}={}){return this.processor?this._call_text_to_spectrogram(t,{speaker_embeddings:r}):this._call_text_to_waveform(t)}async _call_text_to_waveform(t){let r=this.tokenizer(t,{padding:!0,truncation:!0}),{waveform:s}=await this.model(r),i=this.model.config.sampling_rate;return new d.RawAudio(s.data,i)}async _call_text_to_spectrogram(t,{speaker_embeddings:r}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await a.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof r||r instanceof URL)&&(r=new Float32Array(await (await fetch(r)).arrayBuffer())),r instanceof Float32Array)r=new c.Tensor("float32",r,[1,r.length]);else if(!(r instanceof c.Tensor))throw Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");let{input_ids:s}=this.tokenizer(t,{padding:!0,truncation:!0}),{waveform:i}=await this.model.generate_speech(s,r,{vocoder:this.vocoder}),n=this.processor.feature_extractor.config.sampling_rate;return new d.RawAudio(i.data,n)}}class R extends g{constructor(t){super(t)}async _call(t){let r=await h(t),s=await this.processor(r),i=await this.model(s),a=[];for(let t of i.reconstruction){let r=t.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");a.push(p.RawImage.fromTensor(r))}return a.length>1?a:a[0]}}class j extends g{constructor(t){super(t)}async _call(t){let r=await h(t),s=await this.processor(r),{predicted_depth:i}=await this.model(s),a=[];for(let t=0;t<r.length;++t){let s=i[t],[n,o]=s.dims.slice(-2),[l,u]=r[t].size,d=(await (0,c.interpolate_4d)(s.view(1,1,n,o),{size:[u,l],mode:"bilinear"})).view(u,l),h=d.min().item(),m=d.max().item(),f=d.sub(h).div_(m-h).mul_(255).to("uint8").unsqueeze(0),g=p.RawImage.fromTensor(f);a.push({predicted_depth:d,depth:g})}return a.length>1?a:a[0]}}let V=Object.freeze({"text-classification":{tokenizer:i.AutoTokenizer,pipeline:_,model:a.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:i.AutoTokenizer,pipeline:b,model:a.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:i.AutoTokenizer,pipeline:y,model:a.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:i.AutoTokenizer,pipeline:w,model:a.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:i.AutoTokenizer,pipeline:v,model:a.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:i.AutoTokenizer,pipeline:M,model:a.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:i.AutoTokenizer,pipeline:x,model:a.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:i.AutoTokenizer,pipeline:k,model:a.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:i.AutoTokenizer,pipeline:$,model:a.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:P,model:a.AutoModelForAudioClassification,processor:n.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:i.AutoTokenizer,pipeline:E,model:a.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:i.AutoTokenizer,pipeline:I,model:[a.AutoModelForSpeechSeq2Seq,a.AutoModelForCTC],processor:n.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:i.AutoTokenizer,pipeline:D,model:[a.AutoModelForTextToWaveform,a.AutoModelForTextToSpectrogram],processor:[n.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:i.AutoTokenizer,pipeline:A,model:a.AutoModelForVision2Seq,processor:n.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:F,model:a.AutoModelForImageClassification,processor:n.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:z,model:[a.AutoModelForImageSegmentation,a.AutoModelForSemanticSegmentation,a.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:i.AutoTokenizer,pipeline:O,model:a.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:L,model:a.AutoModelForObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:i.AutoTokenizer,pipeline:B,model:a.AutoModelForZeroShotObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:i.AutoTokenizer,pipeline:N,model:a.AutoModelForDocumentQuestionAnswering,processor:n.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:R,model:a.AutoModelForImageToImage,processor:n.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:j,model:a.AutoModelForDepthEstimation,processor:n.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:i.AutoTokenizer,pipeline:C,model:a.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:n.AutoProcessor,pipeline:S,model:[a.AutoModelForImageFeatureExtraction,a.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),G=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function U(t,r=null,{progress_callback:s=null,config:i=null,cache_dir:a=null,local_files_only:n=!1,revision:o="main",device:u=null,dtype:d=null,model_file_name:c=null,session_options:p={}}={}){let h=V[(t=G[t]??t).split("_",1)[0]];if(!h)throw Error(`Unsupported pipeline: ${t}. Must be one of [${Object.keys(V)}]`);r||(r=h.default.model,console.log(`No model specified. Using default model: "${r}".`));let m=new Map([["tokenizer",h.tokenizer],["model",h.model],["processor",h.processor]]),f=await q(m,r,{progress_callback:s,config:i,cache_dir:a,local_files_only:n,revision:o,device:u,dtype:d,model_file_name:c,session_options:p});return f.task=t,(0,l.dispatchCallback)(s,{status:"ready",task:t,model:r}),new h.pipeline(f)}async function q(t,r,s){let i=Object.create(null),a=[];for(let[n,o]of t.entries()){let t;o&&(t=Array.isArray(o)?new Promise(async(t,i)=>{let a;for(let n of o){if(null===n){t(null);return}try{t(await n.from_pretrained(r,s));return}catch(t){if(t.message?.includes("Unsupported model type"))a=t;else if(t.message?.includes("Could not locate file"))a=t;else{i(t);return}}}i(a)}):o.from_pretrained(r,s),i[n]=t,a.push(t))}for(let[t,r]of(await Promise.all(a),Object.entries(i)))i[t]=await r;return i}},"./src/tokenizers.js":(t,r,s)=>{s.r(r),s.d(r,{AlbertTokenizer:()=>ex,AutoTokenizer:()=>tr,BartTokenizer:()=>eO,BertTokenizer:()=>ew,BlenderbotSmallTokenizer:()=>e8,BlenderbotTokenizer:()=>e6,BloomTokenizer:()=>eD,CLIPTokenizer:()=>e1,CamembertTokenizer:()=>eE,CodeGenTokenizer:()=>e0,CodeLlamaTokenizer:()=>ej,CohereTokenizer:()=>te,ConvBertTokenizer:()=>eC,DebertaTokenizer:()=>eT,DebertaV2Tokenizer:()=>ek,DistilBertTokenizer:()=>eP,ElectraTokenizer:()=>eA,EsmTokenizer:()=>eW,FalconTokenizer:()=>eU,GPT2Tokenizer:()=>ez,GPTNeoXTokenizer:()=>eq,GemmaTokenizer:()=>eK,Grok1Tokenizer:()=>eQ,HerbertTokenizer:()=>e$,LlamaTokenizer:()=>eR,M2M100Tokenizer:()=>eY,MBart50Tokenizer:()=>eB,MBartTokenizer:()=>eL,MPNetTokenizer:()=>eG,MarianTokenizer:()=>e3,MgpstrTokenizer:()=>tt,MobileBertTokenizer:()=>ev,NllbTokenizer:()=>eJ,NougatTokenizer:()=>e9,PreTrainedTokenizer:()=>ey,Qwen2Tokenizer:()=>eH,RoFormerTokenizer:()=>eS,RobertaTokenizer:()=>eN,SiglipTokenizer:()=>e2,SpeechT5Tokenizer:()=>e5,SqueezeBertTokenizer:()=>eM,T5Tokenizer:()=>eF,TokenizerModel:()=>T,VitsTokenizer:()=>e7,Wav2Vec2CTCTokenizer:()=>e4,WhisperTokenizer:()=>eZ,XLMRobertaTokenizer:()=>eV,XLMTokenizer:()=>eI,is_chinese_char:()=>b});var i=s("./src/utils/generic.js"),a=s("./src/utils/core.js"),n=s("./src/utils/hub.js"),o=s("./src/utils/maths.js"),l=s("./src/utils/tensor.js"),u=s("./src/utils/data-structures.js"),d=s("./node_modules/@huggingface/jinja/dist/index.js"),c=s("./src/models/whisper/common_whisper.js");async function p(t,r){let s=await Promise.all([(0,n.getModelJSON)(t,"tokenizer.json",!0,r),(0,n.getModelJSON)(t,"tokenizer_config.json",!0,r)]);return null!==r.legacy&&(s[1].legacy=r.legacy),s}function h(t,r=!0){if(void 0!==t.Regex){let r=t.Regex.replace(/\\([#&~])/g,"$1");for(let[t,s]of v)r=r.replaceAll(t,s);return RegExp(r,"gu")}if(void 0===t.String)return console.warn("Unknown pattern type:",t),null;{let s=(0,a.escapeRegExp)(t.String);return RegExp(r?s:`(${s})`,"gu")}}function m(t){return new Map(Object.entries(t))}function f(t){let r=t.dims;switch(r.length){case 1:return t.tolist();case 2:if(1!==r[0])throw Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return t.tolist()[0];default:throw Error(`Expected tensor to have 1-2 dimensions, got ${r.length}.`)}}function g(t){return t.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function _(t){return t.replace(/\p{M}/gu,"")}function b(t){return t>=19968&&t<=40959||t>=13312&&t<=19903||t>=131072&&t<=173791||t>=173824&&t<=177983||t>=177984&&t<=178207||t>=178208&&t<=183983||t>=63744&&t<=64255||t>=194560&&t<=195103}let y="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",w=RegExp(`^[${y}]+$`,"gu"),x=".,!?…。，、।۔،",v=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${x}])]+`,` ?[^\\s${x}]+`]]);class M{constructor(t){this.content=t.content,this.id=t.id,this.single_word=t.single_word??!1,this.lstrip=t.lstrip??!1,this.rstrip=t.rstrip??!1,this.special=t.special??!1,this.normalized=t.normalized??null}}class T extends i.Callable{constructor(t){super(),this.config=t,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(t,...r){switch(t.type){case"WordPiece":return new k(t);case"Unigram":return new $(t,...r);case"BPE":return new P(t);default:if(t.vocab){if(Array.isArray(t.vocab))return new $(t,...r);if("object"==typeof t.vocab&&t.continuing_subword_prefix&&t.unk_token)return new k(t);return new E(t,...r)}throw Error(`Unknown TokenizerModel type: ${t.type}`)}}_call(t){return t=this.encode(t),this.fuse_unk&&(t=function(t,r,s){let i=[],a=0;for(;a<t.length;){if(i.push(t[a]),(r.get(t[a])??s)!==s){++a;continue}for(;++a<t.length&&(r.get(t[a])??s)===s;)r.get(i.at(-1))!==s&&(i[i.length-1]+=t[a])}return i}(t,this.tokens_to_ids,this.unk_token_id)),t}encode(t){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(t){return t.map(t=>this.tokens_to_ids.get(t)??this.unk_token_id)}convert_ids_to_tokens(t){return t.map(t=>this.vocab[t]??this.unk_token)}}class k extends T{constructor(t){for(let[r,s]of(super(t),this.tokens_to_ids=m(t.vocab),this.unk_token_id=this.tokens_to_ids.get(t.unk_token),this.unk_token=t.unk_token,this.max_input_chars_per_word=t.max_input_chars_per_word??100,this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[s]=r}encode(t){let r=[];for(let s of t){let t=[...s];if(t.length>this.max_input_chars_per_word){r.push(this.unk_token);continue}let i=!1,a=0,n=[];for(;a<t.length;){let r=t.length,s=null;for(;a<r;){let i=t.slice(a,r).join("");if(a>0&&(i=this.config.continuing_subword_prefix+i),this.tokens_to_ids.has(i)){s=i;break}--r}if(null===s){i=!0;break}n.push(s),a=r}i?r.push(this.unk_token):r.push(...n)}return r}}class $ extends T{constructor(t,r){super(t);let s=t.vocab.length;this.vocab=Array(s),this.scores=Array(s);for(let r=0;r<s;++r)[this.vocab[r],this.scores[r]]=t.vocab[r];this.unk_token_id=t.unk_id,this.unk_token=this.vocab[t.unk_id],this.tokens_to_ids=new Map(this.vocab.map((t,r)=>[t,r])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=r.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,o.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new u.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(t){let r=t.chars,s=0;for(;s<r.length;){let i=!1,n=[],o=r.slice(s).join("");for(let r of this.trie.commonPrefixSearch(o)){n.push(r);let o=this.tokens_to_ids.get(r),l=this.scores[o],u=(0,a.len)(r);t.insert(s,u,l,o),i||1!==u||(i=!0)}i||t.insert(s,1,this.unk_score,this.unk_token_id),s+=1}}tokenize(t){let r=new u.TokenLattice(t,this.bos_token_id,this.eos_token_id);return this.populateNodes(r),r.tokens()}encode(t){let r=[];for(let s of t){let t=this.tokenize(s);r.push(...t)}return r}}let C=(()=>{let t=[...Array.from({length:94},(t,r)=>r+33),...Array.from({length:12},(t,r)=>r+161),...Array.from({length:82},(t,r)=>r+174)],r=t.slice(),s=0;for(let i=0;i<256;++i)t.includes(i)||(t.push(i),r.push(256+s),s+=1);let i=r.map(t=>String.fromCharCode(t));return Object.fromEntries(t.map((t,r)=>[t,i[r]]))})(),S=(0,a.reverseDictionary)(C);class P extends T{constructor(t){for(let[r,s]of(super(t),this.tokens_to_ids=m(t.vocab),this.unk_token_id=this.tokens_to_ids.get(t.unk_token),this.unk_token=t.unk_token,this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[s]=r;let r=Array.isArray(t.merges[0]);this.merges=r?t.merges:t.merges.map(t=>t.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((t,r)=>[JSON.stringify(t),r])),this.end_of_word_suffix=t.end_of_word_suffix,this.continuing_subword_suffix=t.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(t){if(0===t.length)return[];let r=this.cache.get(t);if(void 0!==r)return r;let s=Array.from(t);this.end_of_word_suffix&&(s[s.length-1]+=this.end_of_word_suffix);let i=[];if(s.length>1){let t=new u.PriorityQueue((t,r)=>t.score<r.score),r={token:s[0],bias:0,prev:null,next:null},a=r;for(let r=1;r<s.length;++r){let i={bias:r/s.length,token:s[r],prev:a,next:null};a.next=i,this._add_node(t,a),a=i}for(;!t.isEmpty();){let s=t.pop();if(s.deleted||!s.next||s.next.deleted)continue;if(s.deleted=!0,s.next.deleted=!0,s.prev){let t={...s.prev};s.prev.deleted=!0,s.prev=t,t.prev?t.prev.next=t:r=t}let i={token:s.token+s.next.token,bias:s.bias,prev:s.prev,next:s.next.next};i.prev?(i.prev.next=i,this._add_node(t,i.prev)):r=i,i.next&&(i.next.prev=i,this._add_node(t,i))}for(let t=r;null!==t;t=t.next)i.push(t.token)}else i=s;if(this.continuing_subword_suffix)for(let t=0;t<i.length-1;++t)i[t]+=this.continuing_subword_suffix;return this.cache.set(t,i),i}_add_node(t,r){let s=this.bpe_ranks.get(JSON.stringify([r.token,r.next.token]));void 0!==s&&(r.score=s+r.bias,t.push(r))}encode(t){let r=[];for(let s of t){if(this.ignore_merges&&this.tokens_to_ids.has(s)){r.push(s);continue}for(let t of this.bpe(s))if(this.tokens_to_ids.has(t))r.push(t);else if(this.byte_fallback){let s=Array.from(this.text_encoder.encode(t)).map(t=>`<0x${t.toString(16).toUpperCase().padStart(2,"0")}>`);s.every(t=>this.tokens_to_ids.has(t))?r.push(...s):r.push(this.unk_token)}else r.push(this.unk_token)}return r}}class E extends T{constructor(t,r){for(let[s,i]of(super(t),this.tokens_to_ids=m(r.target_lang?t.vocab[r.target_lang]:t.vocab),this.bos_token=r.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=r.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=r.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=r.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[i]=s}encode(t){return t}}class I extends i.Callable{constructor(t){super(),this.config=t}static fromConfig(t){if(null===t)return null;switch(t.type){case"BertNormalizer":return new j(t);case"Precompiled":return new eh(t);case"Sequence":return new R(t);case"Replace":return new A(t);case"NFC":return new F(t);case"NFKC":return new z(t);case"NFKD":return new O(t);case"Strip":return new L(t);case"StripAccents":return new B(t);case"Lowercase":return new N(t);case"Prepend":return new D(t);default:throw Error(`Unknown Normalizer type: ${t.type}`)}}normalize(t){throw Error("normalize should be implemented in subclass.")}_call(t){return this.normalize(t)}}class A extends I{normalize(t){let r=h(this.config.pattern);return null===r?t:t.replaceAll(r,this.config.content)}}class F extends I{normalize(t){return t=t.normalize("NFC")}}class z extends I{normalize(t){return t=t.normalize("NFKC")}}class O extends I{normalize(t){return t=t.normalize("NFKD")}}class L extends I{normalize(t){return this.config.strip_left&&this.config.strip_right?t=t.trim():(this.config.strip_left&&(t=t.trimStart()),this.config.strip_right&&(t=t.trimEnd())),t}}class B extends I{normalize(t){return t=_(t)}}class N extends I{normalize(t){return t=t.toLowerCase()}}class D extends I{normalize(t){return t=this.config.prepend+t}}class R extends I{constructor(t){super(t),this.normalizers=t.normalizers.map(t=>I.fromConfig(t))}normalize(t){return this.normalizers.reduce((t,r)=>r.normalize(t),t)}}class j extends I{_tokenize_chinese_chars(t){let r=[];for(let s=0;s<t.length;++s){let i=t[s];b(i.charCodeAt(0))?(r.push(" "),r.push(i),r.push(" ")):r.push(i)}return r.join("")}stripAccents(t){return t.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(t){switch(t){case"	":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(t)}}_clean_text(t){let r=[];for(let s of t){let t=s.charCodeAt(0);0===t||65533===t||this._is_control(s)||(/^\s$/.test(s)?r.push(" "):r.push(s))}return r.join("")}normalize(t){return this.config.clean_text&&(t=this._clean_text(t)),this.config.handle_chinese_chars&&(t=this._tokenize_chinese_chars(t)),this.config.lowercase?(t=t.toLowerCase(),!1!==this.config.strip_accents&&(t=this.stripAccents(t))):this.config.strip_accents&&(t=this.stripAccents(t)),t}}class V extends i.Callable{static fromConfig(t){if(null===t)return null;switch(t.type){case"BertPreTokenizer":return new G(t);case"Sequence":return new em(t);case"Whitespace":return new ef(t);case"WhitespaceSplit":return new eg(t);case"Metaspace":return new ec(t);case"ByteLevel":return new U(t);case"Split":return new q(t);case"Punctuation":return new W(t);case"Digits":return new H(t);case"Replace":return new e_(t);default:throw Error(`Unknown PreTokenizer type: ${t.type}`)}}pre_tokenize_text(t,r){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(t,r){return(Array.isArray(t)?t.map(t=>this.pre_tokenize_text(t,r)):this.pre_tokenize_text(t,r)).flat()}_call(t,r){return this.pre_tokenize(t,r)}}class G extends V{constructor(t){super(),this.pattern=RegExp(`[^\\s${y}]+|[${y}]`,"gu")}pre_tokenize_text(t,r){return t.trim().match(this.pattern)||[]}}class U extends V{constructor(t){super(),this.config=t,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=C,this.text_encoder=new TextEncoder}pre_tokenize_text(t,r){return this.add_prefix_space&&!t.startsWith(" ")&&(t=" "+t),(this.use_regex?t.match(this.pattern)||[]:[t]).map(t=>Array.from(this.text_encoder.encode(t),t=>this.byte_encoder[t]).join(""))}}class q extends V{constructor(t){super(),this.config=t,this.pattern=h(this.config.pattern,this.config.invert)}pre_tokenize_text(t,r){return null===this.pattern?[]:this.config.invert?t.match(this.pattern)||[]:this.config.behavior?.toLowerCase()==="removed"?t.split(this.pattern).filter(t=>t):function(t,r){let s=[],i=0;for(let a of t.matchAll(r)){let r=a[0];i<a.index&&s.push(t.slice(i,a.index)),r.length>0&&s.push(r),i=a.index+r.length}return i<t.length&&s.push(t.slice(i)),s}(t,this.pattern)}}class W extends V{constructor(t){super(),this.config=t,this.pattern=RegExp(`[^${y}]+|[${y}]+`,"gu")}pre_tokenize_text(t,r){return t.match(this.pattern)||[]}}class H extends V{constructor(t){super(),this.config=t;let r=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=RegExp(r,"gu")}pre_tokenize_text(t,r){return t.match(this.pattern)||[]}}class K extends i.Callable{constructor(t){super(),this.config=t}static fromConfig(t){if(null===t)return null;switch(t.type){case"TemplateProcessing":return new J(t);case"ByteLevel":return new Y(t);case"RobertaProcessing":return new X(t);case"BertProcessing":return new Q(t);case"Sequence":return new Z(t);default:throw Error(`Unknown PostProcessor type: ${t.type}`)}}post_process(t,...r){throw Error("post_process should be implemented in subclass.")}_call(t,...r){return this.post_process(t,...r)}}class Q extends K{constructor(t){super(t),this.cls=t.cls[0],this.sep=t.sep[0]}post_process(t,r=null,{add_special_tokens:s=!0}={}){s&&(t=(0,a.mergeArrays)([this.cls],t,[this.sep]));let i=Array(t.length).fill(0);if(null!==r){let n=s&&this instanceof X?[this.sep]:[],o=s?[this.sep]:[];t=(0,a.mergeArrays)(t,n,r,o),i=(0,a.mergeArrays)(i,Array(r.length+n.length+o.length).fill(1))}return{tokens:t,token_type_ids:i}}}class X extends Q{}class J extends K{constructor(t){super(t),this.single=t.single,this.pair=t.pair}post_process(t,r=null,{add_special_tokens:s=!0}={}){let i=null===r?this.single:this.pair,n=[],o=[];for(let l of i)"SpecialToken"in l?s&&(n.push(l.SpecialToken.id),o.push(l.SpecialToken.type_id)):"Sequence"in l&&("A"===l.Sequence.id?(n=(0,a.mergeArrays)(n,t),o=(0,a.mergeArrays)(o,Array(t.length).fill(l.Sequence.type_id))):"B"===l.Sequence.id&&(n=(0,a.mergeArrays)(n,r),o=(0,a.mergeArrays)(o,Array(r.length).fill(l.Sequence.type_id))));return{tokens:n,token_type_ids:o}}}class Y extends K{post_process(t,r=null){return r&&(t=(0,a.mergeArrays)(t,r)),{tokens:t}}}class Z extends K{constructor(t){super(t),this.processors=t.processors.map(t=>K.fromConfig(t))}post_process(t,r=null,s={}){let i;for(let a of this.processors)if(a instanceof Y)t=a.post_process(t).tokens,r&&(r=a.post_process(r).tokens);else{let n=a.post_process(t,r,s);t=n.tokens,i=n.token_type_ids}return{tokens:t,token_type_ids:i}}}class ee extends i.Callable{constructor(t){super(),this.config=t,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=t.trim_offsets}static fromConfig(t){if(null===t)return null;switch(t.type){case"WordPiece":return new ea(t);case"Metaspace":return new ep(t);case"ByteLevel":return new en(t);case"Replace":return new et(t);case"ByteFallback":return new er(t);case"Fuse":return new es(t);case"Strip":return new ei(t);case"Sequence":return new el(t);case"CTC":return new eo(t);case"BPEDecoder":return new eu(t);default:throw Error(`Unknown Decoder type: ${t.type}`)}}_call(t){return this.decode(t)}decode(t){return this.decode_chain(t).join("")}decode_chain(t){throw Error("`decode_chain` should be implemented in subclass.")}}class et extends ee{decode_chain(t){let r=h(this.config.pattern);return null===r?t:t.map(t=>t.replaceAll(r,this.config.content))}}class er extends ee{constructor(t){super(t),this.text_decoder=new TextDecoder}decode_chain(t){let r=[],s=[];for(let i of t){let t=null;if(6===i.length&&i.startsWith("<0x")&&i.endsWith(">")){let r=parseInt(i.slice(3,5),16);isNaN(r)||(t=r)}if(null!==t)s.push(t);else{if(s.length>0){let t=this.text_decoder.decode(Uint8Array.from(s));r.push(t),s=[]}r.push(i)}}if(s.length>0){let t=this.text_decoder.decode(Uint8Array.from(s));r.push(t),s=[]}return r}}class es extends ee{decode_chain(t){return[t.join("")]}}class ei extends ee{constructor(t){super(t),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(t){return t.map(t=>{let r=0;for(let s=0;s<this.start;++s){if(t[s]===this.content){r=s+1;continue}break}let s=t.length;for(let r=0;r<this.stop;++r){let i=t.length-r-1;if(t[i]===this.content){s=i;continue}break}return t.slice(r,s)})}}class ea extends ee{constructor(t){super(t),this.cleanup=t.cleanup}decode_chain(t){return t.map((t,r)=>(0!==r&&(t=t.startsWith(this.config.prefix)?t.replace(this.config.prefix,""):" "+t),this.cleanup&&(t=g(t)),t))}}class en extends ee{constructor(t){super(t),this.byte_decoder=S,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(t){let r=new Uint8Array([...t.join("")].map(t=>this.byte_decoder[t]));return this.text_decoder.decode(r)}decode_chain(t){let r=[],s=[];for(let i of t)void 0!==this.added_tokens.find(t=>t.content===i)?(s.length>0&&(r.push(this.convert_tokens_to_string(s)),s=[]),r.push(i)):s.push(i);return s.length>0&&r.push(this.convert_tokens_to_string(s)),r}}class eo extends ee{constructor(t){super(t),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(t){if(0===t.length)return"";let r=[t[0]];for(let s=1;s<t.length;++s)t[s]!==r.at(-1)&&r.push(t[s]);let s=r.filter(t=>t!==this.pad_token).join("");return this.cleanup&&(s=g(s).replaceAll(this.word_delimiter_token," ").trim()),s}decode_chain(t){return[this.convert_tokens_to_string(t)]}}class el extends ee{constructor(t){super(t),this.decoders=t.decoders.map(t=>ee.fromConfig(t))}decode_chain(t){return this.decoders.reduce((t,r)=>r.decode_chain(t),t)}}class eu extends ee{constructor(t){super(t),this.suffix=this.config.suffix}decode_chain(t){return t.map((r,s)=>r.replaceAll(this.suffix,s===t.length-1?"":" "))}}class ed extends ee{decode_chain(t){let r="";for(let s=1;s<t.length;s+=2)r+=t[s];return[r]}}class ec extends V{constructor(t){super(),this.addPrefixSpace=t.add_prefix_space,this.replacement=t.replacement,this.strRep=t.str_rep||this.replacement,this.prepend_scheme=t.prepend_scheme??"always"}pre_tokenize_text(t,{section_index:r}={}){let s=t.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!s.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===r)&&(s=this.strRep+s),[s]}}class ep extends ee{constructor(t){super(t),this.addPrefixSpace=t.add_prefix_space,this.replacement=t.replacement}decode_chain(t){let r=[];for(let s=0;s<t.length;++s){let i=t[s].replaceAll(this.replacement," ");this.addPrefixSpace&&0==s&&i.startsWith(" ")&&(i=i.substring(1)),r.push(i)}return r}}class eh extends I{constructor(t){super(t),this.charsmap=t.precompiled_charsmap}normalize(t){return t=(t=(t=t.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")?t.split("～").map(t=>t.normalize("NFKC")).join("～"):t.normalize("NFKC")}}class em extends V{constructor(t){super(),this.tokenizers=t.pretokenizers.map(t=>V.fromConfig(t))}pre_tokenize_text(t,r){return this.tokenizers.reduce((t,s)=>s.pre_tokenize(t,r),[t])}}class ef extends V{constructor(t){super()}pre_tokenize_text(t,r){return t.match(/\w+|[^\w\s]+/g)||[]}}class eg extends V{constructor(t){super()}pre_tokenize_text(t,r){return t.match(/\S+/g)||[]}}class e_ extends V{constructor(t){super(),this.config=t,this.pattern=h(this.config.pattern),this.content=this.config.content}pre_tokenize_text(t,r){return null===this.pattern?[t]:[t.replaceAll(this.pattern,this.config.content)]}}let eb=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];class ey extends i.Callable{return_token_type_ids=!1;padding_side="right";constructor(t,r){for(let s of(super(),this._tokenizer_config=r,this.normalizer=I.fromConfig(t.normalizer),this.pre_tokenizer=V.fromConfig(t.pre_tokenizer),this.model=T.fromConfig(t.model,r),this.post_processor=K.fromConfig(t.post_processor),this.decoder=ee.fromConfig(t.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[],t.added_tokens)){let t=new M(s);this.added_tokens.push(t),this.model.tokens_to_ids.set(t.content,t.id),this.model.vocab[t.id]=t.content,t.special&&(this.special_tokens.push(t.content),this.all_special_ids.push(t.id))}if(this.additional_special_tokens=r.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((t,r)=>r.content.length-t.content.length).map(t=>`${t.lstrip?"\\s*":""}(${(0,a.escapeRegExp)(t.content)})${t.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=r.model_max_length,this.remove_space=r.remove_space,this.clean_up_tokenization_spaces=r.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=r.do_lowercase_and_remove_accent??!1,r.padding_side&&(this.padding_side=r.padding_side),this.legacy=!1,this.chat_template=r.chat_template??null,Array.isArray(this.chat_template)){let t=Object.create(null);for(let{name:r,template:s}of this.chat_template){if("string"!=typeof r||"string"!=typeof s)throw Error('Chat template must be a list of objects with "name" and "template" properties');t[r]=s}this.chat_template=t}this._compiled_template_cache=new Map}getToken(...t){for(let r of t){let t=this._tokenizer_config[r];if(t){if("object"!=typeof t)return t;if("AddedToken"===t.__type)return t.content;throw Error(`Unknown token: ${t}`)}}return null}static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:a=!1,revision:n="main",legacy:o=null}={}){return new this(...await p(t,{progress_callback:r,config:s,cache_dir:i,local_files_only:a,revision:n,legacy:o}))}_call(t,{text_pair:r=null,add_special_tokens:s=!0,padding:i=!1,truncation:n=null,max_length:u=null,return_tensor:d=!0,return_token_type_ids:c=null}={}){let p;let h=Array.isArray(t);if(h){if(0===t.length)throw Error("text array must be non-empty");if(null!==r){if(Array.isArray(r)){if(t.length!==r.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");p=t.map((t,i)=>this._encode_plus(t,{text_pair:r[i],add_special_tokens:s,return_token_type_ids:c}))}else p=t.map(t=>this._encode_plus(t,{add_special_tokens:s,return_token_type_ids:c}))}else{if(null==t)throw Error("text may not be null or undefined");if(Array.isArray(r))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");p=[this._encode_plus(t,{text_pair:r,add_special_tokens:s,return_token_type_ids:c})]}if(null===u?u="max_length"===i?this.model_max_length:(0,o.max)(p.map(t=>t.input_ids.length))[0]:n||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),u=Math.min(u,this.model_max_length??1/0),i||n)for(let t=0;t<p.length;++t)p[t].input_ids.length!==u&&(p[t].input_ids.length>u?n&&function(t,r){for(let s of Object.keys(t))t[s].length=r}(p[t],u):i&&function(t,r,s,i){for(let n of Object.keys(t)){let o=r-t[n].length,l=s(n),u=Array(o).fill(l);t[n]="right"===i?(0,a.mergeArrays)(t[n],u):(0,a.mergeArrays)(u,t[n])}}(p[t],u,t=>"input_ids"===t?this.pad_token_id:0,this.padding_side));let m={};if(d){if(!(i&&n)&&p.some(t=>{for(let r of Object.keys(t))if(t[r].length!==p[0][r]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");let t=[p.length,p[0].input_ids.length];for(let r of Object.keys(p[0]))m[r]=new l.Tensor("int64",BigInt64Array.from(p.flatMap(t=>t[r]).map(BigInt)),t)}else{for(let t of Object.keys(p[0]))m[t]=p.map(r=>r[t]);if(!h)for(let t of Object.keys(m))m[t]=m[t][0]}return m}_encode_text(t){return null===t?null:(this.added_tokens_regex?t.split(this.added_tokens_regex).filter(t=>t):[t]).map((t,r)=>{if(void 0!==this.added_tokens.find(r=>r.content===t))return t;{if(!0===this.remove_space&&(t=t.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(t=_(t.toLowerCase())),null!==this.normalizer&&(t=this.normalizer(t)),0===t.length)return[];let s=null!==this.pre_tokenizer?this.pre_tokenizer(t,{section_index:r}):[t];return this.model(s)}}).flat()}_encode_plus(t,{text_pair:r=null,add_special_tokens:s=!0,return_token_type_ids:i=null}={}){let{tokens:a,token_type_ids:n}=this._tokenize_helper(t,{pair:r,add_special_tokens:s}),o=this.model.convert_tokens_to_ids(a),l={input_ids:o,attention_mask:Array(o.length).fill(1)};return(i??this.return_token_type_ids)&&n&&(l.token_type_ids=n),l}_tokenize_helper(t,{pair:r=null,add_special_tokens:s=!1}={}){let i=this._encode_text(t),n=this._encode_text(r);return this.post_processor?this.post_processor(i,n,{add_special_tokens:s}):{tokens:(0,a.mergeArrays)(i??[],n??[])}}tokenize(t,{pair:r=null,add_special_tokens:s=!1}={}){return this._tokenize_helper(t,{pair:r,add_special_tokens:s}).tokens}encode(t,{text_pair:r=null,add_special_tokens:s=!0,return_token_type_ids:i=null}={}){return this._encode_plus(t,{text_pair:r,add_special_tokens:s,return_token_type_ids:i}).input_ids}batch_decode(t,r={}){return t instanceof l.Tensor&&(t=t.tolist()),t.map(t=>this.decode(t,r))}decode(t,r={}){if(t instanceof l.Tensor&&(t=f(t)),!Array.isArray(t)||0===t.length||!(0,a.isIntegralNumber)(t[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(t,r)}decode_single(t,{skip_special_tokens:r=!1,clean_up_tokenization_spaces:s=null}){let i=this.model.convert_ids_to_tokens(t);r&&(i=i.filter(t=>!this.special_tokens.includes(t)));let a=this.decoder?this.decoder(i):i.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(a=a.replaceAll(this.decoder.end_of_word_suffix," "),r&&(a=a.trim())),(s??this.clean_up_tokenization_spaces)&&(a=g(a)),a}get_chat_template({chat_template:t=null,tools:r=null}={}){if(this.chat_template&&"object"==typeof this.chat_template){let s=this.chat_template;if(null!==t&&Object.hasOwn(s,t))t=s[t];else if(null===t){if(null!==r&&"tool_use"in s)t=s.tool_use;else if("default"in s)t=s.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(s).sort()}.`)}}else if(null===t){if(this.chat_template)t=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating")}return t}apply_chat_template(t,{tools:r=null,documents:s=null,chat_template:i=null,add_generation_prompt:a=!1,tokenize:n=!0,padding:o=!1,truncation:l=!1,max_length:u=null,return_tensor:c=!0,return_dict:p=!1,tokenizer_kwargs:h={},...m}={}){if("string"!=typeof(i=this.get_chat_template({chat_template:i,tools:r})))throw Error(`chat_template must be a string, but got ${typeof i}`);let f=this._compiled_template_cache.get(i);void 0===f&&(f=new d.Template(i),this._compiled_template_cache.set(i,f));let g=Object.create(null);for(let t of eb){let r=this.getToken(t);r&&(g[t]=r)}let _=f.render({messages:t,add_generation_prompt:a,tools:r,documents:s,...g,...m});if(n){let t=this._call(_,{add_special_tokens:!1,padding:o,truncation:l,max_length:u,return_tensor:c,...h});return p?t:t.input_ids}return _}}class ew extends ey{return_token_type_ids=!0}class ex extends ey{return_token_type_ids=!0}class ev extends ey{return_token_type_ids=!0}class eM extends ey{return_token_type_ids=!0}class eT extends ey{return_token_type_ids=!0}class ek extends ey{return_token_type_ids=!0}class e$ extends ey{return_token_type_ids=!0}class eC extends ey{return_token_type_ids=!0}class eS extends ey{return_token_type_ids=!0}class eP extends ey{}class eE extends ey{}class eI extends ey{return_token_type_ids=!0;constructor(t,r){super(t,r),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class eA extends ey{return_token_type_ids=!0}class eF extends ey{}class ez extends ey{}class eO extends ey{}class eL extends ey{constructor(t,r){super(t,r),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)),this.lang_to_token=t=>t}_build_translation_inputs(t,r,s){return eX(this,t,r,s)}}class eB extends eL{}class eN extends ey{}class eD extends ey{}class eR extends ey{padding_side="left";constructor(t,r){super(t,r),this.legacy=r.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new ec({replacement:"▁",add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(t){if(null===t)return null;if(this.legacy||0===t.length)return super._encode_text(t);let r=super._encode_text("▁"+t.replaceAll("▁"," "));return r.length>1&&"▁"===r[0]&&this.special_tokens.includes(r[1])&&(r=r.slice(1)),r}}class ej extends ey{}class eV extends ey{}class eG extends ey{}class eU extends ey{}class eq extends ey{}class eW extends ey{}class eH extends ey{}class eK extends ey{}class eQ extends ey{}function eX(t,r,s,i){if(!("language_codes"in t)||!Array.isArray(t.language_codes))throw Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in t)||!(t.languageRegex instanceof RegExp))throw Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in t)||"function"!=typeof t.lang_to_token)throw Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");let a=i.src_lang,n=i.tgt_lang;if(!t.language_codes.includes(n))throw Error(`Target language code "${n}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);if(void 0!==a){if(!t.language_codes.includes(a))throw Error(`Source language code "${a}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);for(let r of t.post_processor.config.single)if("SpecialToken"in r&&t.languageRegex.test(r.SpecialToken.id)){r.SpecialToken.id=t.lang_to_token(a);break}}return i.forced_bos_token_id=t.model.convert_tokens_to_ids([t.lang_to_token(n)])[0],t._call(r,s)}class eJ extends ey{constructor(t,r){super(t,r),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)),this.lang_to_token=t=>t}_build_translation_inputs(t,r,s){return eX(this,t,r,s)}}class eY extends ey{constructor(t,r){super(t,r),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)).map(t=>t.slice(2,-2)),this.lang_to_token=t=>`__${t}__`}_build_translation_inputs(t,r,s){return eX(this,t,r,s)}}class eZ extends ey{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(t,{return_timestamps:r=!1,return_language:s=!1,time_precision:i=null,force_full_sequences:a=!0}={}){if(null===i)throw Error("Must specify time_precision");let n=null,l="word"===r;function u(){return{language:n,timestamp:[null,null],text:""}}let d=[],p=u(),h=0,m=this.timestamp_begin,f=m+1500,g=[],_=[],b=!1,y=null,x=new Set(this.all_special_ids);for(let s of t){let t=s.tokens,a=l?s.token_timestamps:null,v=null,M=m;if("stride"in s){let[r,a,n]=s.stride;if(h-=a,y=r-n,a&&(M=a/i+m),n)for(let r=t.length-1;r>=0;--r){let s=Number(t[r]);if(s>=m){if(null!==v&&(s-m)*i<y)break;v=s}}}let T=[],k=[];for(let s=0;s<t.length;++s){let y=Number(t[s]);if(x.has(y)){let t=this.decode([y]),s=c.WHISPER_LANGUAGE_MAPPING.get(t.slice(2,-2));if(void 0!==s){if(null!==n&&s!==n&&!r){g.push(T);let t=this.findLongestCommonSequence(g)[0],r=this.decode(t);p.text=r,d.push(p),g=[],T=[],p=u()}n=p.language=s}}else if(y>=m&&y<=f){let t=(y-m)*i+h,r=(0,o.round)(t,2);if(null!==v&&y>=v)b=!0;else if(b||g.length>0&&y<M)b=!1;else if(null===p.timestamp[0])p.timestamp[0]=r;else if(r===p.timestamp[0]);else{p.timestamp[1]=r,g.push(T),l&&_.push(k);let[t,s]=this.findLongestCommonSequence(g,_),i=this.decode(t);p.text=i,l&&(p.words=this.collateWordTimestamps(t,s,n)),d.push(p),g=[],T=[],_=[],k=[],p=u()}}else if(T.push(y),l){let t,r=(0,o.round)(a[s]+h,2);if(s+1<a.length){t=(0,o.round)(a[s+1]+h,2);let n=this.decode([y]);w.test(n)&&(t=(0,o.round)(Math.min(r+i,t),2))}else t=null;k.push([r,t])}}if("stride"in s){let[t,r,i]=s.stride;h+=t-i}T.length>0?(g.push(T),l&&_.push(k)):g.every(t=>0===t.length)&&(p=u(),g=[],T=[],_=[],k=[])}if(g.length>0){if(a&&r)throw Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");let[t,s]=this.findLongestCommonSequence(g,_),i=this.decode(t);p.text=i,l&&(p.words=this.collateWordTimestamps(t,s,n)),d.push(p)}let v=Object.create(null),M=d.map(t=>t.text).join("");if(r||s){for(let t=0;t<d.length;++t){let i=d[t];r||delete i.timestamp,s||delete i.language}if(l){let t=[];for(let r of d)for(let s of r.words)t.push(s);v={chunks:t}}else v={chunks:d}}return[M,v]}findLongestCommonSequence(t,r=null){let s=t[0],i=s.length,a=[],n=Array.isArray(r)&&r.length>0,o=n?[]:null,l=n?r[0]:null;for(let u=1;u<t.length;++u){let d=t[u],c=0,p=[i,i,0,0],h=d.length;for(let t=1;t<i+h;++t){let a;let o=Math.max(0,i-t),m=Math.min(i,i+h-t),f=s.slice(o,m),g=Math.max(0,t-i),_=Math.min(h,t),b=d.slice(g,_);if(f.length!==b.length)throw Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");a=n?f.filter((t,s)=>t===b[s]&&l[o+s]<=r[u][g+s]).length:f.filter((t,r)=>t===b[r]).length;let y=t/1e4,w=a/t+y;a>1&&w>c&&(c=w,p=[o,m,g,_])}let[m,f,g,_]=p,b=Math.floor((f+m)/2),y=Math.floor((_+g)/2);a.push(...s.slice(0,b)),i=(s=d.slice(y)).length,n&&(o.push(...l.slice(0,b)),l=r[u].slice(y))}return(a.push(...s),n)?(o.push(...l),[a,o]):[a,[]]}collateWordTimestamps(t,r,s){let[i,a,n]=this.combineTokensIntoWords(t,s),o=[];for(let t=0;t<i.length;++t){let s=n[t];o.push({text:i[t],timestamp:[r[s.at(0)][0],r[s.at(-1)][1]]})}return o}combineTokensIntoWords(t,r,s="\"'“\xa1\xbf([{-",i="\"'.。,，!！?？:：”)]}、"){let a,n,o;return["chinese","japanese","thai","lao","myanmar"].includes(r=r??"english")?[a,n,o]=this.splitTokensOnUnicode(t):[a,n,o]=this.splitTokensOnSpaces(t),this.mergePunctuations(a,n,o,s,i)}decode(t,r){let s;return r?.decode_with_timestamps?(t instanceof l.Tensor&&(t=f(t)),s=this.decodeWithTimestamps(t,r)):s=super.decode(t,r),s}decodeWithTimestamps(t,r){let s=r?.time_precision??.02,i=Array.from(this.all_special_ids).at(-1)+1,a=[[]];for(let r of t)if((r=Number(r))>=i){let t=((r-i)*s).toFixed(2);a.push(`<|${t}|>`),a.push([])}else a[a.length-1].push(r);return(a=a.map(t=>"string"==typeof t?t:super.decode(t,r))).join("")}splitTokensOnUnicode(t){let r=this.decode(t,{decode_with_timestamps:!0}),s=[],i=[],a=[],n=[],o=[],l=0;for(let u=0;u<t.length;++u){let d=t[u];n.push(d),o.push(u);let c=this.decode(n,{decode_with_timestamps:!0});c.includes("�")&&"�"!==r[l+c.indexOf("�")]||(s.push(c),i.push(n),a.push(o),n=[],o=[],l+=c.length)}return[s,i,a]}splitTokensOnSpaces(t){let[r,s,i]=this.splitTokensOnUnicode(t),a=[],n=[],o=[],l=RegExp(`^[${y}]$`,"gu");for(let t=0;t<r.length;++t){let u=r[t],d=s[t],c=i[t],p=d[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),h=u.startsWith(" "),m=u.trim(),f=l.test(m);if(p||h||f||0===a.length)a.push(u),n.push(d),o.push(c);else{let t=a.length-1;a[t]+=u,n[t].push(...d),o[t].push(...c)}}return[a,n,o]}mergePunctuations(t,r,s,i,n){let o=structuredClone(t),l=structuredClone(r),u=structuredClone(s),d=o.length-2,c=o.length-1;for(;d>=0;)o[d].startsWith(" ")&&i.includes(o[d].trim())?(o[c]=o[d]+o[c],l[c]=(0,a.mergeArrays)(l[d],l[c]),u[c]=(0,a.mergeArrays)(u[d],u[c]),o[d]="",l[d]=[],u[d]=[]):c=d,--d;for(d=0,c=1;c<o.length;)!o[d].endsWith(" ")&&n.includes(o[c])?(o[d]+=o[c],l[d]=(0,a.mergeArrays)(l[d],l[c]),u[d]=(0,a.mergeArrays)(u[d],u[c]),o[c]="",l[c]=[],u[c]=[]):d=c,++c;return[o.filter(t=>t),l.filter(t=>t.length>0),u.filter(t=>t.length>0)]}}class e0 extends ey{}class e1 extends ey{}class e2 extends ey{}class e3 extends ey{constructor(t,r){super(t,r),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(t=>this.languageRegex.test(t)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(t){if(null===t)return null;let[r,...s]=t.trim().split(this.languageRegex);if(0===s.length)return super._encode_text(r);if(2===s.length){let[t,r]=s;return this.supported_language_codes.includes(t)||console.warn(`Unsupported language code "${t}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,a.mergeArrays)([t],super._encode_text(r))}}}class e4 extends ey{}class e6 extends ey{}class e8 extends ey{}class e5 extends ey{}class e9 extends ey{}class e7 extends ey{constructor(t,r){super(t,r),this.decoder=new ed({})}}class te extends ey{}class tt extends ey{}class tr{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:eF,DistilBertTokenizer:eP,CamembertTokenizer:eE,DebertaTokenizer:eT,DebertaV2Tokenizer:ek,BertTokenizer:ew,HerbertTokenizer:e$,ConvBertTokenizer:eC,RoFormerTokenizer:eS,XLMTokenizer:eI,ElectraTokenizer:eA,MobileBertTokenizer:ev,SqueezeBertTokenizer:eM,AlbertTokenizer:ex,GPT2Tokenizer:ez,BartTokenizer:eO,MBartTokenizer:eL,MBart50Tokenizer:eB,RobertaTokenizer:eN,WhisperTokenizer:eZ,CodeGenTokenizer:e0,CLIPTokenizer:e1,SiglipTokenizer:e2,MarianTokenizer:e3,BloomTokenizer:eD,NllbTokenizer:eJ,M2M100Tokenizer:eY,LlamaTokenizer:eR,CodeLlamaTokenizer:ej,XLMRobertaTokenizer:eV,MPNetTokenizer:eG,FalconTokenizer:eU,GPTNeoXTokenizer:eq,EsmTokenizer:eW,Wav2Vec2CTCTokenizer:e4,BlenderbotTokenizer:e6,BlenderbotSmallTokenizer:e8,SpeechT5Tokenizer:e5,NougatTokenizer:e9,VitsTokenizer:e7,Qwen2Tokenizer:eH,GemmaTokenizer:eK,Grok1Tokenizer:eQ,CohereTokenizer:te,MgpstrTokenizer:tt,PreTrainedTokenizer:ey};static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:a=!1,revision:n="main",legacy:o=null}={}){let[l,u]=await p(t,{progress_callback:r,config:s,cache_dir:i,local_files_only:a,revision:n,legacy:o}),d=u.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer",c=this.TOKENIZER_CLASS_MAPPING[d];return c||(console.warn(`Unknown tokenizer class "${d}", attempting to construct from base class.`),c=ey),new c(l,u)}}},"./src/utils/audio.js":(t,r,s)=>{s.r(r),s.d(r,{RawAudio:()=>M,hamming:()=>h,hanning:()=>p,mel_filter_bank:()=>b,read_audio:()=>d,spectrogram:()=>w,window_function:()=>x});var i=s("./src/utils/hub.js"),a=s("./src/utils/maths.js"),n=s("./src/utils/core.js"),o=s("./src/env.js"),l=s("?7a2c"),u=s("./src/utils/tensor.js");async function d(t,r){let s;if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");let a=await (await (0,i.getFile)(t)).arrayBuffer(),n=new AudioContext({sampleRate:r});void 0===r&&console.warn(`No sampling rate provided, using default of ${n.sampleRate}Hz.`);let o=await n.decodeAudioData(a);if(2===o.numberOfChannels){let t=Math.sqrt(2),r=o.getChannelData(0),i=o.getChannelData(1);s=new Float32Array(r.length);for(let a=0;a<o.length;++a)s[a]=t*(r[a]+i[a])/2}else s=o.getChannelData(0);return s}function c(t,r){if(t<1)return new Float64Array;if(1===t)return new Float64Array([1]);let s=1-r,i=2*Math.PI/(t-1),a=new Float64Array(t);for(let n=0;n<t;++n)a[n]=r-s*Math.cos(n*i);return a}function p(t){return c(t,.5)}function h(t){return c(t,.54)}let m={htk:t=>2595*Math.log10(1+t/700),kaldi:t=>1127*Math.log(1+t/700),slaney:(t,r=1e3,s=15,i=27/Math.log(6.4))=>t>=r?s+Math.log(t/r)*i:3*t/200};function f(t,r="htk"){let s=m[r];if(!s)throw Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof t?s(t):t.map(t=>s(t))}let g={htk:t=>700*(10**(t/2595)-1),kaldi:t=>700*(Math.exp(t/1127)-1),slaney:(t,r=1e3,s=15,i=Math.log(6.4)/27)=>t>=s?r*Math.exp(i*(t-s)):200*t/3};function _(t,r,s){let i=(r-t)/(s-1);return Float64Array.from({length:s},(r,s)=>t+i*s)}function b(t,r,s,i,a,n=null,o="htk",l=!1){let u;if(null!==n&&"slaney"!==n)throw Error('norm must be one of null or "slaney"');let d=_(f(s,o),f(i,o),r+2),c=function(t,r="htk"){let s=g[r];if(!s)throw Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof t?s(t):t.map(t=>s(t))}(d,o);if(l){let r=a/(2*t);u=f(Float64Array.from({length:t},(t,s)=>s*r),o),c=d}else u=_(0,Math.floor(a/2),t);let p=function(t,r){let s=Float64Array.from({length:r.length-1},(t,s)=>r[s+1]-r[s]),i=Array.from({length:t.length},()=>Array(r.length));for(let s=0;s<t.length;++s){let a=i[s];for(let i=0;i<r.length;++i)a[i]=r[i]-t[s]}let a=r.length-2,n=Array.from({length:a},()=>Array(t.length));for(let r=0;r<t.length;++r){let t=i[r];for(let i=0;i<a;++i){let a=-t[i]/s[i],o=t[i+2]/s[i+1];n[i][r]=Math.max(0,Math.min(a,o))}}return n}(u,c);if(null!==n&&"slaney"===n)for(let s=0;s<r;++s){let r=p[s],i=2/(c[s+2]-c[s]);for(let s=0;s<t;++s)r[s]*=i}return p}function y(t,r,s,i,n){if(s<=0)throw Error("reference must be greater than zero");if(i<=0)throw Error("min_value must be greater than zero");let o=Math.log10(s=Math.max(i,s));for(let s=0;s<t.length;++s)t[s]=r*Math.log10(Math.max(i,t[s])-o);if(null!==n){if(n<=0)throw Error("db_range must be greater than zero");let r=(0,a.max)(t)[0]-n;for(let s=0;s<t.length;++s)t[s]=Math.max(t[s],r)}return t}async function w(t,r,s,i,{fft_length:o=null,power:l=1,center:d=!0,pad_mode:c="reflect",onesided:p=!0,preemphasis:h=null,mel_filters:m=null,mel_floor:f=1e-10,log_mel:g=null,reference:_=1,min_value:b=1e-10,db_range:w=null,remove_dc_offset:x=null,min_num_frames:v=null,max_num_frames:M=null,do_pad:T=!0,transpose:k=!1}={}){let $=r.length;if(null===o&&(o=s),s>o)throw Error(`frame_length (${s}) may not be larger than fft_length (${o})`);if($!==s)throw Error(`Length of the window (${$}) must equal frame_length (${s})`);if(i<=0)throw Error("hop_length must be greater than zero");if(null===l&&null!==m)throw Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(d){if("reflect"!==c)throw Error(`pad_mode="${c}" not implemented yet.`);let r=Math.floor((o-1)/2)+1;t=function(t,r,s){let i=new t.constructor(t.length+r+s),a=t.length-1;for(let s=0;s<t.length;++s)i[r+s]=t[s];for(let s=1;s<=r;++s)i[r-s]=t[(0,n.calculateReflectOffset)(s,a)];for(let o=1;o<=s;++o)i[a+r+o]=t[(0,n.calculateReflectOffset)(a-o,a)];return i}(t,r,r)}let C=Math.floor(1+Math.floor((t.length-s)/i));null!==v&&C<v&&(C=v);let S=p?Math.floor(o/2)+1:o,P=C,E=C;null!==M&&(M>C?T&&(E=M):E=P=M);let I=new a.FFT(o),A=new Float64Array(o),F=new Float64Array(I.outputBufferSize),z=new Float32Array(S*E);for(let a=0;a<P;++a){let n=a*i,o=Math.min(t.length-n,s);o!==s&&A.fill(0,0,s);for(let r=0;r<o;++r)A[r]=t[n+r];if(x){let t=0;for(let r=0;r<o;++r)t+=A[r];let r=t/o;for(let t=0;t<o;++t)A[t]-=r}if(null!==h){for(let t=o-1;t>=1;--t)A[t]-=h*A[t-1];A[0]*=1-h}for(let t=0;t<r.length;++t)A[t]*=r[t];I.realTransform(F,A);for(let t=0;t<S;++t){let r=t<<1;z[t*E+a]=F[r]**2+F[r+1]**2}}if(null!==l&&2!==l){let t=2/l;for(let r=0;r<z.length;++r)z[r]**=t}let O=m.length,L=await (0,u.matmul)(new u.Tensor("float32",m.flat(),[O,S]),new u.Tensor("float32",z,[S,E]));k&&(L=L.transpose(1,0));let B=L.data;for(let t=0;t<B.length;++t)B[t]=Math.max(f,B[t]);if(null!==l&&null!==g){let t=Math.min(B.length,P*O);switch(g){case"log":for(let r=0;r<t;++r)B[r]=Math.log(B[r]);break;case"log10":for(let r=0;r<t;++r)B[r]=Math.log10(B[r]);break;case"dB":if(1===l)!function(t,r=1,s=1e-5,i=null){y(t,20,r,s,i)}(B,_,b,w);else if(2===l)!function(t,r=1,s=1e-10,i=null){y(t,10,r,s,i)}(B,_,b,w);else throw Error(`Cannot use log_mel option '${g}' with power ${l}`);break;default:throw Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${g}'`)}}return L}function x(t,r,{periodic:s=!0,frame_length:i=null,center:a=!0}={}){let n;let o=s?t+1:t;switch(r){case"boxcar":n=new Float64Array(o).fill(1);break;case"hann":case"hann_window":n=p(o);break;case"hamming":n=h(o);break;case"povey":n=p(o).map(t=>Math.pow(t,.85));break;default:throw Error(`Unknown window type ${r}.`)}if(s&&(n=n.subarray(0,t)),null===i)return n;if(t>i)throw Error(`Length of the window (${t}) may not be larger than frame_length (${i})`);return n}function v(t,r,s){for(let i=0;i<s.length;++i)t.setUint8(r+i,s.charCodeAt(i))}class M{constructor(t,r){this.audio=t,this.sampling_rate=r}toWav(){return function(t,r){let s=44,i=new ArrayBuffer(44+4*t.length),a=new DataView(i);v(a,0,"RIFF"),a.setUint32(4,36+4*t.length,!0),v(a,8,"WAVE"),v(a,12,"fmt "),a.setUint32(16,16,!0),a.setUint16(20,3,!0),a.setUint16(22,1,!0),a.setUint32(24,r,!0),a.setUint32(28,4*r,!0),a.setUint16(32,4,!0),a.setUint16(34,32,!0),v(a,36,"data"),a.setUint32(40,4*t.length,!0);for(let r=0;r<t.length;++r,s+=4)a.setFloat32(s,t[r],!0);return i}(this.audio,this.sampling_rate)}toBlob(){return new Blob([this.toWav()],{type:"audio/wav"})}async save(t){let r;if(o.apis.IS_BROWSER_ENV){if(o.apis.IS_WEBWORKER_ENV)throw Error("Unable to save a file from a Web Worker.");r=n.saveBlob}else if(o.apis.IS_FS_AVAILABLE)r=async(t,r)=>{let s=await r.arrayBuffer();l.writeFileSync(t,P.from(s))};else throw Error("Unable to save because filesystem is disabled in this environment.");await r(t,this.toBlob())}}},"./src/utils/constants.js":(t,r,s)=>{s.r(r),s.d(r,{CHAT_TEMPLATE_NAME:()=>u,CONFIG_NAME:()=>a,FEATURE_EXTRACTOR_NAME:()=>n,GENERATION_CONFIG_NAME:()=>d,GITHUB_ISSUE_URL:()=>i,IMAGE_PROCESSOR_NAME:()=>o,PROCESSOR_NAME:()=>l});let i="https://github.com/huggingface/transformers.js/issues/new/choose",a="config.json",n="preprocessor_config.json",o=n,l="processor_config.json",u="chat_template.json",d="generation_config.json"},"./src/utils/core.js":(t,r,s)=>{function i(t,r){t&&t(r)}function a(t){return Object.fromEntries(Object.entries(t).map(([t,r])=>[r,t]))}function n(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function o(t){return t?.prototype?.__proto__?.constructor?.name==="TypedArray"}function l(t){return Number.isInteger(t)||"bigint"==typeof t}function u(t){return null==t||-1===t}function d(t){let r=[],s=t;for(;Array.isArray(s);)r.push(s.length),s=s[0];return r}function c(t,r,s){let i=t[r];if(void 0!==i)return delete t[r],i;if(void 0===s)throw Error(`Key ${r} does not exist in object.`);return s}function p(...t){return Array.prototype.concat.apply([],t)}function h(...t){return t.reduce((t,r)=>t.flatMap(t=>r.map(r=>[t,r])))}function m(t,r){return Math.abs((t+r)%(2*r)-r)}function f(t,r){let s=URL.createObjectURL(r),i=document.createElement("a");i.href=s,i.download=t,i.click(),i.remove(),URL.revokeObjectURL(s)}function g(t,r){return Object.assign({},...r.map(r=>{if(void 0!==t[r])return{[r]:t[r]}}))}function _(t){let r=0;for(let s of t)++r;return r}function b(t,r){let s=0;for(let i of t)i===r&&++s;return s}s.r(r),s.d(r,{calculateDimensions:()=>d,calculateReflectOffset:()=>m,count:()=>b,dispatchCallback:()=>i,escapeRegExp:()=>n,isIntegralNumber:()=>l,isNullishDimension:()=>u,isTypedArray:()=>o,len:()=>_,mergeArrays:()=>p,pick:()=>g,pop:()=>c,product:()=>h,reverseDictionary:()=>a,saveBlob:()=>f})},"./src/utils/data-structures.js":(t,r,s)=>{s.r(r),s.d(r,{CharTrie:()=>a,PriorityQueue:()=>i,TokenLattice:()=>o});class i{constructor(t=(t,r)=>t>r,r=1/0){this._heap=[],this._comparator=t,this._maxSize=r}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...t){return this.extend(t)}extend(t){for(let r of t)if(this.size<this._maxSize)this._heap.push(r),this._siftUp();else{let t=this._smallest();this._comparator(r,this._heap[t])&&(this._heap[t]=r,this._siftUpFrom(t))}return this.size}pop(){let t=this.peek(),r=this.size-1;return r>0&&this._swap(0,r),this._heap.pop(),this._siftDown(),t}replace(t){let r=this.peek();return this._heap[0]=t,this._siftDown(),r}_parent(t){return(t+1>>>1)-1}_left(t){return(t<<1)+1}_right(t){return t+1<<1}_greater(t,r){return this._comparator(this._heap[t],this._heap[r])}_swap(t,r){let s=this._heap[t];this._heap[t]=this._heap[r],this._heap[r]=s}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(t){for(;t>0&&this._greater(t,this._parent(t));)this._swap(t,this._parent(t)),t=this._parent(t)}_siftDown(){let t=0;for(;this._left(t)<this.size&&this._greater(this._left(t),t)||this._right(t)<this.size&&this._greater(this._right(t),t);){let r=this._right(t)<this.size&&this._greater(this._right(t),this._left(t))?this._right(t):this._left(t);this._swap(t,r),t=r}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class a{constructor(){this.root=n.default()}extend(t){for(let r of t)this.push(r)}push(t){let r=this.root;for(let s of t){let t=r.children.get(s);void 0===t&&(t=n.default(),r.children.set(s,t)),r=t}r.isLeaf=!0}*commonPrefixSearch(t){let r=this.root;if(void 0===r)return;let s="";for(let i of t){if(s+=i,void 0===(r=r.children.get(i)))return;r.isLeaf&&(yield s)}}}class n{constructor(t,r){this.isLeaf=t,this.children=r}static default(){return new n(!1,new Map)}}class o{constructor(t,r,s){this.chars=Array.from(t),this.len=this.chars.length,this.bosTokenId=r,this.eosTokenId=s,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);let i=new l(this.bosTokenId,0,0,0,0),a=new l(this.eosTokenId,1,this.len,0,0);this.nodes.push(i.clone()),this.nodes.push(a.clone()),this.beginNodes[this.len].push(a),this.endNodes[0].push(i)}insert(t,r,s,i){let a=new l(i,this.nodes.length,t,r,s);this.beginNodes[t].push(a),this.endNodes[t+r].push(a),this.nodes.push(a)}viterbi(){let t=this.len,r=0;for(;r<=t;){if(0==this.beginNodes[r].length)return[];for(let t of this.beginNodes[r]){t.prev=null;let s=0,i=null;for(let a of this.endNodes[r]){let r=a.backtraceScore+t.score;(null===i||r>s)&&(i=a.clone(),s=r)}if(null===i)return[];t.prev=i,t.backtraceScore=s}++r}let s=[],i=this.beginNodes[t][0].prev;if(null===i)return[];let a=i.clone();for(;null!==a.prev;)s.push(a.clone()),a=a.clone().prev.clone();return s.reverse(),s}piece(t){return this.chars.slice(t.pos,t.pos+t.length).join("")}tokens(){return this.viterbi().map(t=>this.piece(t))}tokenIds(){return this.viterbi().map(t=>t.tokenId)}}class l{constructor(t,r,s,i,a){this.tokenId=t,this.nodeId=r,this.pos=s,this.length=i,this.score=a,this.prev=null,this.backtraceScore=0}clone(){let t=new l(this.tokenId,this.nodeId,this.pos,this.length,this.score);return t.prev=this.prev,t.backtraceScore=this.backtraceScore,t}}},"./src/utils/devices.js":(t,r,s)=>{s.r(r),s.d(r,{DEVICE_TYPES:()=>i});let i=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(t,r,s)=>{let i;s.r(r),s.d(r,{DATA_TYPES:()=>l,DEFAULT_DEVICE_DTYPE_MAPPING:()=>u,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>d,isWebGpuFp16Supported:()=>o});var a=s("./src/env.js"),n=s("./src/utils/devices.js");let o=async function(){if(void 0===i){if(a.apis.IS_WEBGPU_AVAILABLE)try{i=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch(t){i=!1}else i=!1}return i},l=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),u=Object.freeze({[n.DEVICE_TYPES.wasm]:l.q8}),d=Object.freeze({[l.fp32]:"",[l.fp16]:"_fp16",[l.int8]:"_int8",[l.uint8]:"_uint8",[l.q8]:"_quantized",[l.q4]:"_q4",[l.q4f16]:"_q4f16",[l.bnb4]:"_bnb4"})},"./src/utils/generic.js":(t,r,s)=>{s.r(r),s.d(r,{Callable:()=>i});let i=class{constructor(){let t=function(...r){return t._call(...r)};return Object.setPrototypeOf(t,new.target.prototype)}_call(...t){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(t,r,s)=>{s.r(r),s.d(r,{getFile:()=>c,getModelFile:()=>f,getModelJSON:()=>g});var i=s("?7a2c"),a=s("?a42a"),n=s("./src/env.js"),o=s("./src/utils/core.js");let l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class u{constructor(t){if(this.filePath=t,this.headers=new Headers,this.exists=i.existsSync(t),this.exists){this.status=200,this.statusText="OK";let r=i.statSync(t);this.headers.set("content-length",r.size.toString()),this.updateContentType();let s=this;this.body=new ReadableStream({start(t){s.arrayBuffer().then(r=>{t.enqueue(new Uint8Array(r)),t.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){let t=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[t]??"application/octet-stream")}clone(){let t=new u(this.filePath);return t.exists=this.exists,t.status=this.status,t.statusText=this.statusText,t.headers=new Headers(this.headers),t}async arrayBuffer(){return(await i.promises.readFile(this.filePath)).buffer}async blob(){return new Blob([await i.promises.readFile(this.filePath)],{type:this.headers.get("content-type")})}async text(){return await i.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function d(t,r=null,s=null){let i;try{i=new URL(t)}catch(t){return!1}return(!r||!!r.includes(i.protocol))&&(!s||!!s.includes(i.hostname))}async function c(t){if(n.env.useFS&&!d(t,["http:","https:","blob:"]))return new u(t);if(void 0===S||S?.release?.name!=="node")return fetch(t);{let r=!!S.env?.TESTING_REMOTELY,s=n.env.version,i=new Headers;if(i.set("User-Agent",`transformers.js/${s}; is_ci/${r};`),d(t,["http:","https:"],["huggingface.co","hf.co"])){let t=S.env?.HF_TOKEN??S.env?.HF_ACCESS_TOKEN;t&&i.set("Authorization",`Bearer ${t}`)}return fetch(t,{headers:i})}}let p={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class h{constructor(t){this.path=t}async match(t){let r=new u(a.join(this.path,t));return r.exists?r:void 0}async put(t,r){let s=P.from(await r.arrayBuffer()),n=a.join(this.path,t);try{await i.promises.mkdir(a.dirname(n),{recursive:!0}),await i.promises.writeFile(n,s)}catch(t){console.warn("An error occurred while writing the file to cache:",t)}}}async function m(t,...r){for(let s of r)try{let r=await t.match(s);if(r)return r}catch(t){continue}}async function f(t,r,s=!0,i={}){let a,l,u,f;if(!n.env.allowLocalModels){if(i.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!n.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}if((0,o.dispatchCallback)(i.progress_callback,{status:"initiate",name:t,file:r}),!a&&n.env.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{a=await caches.open("transformers-cache")}catch(t){console.warn("An error occurred while opening the browser cache:",t)}}if(!a&&n.env.useFSCache&&(a=new h(i.cache_dir??n.env.cacheDir)),!a&&n.env.useCustomCache){if(!n.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!n.env.customCache.match||!n.env.customCache.put)throw Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");a=n.env.customCache}let g=i.revision??"main",y=b(t,r),w=b(n.env.localModelPath,y),x=b(n.env.remoteHost,n.env.remotePathTemplate.replaceAll("{model}",t).replaceAll("{revision}",encodeURIComponent(g)),r),v="main"===g?y:b(t,g,r),M=a instanceof h?v:x,T=!1;a&&(u=await m(a,w,M));let k=void 0!==u;if(void 0===u){if(n.env.allowLocalModels){if(d(y,["http:","https:"])){if(i.local_files_only)throw Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${y}.`);if(!n.env.allowRemoteModels)throw Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${y}.`)}else try{u=await c(w),l=w}catch(t){console.warn(`Unable to load from local path "${w}": "${t}"`)}}if(void 0===u||404===u.status){if(i.local_files_only||!n.env.allowRemoteModels){if(!s)return null;throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${w}".`)}if(200!==(u=await c(x)).status)return function(t,r,s){if(!s)return null;let i=p[t]??`Error (${t}) occurred while trying to load file`;throw Error(`${i}: "${r}".`)}(u.status,x,s);l=M}T=a&&"undefined"!=typeof Response&&u instanceof Response&&200===u.status}return(0,o.dispatchCallback)(i.progress_callback,{status:"download",name:t,file:r}),i.progress_callback?k&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(f=new Uint8Array(await u.arrayBuffer()),(0,o.dispatchCallback)(i.progress_callback,{status:"progress",name:t,file:r,progress:100,loaded:f.length,total:f.length})):f=await _(u,s=>{(0,o.dispatchCallback)(i.progress_callback,{status:"progress",name:t,file:r,...s})}):f=new Uint8Array(await u.arrayBuffer()),T&&l&&await a.match(l)===void 0&&await a.put(l,new Response(f,{headers:u.headers})).catch(t=>{console.warn(`Unable to add response to browser cache: ${t}.`)}),(0,o.dispatchCallback)(i.progress_callback,{status:"done",name:t,file:r}),f}async function g(t,r,s=!0,i={}){let a=await f(t,r,s,i);return null===a?{}:JSON.parse(new TextDecoder("utf-8").decode(a))}async function _(t,r){let s=t.headers.get("Content-Length");null===s&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let i=parseInt(s??"0"),a=new Uint8Array(i),n=0,o=t.body.getReader();async function l(){let{done:t,value:s}=await o.read();if(t)return;let u=n+s.length;if(u>i){let t=new Uint8Array(i=u);t.set(a),a=t}return a.set(s,n),r({progress:(n=u)/i*100,loaded:n,total:i}),l()}return await l(),a}function b(...t){return(t=t.map((r,s)=>(s&&(r=r.replace(RegExp("^/"),"")),s!==t.length-1&&(r=r.replace(RegExp("/$"),"")),r))).join("/")}},"./src/utils/image.js":(t,r,s)=>{let i,a,n;s.r(r),s.d(r,{RawImage:()=>f,load_image:()=>g});var o=s("./src/utils/core.js"),l=s("./src/utils/hub.js"),u=s("./src/env.js"),d=s("./src/utils/tensor.js"),c=s("?2b25");let p=u.apis.IS_BROWSER_ENV||u.apis.IS_WEBWORKER_ENV;if(p)i=(t,r)=>{if(!self.OffscreenCanvas)throw Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(t,r)},n=self.createImageBitmap,a=self.ImageData;else if(c)n=async t=>{let r=(await t.metadata()).channels,{data:s,info:i}=await t.rotate().raw().toBuffer({resolveWithObject:!0}),a=new f(new Uint8ClampedArray(s),i.width,i.height,i.channels);return void 0!==r&&r!==i.channels&&a.convert(r),a};else throw Error("Unable to load image processing library.");let h={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},m=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class f{constructor(t,r,s,i){this.data=t,this.width=r,this.height=s,this.channels=i}get size(){return[this.width,this.height]}static async read(t){if(t instanceof f)return t;if("string"==typeof t||t instanceof URL)return await this.fromURL(t);throw Error(`Unsupported input type: ${typeof t}`)}static fromCanvas(t){if(!p)throw Error("fromCanvas() is only supported in browser environments.");return new f(t.getContext("2d").getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}static async fromURL(t){let r=await (0,l.getFile)(t);if(200!==r.status)throw Error(`Unable to read image from "${t}" (${r.status} ${r.statusText})`);let s=await r.blob();return this.fromBlob(s)}static async fromBlob(t){if(p){let r=await n(t),s=i(r.width,r.height).getContext("2d");return s.drawImage(r,0,0),new this(s.getImageData(0,0,r.width,r.height).data,r.width,r.height,4)}{let r=c(await t.arrayBuffer());return await n(r)}}static fromTensor(t,r="CHW"){if(3!==t.dims.length)throw Error(`Tensor should have 3 dimensions, but has ${t.dims.length} dimensions.`);if("CHW"===r)t=t.transpose(1,2,0);else if("HWC"===r);else throw Error(`Unsupported channel format: ${r}`);if(!(t.data instanceof Uint8ClampedArray||t.data instanceof Uint8Array))throw Error(`Unsupported tensor type: ${t.type}`);switch(t.dims[2]){case 1:case 2:case 3:case 4:return new f(t.data,t.dims[1],t.dims[0],t.dims[2]);default:throw Error(`Unsupported number of channels: ${t.dims[2]}`)}}grayscale(){if(1===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let r=0,s=0;r<this.data.length;r+=this.channels){let i=this.data[r],a=this.data[r+1],n=this.data[r+2];t[s++]=Math.round(.2989*i+.587*a+.114*n)}break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,1)}rgb(){if(3===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let r=0,s=0;r<this.data.length;++r)t[s++]=this.data[r],t[s++]=this.data[r],t[s++]=this.data[r];break;case 4:for(let r=0,s=0;r<this.data.length;r+=4)t[s++]=this.data[r],t[s++]=this.data[r+1],t[s++]=this.data[r+2];break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,3)}rgba(){if(4===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let r=0,s=0;r<this.data.length;++r)t[s++]=this.data[r],t[s++]=this.data[r],t[s++]=this.data[r],t[s++]=255;break;case 3:for(let r=0,s=0;r<this.data.length;r+=3)t[s++]=this.data[r],t[s++]=this.data[r+1],t[s++]=this.data[r+2],t[s++]=255;break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,4)}putAlpha(t){if(t.width!==this.width||t.height!==this.height)throw Error(`Expected mask size to be ${this.width}x${this.height}, but got ${t.width}x${t.height}`);if(1!==t.channels)throw Error(`Expected mask to have 1 channel, but got ${t.channels}`);let r=this.data,s=t.data,i=this.width*this.height;if(3===this.channels){let t=new Uint8ClampedArray(4*i);for(let a=0,n=0,o=0;a<i;++a)t[o++]=r[n++],t[o++]=r[n++],t[o++]=r[n++],t[o++]=s[a];return this._update(t,this.width,this.height,4)}if(4===this.channels){for(let t=0;t<i;++t)r[4*t+3]=s[t];return this}throw Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(t,r,{resample:s=2}={}){if(this.width===t&&this.height===r)return this;let a=h[s]??s,l=(0,o.isNullishDimension)(t),u=(0,o.isNullishDimension)(r);if(l&&u)return this;if(l?t=r/this.height*this.width:u&&(r=t/this.width*this.height),p){let s=this.channels,a=this.toCanvas(),n=i(t,r).getContext("2d");return n.drawImage(a,0,0,t,r),new f(n.getImageData(0,0,t,r).data,t,r,4).convert(s)}{let s=this.toSharp();switch(a){case"box":case"hamming":("box"===a||"hamming"===a)&&(console.warn(`Resampling method ${a} is not yet supported. Using bilinear instead.`),a="bilinear");case"nearest":case"bilinear":case"bicubic":s=s.affine([t/this.width,0,0,r/this.height],{interpolator:a});break;case"lanczos":s=s.resize({width:t,height:r,fit:"fill",kernel:"lanczos3"});break;default:throw Error(`Resampling method ${a} is not supported.`)}return await n(s)}}async pad([t,r,s,a]){if(t=Math.max(t,0),r=Math.max(r,0),s=Math.max(s,0),a=Math.max(a,0),0===t&&0===r&&0===s&&0===a)return this;if(p){let n=this.channels,o=this.toCanvas(),l=this.width+t+r,u=this.height+s+a,d=i(l,u).getContext("2d");return d.drawImage(o,0,0,this.width,this.height,t,s,this.width,this.height),new f(d.getImageData(0,0,l,u).data,l,u,4).convert(n)}{let i=this.toSharp().extend({left:t,right:r,top:s,bottom:a});return await n(i)}}async crop([t,r,s,a]){if(t=Math.max(t,0),r=Math.max(r,0),s=Math.min(s,this.width-1),a=Math.min(a,this.height-1),0===t&&0===r&&s===this.width-1&&a===this.height-1)return this;let o=s-t+1,l=a-r+1;if(p){let s=this.channels,a=this.toCanvas(),n=i(o,l).getContext("2d");return n.drawImage(a,t,r,o,l,0,0,o,l),new f(n.getImageData(0,0,o,l).data,o,l,4).convert(s)}{let s=this.toSharp().extract({left:t,top:r,width:o,height:l});return await n(s)}}async center_crop(t,r){if(this.width===t&&this.height===r)return this;let s=(this.width-t)/2,a=(this.height-r)/2;if(p){let n=this.channels,o=this.toCanvas(),l=i(t,r).getContext("2d"),u=0,d=0,c=0,p=0;return s>=0?u=s:c=-s,a>=0?d=a:p=-a,l.drawImage(o,u,d,t,r,c,p,t,r),new f(l.getImageData(0,0,t,r).data,t,r,4).convert(n)}{let i=this.toSharp();if(s>=0&&a>=0)i=i.extract({left:Math.floor(s),top:Math.floor(a),width:t,height:r});else if(s<=0&&a<=0){let n=Math.floor(-a),o=Math.floor(-s);i=i.extend({top:n,left:o,right:t-this.width-o,bottom:r-this.height-n})}else{let n=[0,0],o=0;a<0?(n[0]=Math.floor(-a),n[1]=r-this.height-n[0]):o=Math.floor(a);let l=[0,0],u=0;s<0?(l[0]=Math.floor(-s),l[1]=t-this.width-l[0]):u=Math.floor(s),i=i.extend({top:n[0],bottom:n[1],left:l[0],right:l[1]}).extract({left:u,top:o,width:t,height:r})}return await n(i)}}async toBlob(t="image/png",r=1){if(!p)throw Error("toBlob() is only supported in browser environments.");let s=this.toCanvas();return await s.convertToBlob({type:t,quality:r})}toTensor(t="CHW"){let r=new d.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===t);else if("CHW"===t)r=r.permute(2,0,1);else throw Error(`Unsupported channel format: ${t}`);return r}toCanvas(){if(!p)throw Error("toCanvas() is only supported in browser environments.");let t=this.clone().rgba(),r=i(t.width,t.height),s=new a(t.data,t.width,t.height);return r.getContext("2d").putImageData(s,0,0),r}split(){let{data:t,width:r,height:s,channels:i}=this,a=t.constructor,n=t.length/i,o=Array.from({length:i},()=>new a(n));for(let r=0;r<n;++r){let s=i*r;for(let a=0;a<i;++a)o[a][r]=t[s+a]}return o.map(t=>new f(t,r,s,1))}_update(t,r,s,i=null){return this.data=t,this.width=r,this.height=s,null!==i&&(this.channels=i),this}clone(){return new f(this.data.slice(),this.width,this.height,this.channels)}convert(t){if(this.channels===t)return this;switch(t){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(t){if(p){if(u.apis.IS_WEBWORKER_ENV)throw Error("Unable to save an image from a Web Worker.");let r=t.split(".").pop().toLowerCase(),s=m.get(r)??"image/png",i=await this.toBlob(s);(0,o.saveBlob)(t,i)}else if(u.apis.IS_FS_AVAILABLE){let r=this.toSharp();return await r.toFile(t)}else throw Error("Unable to save the image because filesystem is disabled in this environment.")}toSharp(){if(p)throw Error("toSharp() is only supported in server-side environments.");return c(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}let g=f.read.bind(f)},"./src/utils/maths.js":(t,r,s)=>{function i(t,[r,s,i],[a,n],o="bilinear",l=!1){let u=n/i,d=a/s,c=new t.constructor(a*n*r),p=s*i,h=a*n;for(let o=0;o<a;++o)for(let a=0;a<n;++a){let l=o*n+a,m=(a+.5)/u-.5,f=(o+.5)/d-.5,g=Math.floor(m),_=Math.floor(f),b=Math.min(g+1,i-1),y=Math.min(_+1,s-1),w=m-(g=Math.max(g,0)),x=f-(_=Math.max(_,0)),v=(1-w)*(1-x),M=w*(1-x),T=(1-w)*x,k=w*x,$=_*i,C=y*i,S=$+g,P=$+b,E=C+g,I=C+b;for(let s=0;s<r;++s){let r=s*p;c[s*h+l]=v*t[r+S]+M*t[r+P]+T*t[r+E]+k*t[r+I]}}return c}function a(t,r,s){let i=Array(s.length),a=Array(s.length);for(let t=s.length-1,n=1;t>=0;--t)a[t]=n,i[t]=r[s[t]],n*=i[t];let n=s.map((t,r)=>a[s.indexOf(r)]),o=new t.constructor(t.length);for(let s=0;s<t.length;++s){let i=0;for(let t=r.length-1,a=s;t>=0;--t)i+=a%r[t]*n[t],a=Math.floor(a/r[t]);o[i]=t[s]}return[o,i]}function n(t){let r=p(t)[0],s=t.map(t=>Math.exp(t-r)),i=s.reduce((t,r)=>t+r,0);return s.map(t=>t/i)}function o(t){let r=p(t)[0],s=0;for(let i=0;i<t.length;++i)s+=Math.exp(t[i]-r);let i=Math.log(s);return t.map(t=>t-r-i)}function l(t,r){let s=0;for(let i=0;i<t.length;++i)s+=t[i]*r[i];return s}function u(t,r){let s=l(t,r);return s/(d(t)*d(r))}function d(t){return Math.sqrt(t.reduce((t,r)=>t+r*r,0))}function c(t){if(0===t.length)throw Error("Array must not be empty");let r=t[0],s=0;for(let i=1;i<t.length;++i)t[i]<r&&(r=t[i],s=i);return[r,s]}function p(t){if(0===t.length)throw Error("Array must not be empty");let r=t[0],s=0;for(let i=1;i<t.length;++i)t[i]>r&&(r=t[i],s=i);return[r,s]}function h(t){return t>0&&(t&t-1)==0}s.r(r),s.d(r,{FFT:()=>g,bankers_round:()=>y,cos_sim:()=>u,dot:()=>l,dynamic_time_warping:()=>w,interpolate_data:()=>i,log_softmax:()=>o,magnitude:()=>d,max:()=>p,medianFilter:()=>_,min:()=>c,permute_data:()=>a,round:()=>b,softmax:()=>n});class m{constructor(t){if(this.size=0|t,this.size<=1||!h(this.size))throw Error("FFT size must be a power of two larger than 1");this._csize=t<<1,this.table=new Float64Array(2*this.size);for(let t=0;t<this.table.length;t+=2){let r=Math.PI*t/this.size;this.table[t]=Math.cos(r),this.table[t+1]=-Math.sin(r)}let r=0;for(let t=1;this.size>t;t<<=1)++r;this._width=r%2==0?r-1:r,this._bitrev=new Int32Array(1<<this._width);for(let t=0;t<this._bitrev.length;++t){this._bitrev[t]=0;for(let r=0;r<this._width;r+=2){let s=this._width-r-2;this._bitrev[t]|=(t>>>r&3)<<s}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(t,r){let s=r||Array(t.length>>>1);for(let r=0;r<t.length;r+=2)s[r>>>1]=t[r];return s}toComplexArray(t,r){let s=r||this.createComplexArray();for(let r=0;r<s.length;r+=2)s[r]=t[r>>>1],s[r+1]=0;return s}transform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._transform4(t,r,1)}realTransform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._realTransform4(t,r,1)}inverseTransform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._transform4(t,r,-1);for(let r=0;r<t.length;++r)t[r]/=this.size}_transform4(t,r,s){let i,a;let n=this._csize,o=1<<this._width,l=n/o<<1,u=this._bitrev;if(4===l)for(i=0,a=0;i<n;i+=l,++a){let s=u[a];this._singleTransform2(r,t,i,s,o)}else for(i=0,a=0;i<n;i+=l,++a){let n=u[a];this._singleTransform4(r,t,i,n,o,s)}let d=this.table;for(o>>=2;o>=2;o>>=2){let r=(l=n/o<<1)>>>2;for(i=0;i<n;i+=l){let a=i+r-1;for(let n=i,l=0;n<a;n+=2,l+=o){let i=n,a=i+r,o=a+r,u=o+r,c=t[i],p=t[i+1],h=t[a],m=t[a+1],f=t[o],g=t[o+1],_=t[u],b=t[u+1],y=d[l],w=s*d[l+1],x=h*y-m*w,v=h*w+m*y,M=d[2*l],T=s*d[2*l+1],k=f*M-g*T,$=f*T+g*M,C=d[3*l],S=s*d[3*l+1],P=_*C-b*S,E=_*S+b*C,I=c+k,A=p+$,F=c-k,z=p-$,O=x+P,L=v+E,B=s*(x-P),N=s*(v-E);t[i]=I+O,t[i+1]=A+L,t[a]=F+N,t[a+1]=z-B,t[o]=I-O,t[o+1]=A-L,t[u]=F-N,t[u+1]=z+B}}}}_singleTransform2(t,r,s,i,a){let n=t[i],o=t[i+1],l=t[i+a],u=t[i+a+1];r[s]=n+l,r[s+1]=o+u,r[s+2]=n-l,r[s+3]=o-u}_singleTransform4(t,r,s,i,a,n){let o=2*a,l=3*a,u=t[i],d=t[i+1],c=t[i+a],p=t[i+a+1],h=t[i+o],m=t[i+o+1],f=t[i+l],g=t[i+l+1],_=u+h,b=d+m,y=u-h,w=d-m,x=c+f,v=p+g,M=n*(c-f),T=n*(p-g);r[s]=_+x,r[s+1]=b+v,r[s+2]=y+T,r[s+3]=w-M,r[s+4]=_-x,r[s+5]=b-v,r[s+6]=y-T,r[s+7]=w+M}_realTransform4(t,r,s){let i,a;let n=this._csize,o=1<<this._width,l=n/o<<1,u=this._bitrev;if(4===l)for(i=0,a=0;i<n;i+=l,++a){let s=u[a];this._singleRealTransform2(r,t,i,s>>>1,o>>>1)}else for(i=0,a=0;i<n;i+=l,++a){let n=u[a];this._singleRealTransform4(r,t,i,n>>>1,o>>>1,s)}let d=this.table;for(o>>=2;o>=2;o>>=2){let r=(l=n/o<<1)>>>1,a=r>>>1,u=a>>>1;for(i=0;i<n;i+=l)for(let n=0,l=0;n<=u;n+=2,l+=o){let o=i+n,c=o+a,p=c+a,h=p+a,m=t[o],f=t[o+1],g=t[c],_=t[c+1],b=t[p],y=t[p+1],w=t[h],x=t[h+1],v=d[l],M=s*d[l+1],T=g*v-_*M,k=g*M+_*v,$=d[2*l],C=s*d[2*l+1],S=b*$-y*C,P=b*C+y*$,E=d[3*l],I=s*d[3*l+1],A=w*E-x*I,F=w*I+x*E,z=m+S,O=f+P,L=m-S,B=f-P,N=T+A,D=k+F,R=s*(T-A),j=s*(k-F);if(t[o]=z+N,t[o+1]=O+D,t[c]=L+j,t[c+1]=B-R,0===n){t[p]=z-N,t[p+1]=O-D;continue}if(n===u)continue;let V=i+a-n,G=i+r-n;t[V]=L-s*j,t[V+1]=-B-s*R,t[G]=z-s*N,t[G+1]=-O+s*D}}let c=n>>>1;for(let r=2;r<c;r+=2)t[n-r]=t[r],t[n-r+1]=-t[r+1]}_singleRealTransform2(t,r,s,i,a){let n=t[i],o=t[i+a];r[s]=n+o,r[s+1]=0,r[s+2]=n-o,r[s+3]=0}_singleRealTransform4(t,r,s,i,a,n){let o=t[i],l=t[i+a],u=t[i+2*a],d=t[i+3*a],c=o+u,p=o-u,h=l+d,m=n*(l-d);r[s]=c+h,r[s+1]=0,r[s+2]=p,r[s+3]=-m,r[s+4]=c-h,r[s+5]=0,r[s+6]=p,r[s+7]=m}}class f{constructor(t){let r=2*(t-1),s=2*(2*t-1),i=2**Math.ceil(Math.log2(s));this.bufferSize=i,this._a=r;let a=new Float64Array(s),n=new Float64Array(i);this._chirpBuffer=new Float64Array(i),this._buffer1=new Float64Array(i),this._buffer2=new Float64Array(i),this._outBuffer1=new Float64Array(i),this._outBuffer2=new Float64Array(i);let o=-2*Math.PI/t,l=Math.cos(o),u=Math.sin(o);for(let r=0;r<s>>1;++r){let s=(r+1-t)**2/2,i=Math.sqrt(l**2+u**2)**s,o=s*Math.atan2(u,l),d=2*r;a[d]=i*Math.cos(o),a[d+1]=i*Math.sin(o),n[d]=a[d],n[d+1]=-a[d+1]}this._slicedChirpBuffer=a.subarray(r,s),this._f=new m(i>>1),this._f.transform(this._chirpBuffer,n)}_transform(t,r,s){let i=this._buffer1,a=this._buffer2,n=this._outBuffer1,o=this._outBuffer2,l=this._chirpBuffer,u=this._slicedChirpBuffer,d=this._a;if(s)for(let t=0;t<u.length;t+=2){let s=t+1,a=r[t>>1];i[t]=a*u[t],i[s]=a*u[s]}else for(let t=0;t<u.length;t+=2){let s=t+1;i[t]=r[t]*u[t]-r[s]*u[s],i[s]=r[t]*u[s]+r[s]*u[t]}this._f.transform(n,i);for(let t=0;t<l.length;t+=2){let r=t+1;a[t]=n[t]*l[t]-n[r]*l[r],a[r]=n[t]*l[r]+n[r]*l[t]}this._f.inverseTransform(o,a);for(let r=0;r<o.length;r+=2){let s=o[r+d],i=o[r+d+1],a=u[r],n=u[r+1];t[r]=s*a-i*n,t[r+1]=s*n+i*a}}transform(t,r){this._transform(t,r,!1)}realTransform(t,r){this._transform(t,r,!0)}}class g{constructor(t){this.fft_length=t,this.isPowerOfTwo=h(t),this.isPowerOfTwo?(this.fft=new m(t),this.outputBufferSize=2*t):(this.fft=new f(t),this.outputBufferSize=this.fft.bufferSize)}realTransform(t,r){this.fft.realTransform(t,r)}transform(t,r){this.fft.transform(t,r)}}function _(t,r){if(r%2==0||r<=0)throw Error("Window size must be a positive odd number");let s=new t.constructor(t.length),i=new t.constructor(r),a=Math.floor(r/2);for(let r=0;r<t.length;++r){let n=0;for(let s=-a;s<=a;++s){let a=r+s;a<0?a=Math.abs(a):a>=t.length&&(a=2*(t.length-1)-a),i[n++]=t[a]}i.sort(),s[r]=i[a]}return s}function b(t,r){let s=Math.pow(10,r);return Math.round(t*s)/s}function y(t){let r=Math.round(t);return Math.abs(t)%1==.5?r%2==0?r:r-1:r}function w(t){let r=t.length,s=t[0].length,i=[r+1,s+1],a=Array.from({length:i[0]},()=>Array(i[1]).fill(1/0));a[0][0]=0;let n=Array.from({length:i[0]},()=>Array(i[1]).fill(-1));for(let r=1;r<i[1];++r)for(let s=1;s<i[0];++s){let i,o;let l=a[s-1][r-1],u=a[s-1][r],d=a[s][r-1];l<u&&l<d?(i=l,o=0):u<l&&u<d?(i=u,o=1):(i=d,o=2),a[s][r]=t[s-1][r-1]+i,n[s][r]=o}for(let t=0;t<i[1];++t)n[0][t]=2;for(let t=0;t<i[0];++t)n[t][0]=1;let o=r,l=s,u=[],d=[];for(;o>0||l>0;)switch(u.push(o-1),d.push(l-1),n[o][l]){case 0:--o,--l;break;case 1:--o;break;case 2:--l;break;default:throw Error(`Internal error in dynamic time warping. Unexpected trace[${o}, ${l}]. Please file a bug report.`)}return u.reverse(),d.reverse(),[u,d]}},"./src/utils/tensor.js":(t,r,s)=>{s.r(r),s.d(r,{Tensor:()=>l,cat:()=>v,full:()=>S,full_like:()=>P,interpolate:()=>d,interpolate_4d:()=>c,layer_norm:()=>b,matmul:()=>p,mean:()=>$,mean_pooling:()=>_,ones:()=>E,ones_like:()=>I,permute:()=>u,quantize_embeddings:()=>O,rand:()=>z,rfft:()=>h,slice:()=>g,stack:()=>M,std_mean:()=>k,topk:()=>m,zeros:()=>A,zeros_like:()=>F});var i=s("./src/utils/maths.js"),a=s("./src/backends/onnx.js"),n=s("./src/ops/registry.js");let o=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class l{get dims(){return this.ort_tensor.dims}set dims(t){this.ort_tensor.dims=t}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...t){return(0,a.isONNXTensor)(t[0])?this.ort_tensor=t[0]:this.ort_tensor=new a.Tensor(t[0],t[1],t[2]),new Proxy(this,{get:(t,r)=>{if("string"==typeof r){let s=Number(r);if(Number.isInteger(s))return t._getitem(s)}return t[r]},set:(t,r,s)=>t[r]=s})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){let[t,...r]=this.dims;if(r.length>0){let s=r.reduce((t,r)=>t*r);for(let i=0;i<t;++i)yield this._subarray(i,s,r)}else yield*this.data}_getitem(t){let[r,...s]=this.dims;if(t=x(t,r),!(s.length>0))return new l(this.type,[this.data[t]],s);{let r=s.reduce((t,r)=>t*r);return this._subarray(t,r,s)}}indexOf(t){let r=this.data;for(let s=0;s<r.length;++s)if(r[s]==t)return s;return -1}_subarray(t,r,s){let i=t*r,a=(t+1)*r,n="subarray"in this.data?this.data.subarray(i,a):this.data.slice(i,a);return new l(this.type,n,s)}item(){let t=this.data;if(1!==t.length)throw Error(`a Tensor with ${t.length} elements cannot be converted to Scalar`);return t[0]}tolist(){return function(t,r){let s=t.length;if(s!==r.reduce((t,r)=>t*r))throw Error(`cannot reshape array of size ${s} into shape (${r})`);let i=t;for(let t=r.length-1;t>=0;t--)i=i.reduce((s,i)=>{let a=s[s.length-1];return a.length<r[t]?a.push(i):s.push([i]),s},[[]]);return i[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=1/(1+Math.exp(-t[r]));return this}map(t){return this.clone().map_(t)}map_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]=t(r[s],s,r);return this}mul(t){return this.clone().mul_(t)}mul_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]*=t;return this}div(t){return this.clone().div_(t)}div_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]/=t;return this}add(t){return this.clone().add_(t)}add_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]+=t;return this}sub(t){return this.clone().sub_(t)}sub_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]-=t;return this}clone(){return new l(this.type,this.data.slice(),this.dims.slice())}slice(...t){let r=[],s=[];for(let i=0;i<this.dims.length;++i){let a=t[i];if(null==a)s.push([0,this.dims[i]]),r.push(this.dims[i]);else if("number"==typeof a)a=x(a,this.dims[i],i),s.push([a,a+1]);else if(Array.isArray(a)&&2===a.length){let[t,n]=a;if((t=null===t?0:x(t,this.dims[i],i,!1))>(n=null===n?this.dims[i]:x(n,this.dims[i],i,!1)))throw Error(`Invalid slice: ${a}`);let o=[Math.max(t,0),Math.min(n,this.dims[i])];s.push(o),r.push(o[1]-o[0])}else throw Error(`Invalid slice: ${a}`)}let i=s.map(([t,r])=>r-t),a=i.reduce((t,r)=>t*r),n=this.data,o=new n.constructor(a),u=this.stride();for(let t=0;t<a;++t){let r=0;for(let a=i.length-1,n=t;a>=0;--a){let t=i[a];r+=(n%t+s[a][0])*u[a],n=Math.floor(n/t)}o[t]=n[r]}return new l(this.type,o,r)}permute(...t){return u(this,t)}transpose(...t){return this.permute(...t)}sum(t=null,r=!1){return this.norm(1,t,r)}norm(t="fro",r=null,s=!1){if("fro"===t)t=2;else if("string"==typeof t)throw Error(`Unsupported norm: ${t}`);let i=this.data,a=(r,s)=>r+s**t;if(null===r){let r=i.reduce(a,0)**(1/t);return new l(this.type,[r],[])}let[n,o,u]=T(a,this,r,s);if(1!==t)for(let r=0;r<o.length;++r)o[r]=o[r]**(1/t);return new l(n,o,u)}normalize_(t=2,r=1){r=x(r,this.dims.length);let s=this.norm(t,r,!0),i=this.data,a=s.data;for(let t=0;t<i.length;++t){let s=0;for(let i=this.dims.length-1,a=t,n=1;i>=0;--i){let t=this.dims[i];i!==r&&(s+=a%t*n,n*=this.dims[i]),a=Math.floor(a/t)}i[t]/=a[s]}return this}normalize(t=2,r=1){return this.clone().normalize_(t,r)}stride(){return function(t){let r=Array(t.length);for(let s=t.length-1,i=1;s>=0;--s)r[s]=i,i*=t[s];return r}(this.dims)}squeeze(t=null){return new l(this.type,this.data,y(this.dims,t))}squeeze_(t=null){return this.dims=y(this.dims,t),this}unsqueeze(t=null){return new l(this.type,this.data,w(this.dims,t))}unsqueeze_(t=null){return this.dims=w(this.dims,t),this}flatten_(t=0,r=-1){r=(r+this.dims.length)%this.dims.length;let s=this.dims.slice(0,t),i=this.dims.slice(t,r+1),a=this.dims.slice(r+1);return this.dims=[...s,i.reduce((t,r)=>t*r,1),...a],this}flatten(t=0,r=-1){return this.clone().flatten_(t,r)}view(...t){let r=-1;for(let s=0;s<t.length;++s)if(-1===t[s]){if(-1!==r)throw Error("Only one dimension can be inferred");r=s}let s=this.data;if(-1!==r){let i=t.reduce((t,s,i)=>i!==r?t*s:t,1);t[r]=s.length/i}return new l(this.type,s,t)}neg_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=-t[r];return this}neg(){return this.clone().neg_()}gt(t){let r=new Uint8Array(this.data.length),s=this.data;for(let i=0;i<s.length;++i)r[i]=s[i]>t?1:0;return new l("bool",r,this.dims)}lt(t){let r=new Uint8Array(this.data.length),s=this.data;for(let i=0;i<s.length;++i)r[i]=s[i]<t?1:0;return new l("bool",r,this.dims)}clamp_(t,r){let s=this.data;for(let i=0;i<s.length;++i)s[i]=Math.min(Math.max(s[i],t),r);return this}clamp(t,r){return this.clone().clamp_(t,r)}round_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=Math.round(t[r]);return this}round(){return this.clone().round_()}mean(t=null,r=!1){return $(this,t,r)}min(t=null,r=!1){if(null===t){let t=(0,i.min)(this.data)[0];return new l(this.type,[t],[])}let[s,a,n]=T((t,r)=>Math.min(t,r),this,t,r,1/0);return new l(s,a,n)}max(t=null,r=!1){if(null===t){let t=(0,i.max)(this.data)[0];return new l(this.type,[t],[])}let[s,a,n]=T((t,r)=>Math.max(t,r),this,t,r,-1/0);return new l(s,a,n)}argmin(t=null,r=!1){if(null!==t)throw Error("`dim !== null` not yet implemented.");return new l("int64",[BigInt((0,i.min)(this.data)[1])],[])}argmax(t=null,r=!1){if(null!==t)throw Error("`dim !== null` not yet implemented.");return new l("int64",[BigInt((0,i.max)(this.data)[1])],[])}to(t){let r;if(this.type===t)return this;if(!o.hasOwnProperty(t))throw Error(`Unsupported type: ${t}`);let s=["int64","uint64"].includes(this.type),i=["int64","uint64"].includes(t);return s&&!i?r=Number:!s&&i&&(r=BigInt),new l(t,o[t].from(this.data,r),this.dims)}}function u(t,r){let[s,a]=(0,i.permute_data)(t.data,t.dims,r);return new l(t.type,s,a)}function d(t,[r,s],a="bilinear",n=!1){let o=t.dims.at(-3)??1,u=t.dims.at(-2),d=t.dims.at(-1),c=(0,i.interpolate_data)(t.data,[o,u,d],[r,s],a,n);return new l(t.type,c,[o,r,s])}async function c(t,{size:r=null,mode:s="bilinear"}={}){let i,a;if(4!==t.dims.length)throw Error("`interpolate_4d` currently only supports 4D input.");if(!r)throw Error("`interpolate_4d` requires a `size` argument.");if(2===r.length)i=[...t.dims.slice(0,2),...r];else if(3===r.length)i=[t.dims[0],...r];else if(4===r.length)i=r;else throw Error("`size` must be of length 2, 3, or 4.");if("nearest"===s)a=await n.TensorOpRegistry.nearest_interpolate_4d;else if("bilinear"===s)a=await n.TensorOpRegistry.bilinear_interpolate_4d;else if("bicubic"===s)a=await n.TensorOpRegistry.bicubic_interpolate_4d;else throw Error(`Unsupported mode: ${s}`);let o=new l("int64",new BigInt64Array(i.map(BigInt)),[i.length]);return await a({x:t,s:o})}async function p(t,r){let s=await n.TensorOpRegistry.matmul;return await s({a:t,b:r})}async function h(t,r){let s=await n.TensorOpRegistry.rfft;return await s({x:t,a:r})}async function m(t,r){let s=await n.TensorOpRegistry.top_k;return r=null==r?t.dims.at(-1):Math.min(r,t.dims.at(-1)),await s({x:t,k:new l("int64",[BigInt(r)],[1])})}let f=t=>new l("int64",t,[t.length]);async function g(t,r,s,i,a){let o=await n.TensorOpRegistry.slice;return await o({x:t,s:f(r),e:f(s),a:f(i),t:f(a??Array(i.length).fill(1))})}function _(t,r){let s=t.data,i=r.data,a=[t.dims[0],t.dims[2]],n=new s.constructor(a[0]*a[1]),[o,u,d]=t.dims,c=0;for(let t=0;t<o;++t){let r=t*d*u;for(let a=0;a<d;++a){let o=0,l=0,p=t*u,h=r+a;for(let t=0;t<u;++t){let r=Number(i[p+t]);l+=r,o+=s[h+t*d]*r}let m=o/l;n[c++]=m}}return new l(t.type,n,a)}function b(t,r,{eps:s=1e-5}={}){if(2!==t.dims.length)throw Error("`layer_norm` currently only supports 2D input.");let[i,a]=t.dims;if(1!==r.length&&r[0]!==a)throw Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");let[n,o]=k(t,1,0,!0),u=n.data,d=o.data,c=t.data,p=new c.constructor(c.length);for(let t=0;t<i;++t){let r=t*a;for(let i=0;i<a;++i){let a=r+i;p[a]=(c[a]-d[t])/(u[t]+s)}}return new l(t.type,p,t.dims)}function y(t,r){return t=t.slice(),null===r?t=t.filter(t=>1!==t):"number"==typeof r?1===t[r]&&t.splice(r,1):Array.isArray(r)&&(t=t.filter((t,s)=>1!==t||!r.includes(s))),t}function w(t,r){return r=x(r,t.length+1),(t=t.slice()).splice(r,0,1),t}function x(t,r,s=null,i=!0){if(i&&(t<-r||t>=r))throw Error(`IndexError: index ${t} is out of bounds for dimension${null===s?"":" "+s} with size ${r}`);return t<0&&(t=(t%r+r)%r),t}function v(t,r=0){r=x(r,t[0].dims.length);let s=t[0].dims.slice();s[r]=t.reduce((t,s)=>t+s.dims[r],0);let i=s.reduce((t,r)=>t*r,1),a=new t[0].data.constructor(i),n=t[0].type;if(0===r){let r=0;for(let s of t){let t=s.data;a.set(t,r),r+=t.length}}else{let i=0;for(let n=0;n<t.length;++n){let{data:o,dims:l}=t[n];for(let t=0;t<o.length;++t){let n=0;for(let a=l.length-1,o=t,u=1;a>=0;--a){let t=l[a],d=o%t;a===r&&(d+=i),n+=d*u,u*=s[a],o=Math.floor(o/t)}a[n]=o[t]}i+=l[r]}}return new l(n,a,s)}function M(t,r=0){return v(t.map(t=>t.unsqueeze(r)),r)}function T(t,r,s=null,i=!1,a=null){let n=r.data,o=r.dims;s=x(s,o.length);let l=o.slice();l[s]=1;let u=new n.constructor(n.length/o[s]);null!==a&&u.fill(a);for(let r=0;r<n.length;++r){let i=0;for(let t=o.length-1,a=r,n=1;t>=0;--t){let r=o[t];t!==s&&(i+=a%r*n,n*=l[t]),a=Math.floor(a/r)}u[i]=t(u[i],n[r],r,i)}return i||l.splice(s,1),[r.type,u,l]}function k(t,r=null,s=1,i=!1){let a=t.data,n=t.dims;if(null===r){let r=a.reduce((t,r)=>t+r,0)/a.length,i=Math.sqrt(a.reduce((t,s)=>t+(s-r)**2,0)/(a.length-s)),n=new l(t.type,[r],[]);return[new l(t.type,[i],[]),n]}let o=$(t,r=x(r,n.length),i),u=o.data,[d,c,p]=T((t,r,s,i)=>t+(r-u[i])**2,t,r,i);for(let t=0;t<c.length;++t)c[t]=Math.sqrt(c[t]/(n[r]-s));return[new l(d,c,p),o]}function $(t,r=null,s=!1){let i=t.dims,a=t.data;if(null===r){let r=a.reduce((t,r)=>t+r,0);return new l(t.type,[r/a.length],[])}let[n,o,u]=T((t,r)=>t+r,t,r=x(r,i.length),s);if(1!==i[r])for(let t=0;t<o.length;++t)o[t]/=i[r];return new l(n,o,u)}function C(t,r,s,i){return new l(s,new i(t.reduce((t,r)=>t*r,1)).fill(r),t)}function S(t,r){let s,i;if("number"==typeof r)s="float32",i=Float32Array;else if("bigint"==typeof r)s="int64",i=BigInt64Array;else if("boolean"==typeof r)s="bool",i=Uint8Array;else throw Error(`Unsupported data type: ${typeof r}`);return C(t,r,s,i)}function P(t,r){return S(t.dims,r)}function E(t){return C(t,1n,"int64",BigInt64Array)}function I(t){return E(t.dims)}function A(t){return C(t,0n,"int64",BigInt64Array)}function F(t){return A(t.dims)}function z(t){let r=t.reduce((t,r)=>t*r,1);return new l("float32",Float32Array.from({length:r},()=>Math.random()),t)}function O(t,r){if(2!==t.dims.length)throw Error("The tensor must have 2 dimensions");if(t.dims.at(-1)%8!=0)throw Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(r))throw Error("The precision must be either 'binary' or 'ubinary'");let s="binary"===r,i=s?Int8Array:Uint8Array,a=t.data,n=new i(a.length/8);for(let t=0;t<a.length;++t){let r=a[t]>0?1:0,i=Math.floor(t/8),o=t%8;n[i]|=r<<7-o,s&&0===o&&(n[i]-=128)}return new l(s?"int8":"uint8",n,[t.dims[0],t.dims[1]/8])}}},I={};function A(t){var r=I[t];if(void 0!==r)return r.exports;var s=I[t]={exports:{}};return E[t](s,s.exports,A),s.exports}A.m=E,n=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,A.t=function(t,r){if(1&r&&(t=this(t)),8&r||"object"==typeof t&&t&&(4&r&&t.__esModule||16&r&&"function"==typeof t.then))return t;var s=Object.create(null);A.r(s);var i={};a=a||[null,n({}),n([]),n(n)];for(var o=2&r&&t;"object"==typeof o&&!~a.indexOf(o);o=n(o))Object.getOwnPropertyNames(o).forEach(r=>i[r]=()=>t[r]);return i.default=()=>t,A.d(s,i),s},A.d=(t,r)=>{for(var s in r)A.o(r,s)&&!A.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:r[s]})},A.o=(t,r)=>Object.prototype.hasOwnProperty.call(t,r),A.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i=(i="file:///D:/NextJs%20Apps%20(To%20BUILD)/Remove%20Background%20for%20images/remover/node_modules/@huggingface/transformers/dist/transformers.js").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),A.p=i,A.b=new URL("file:///D:/NextJs%20Apps%20(To%20BUILD)/Remove%20Background%20for%20images/remover/node_modules/@huggingface/transformers/dist/transformers.js");var F={};A.r(F),A.d(F,{ASTFeatureExtractor:()=>_.ASTFeatureExtractor,ASTForAudioClassification:()=>u.ASTForAudioClassification,ASTModel:()=>u.ASTModel,ASTPreTrainedModel:()=>u.ASTPreTrainedModel,AlbertForMaskedLM:()=>u.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>u.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>u.AlbertForSequenceClassification,AlbertModel:()=>u.AlbertModel,AlbertPreTrainedModel:()=>u.AlbertPreTrainedModel,AlbertTokenizer:()=>d.AlbertTokenizer,AudioClassificationPipeline:()=>l.AudioClassificationPipeline,AutoConfig:()=>c.AutoConfig,AutoFeatureExtractor:()=>b.AutoFeatureExtractor,AutoImageProcessor:()=>x.AutoImageProcessor,AutoModel:()=>u.AutoModel,AutoModelForAudioClassification:()=>u.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>u.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>u.AutoModelForCTC,AutoModelForCausalLM:()=>u.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>u.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>u.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>u.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>u.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>u.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>u.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>u.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>u.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>u.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>u.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>u.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>u.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>u.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>u.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>u.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>u.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>u.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>u.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>u.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>u.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>u.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>u.AutoModelForVision2Seq,AutoModelForXVector:()=>u.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>u.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>T.AutoProcessor,AutoTokenizer:()=>d.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>l.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>u.BartForConditionalGeneration,BartForSequenceClassification:()=>u.BartForSequenceClassification,BartModel:()=>u.BartModel,BartPretrainedModel:()=>u.BartPretrainedModel,BartTokenizer:()=>d.BartTokenizer,BaseModelOutput:()=>u.BaseModelOutput,BaseStreamer:()=>k.BaseStreamer,BeitFeatureExtractor:()=>w.BeitFeatureExtractor,BeitForImageClassification:()=>u.BeitForImageClassification,BeitModel:()=>u.BeitModel,BeitPreTrainedModel:()=>u.BeitPreTrainedModel,BertForMaskedLM:()=>u.BertForMaskedLM,BertForQuestionAnswering:()=>u.BertForQuestionAnswering,BertForSequenceClassification:()=>u.BertForSequenceClassification,BertForTokenClassification:()=>u.BertForTokenClassification,BertModel:()=>u.BertModel,BertPreTrainedModel:()=>u.BertPreTrainedModel,BertTokenizer:()=>d.BertTokenizer,BitImageProcessor:()=>w.BitImageProcessor,BlenderbotForConditionalGeneration:()=>u.BlenderbotForConditionalGeneration,BlenderbotModel:()=>u.BlenderbotModel,BlenderbotPreTrainedModel:()=>u.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>u.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>u.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>u.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>d.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>d.BlenderbotTokenizer,BloomForCausalLM:()=>u.BloomForCausalLM,BloomModel:()=>u.BloomModel,BloomPreTrainedModel:()=>u.BloomPreTrainedModel,BloomTokenizer:()=>d.BloomTokenizer,CLIPFeatureExtractor:()=>w.CLIPFeatureExtractor,CLIPImageProcessor:()=>w.CLIPImageProcessor,CLIPModel:()=>u.CLIPModel,CLIPPreTrainedModel:()=>u.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>u.CLIPSegForImageSegmentation,CLIPSegModel:()=>u.CLIPSegModel,CLIPSegPreTrainedModel:()=>u.CLIPSegPreTrainedModel,CLIPTextModel:()=>u.CLIPTextModel,CLIPTextModelWithProjection:()=>u.CLIPTextModelWithProjection,CLIPTokenizer:()=>d.CLIPTokenizer,CLIPVisionModel:()=>u.CLIPVisionModel,CLIPVisionModelWithProjection:()=>u.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>u.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>u.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>u.CamembertForSequenceClassification,CamembertForTokenClassification:()=>u.CamembertForTokenClassification,CamembertModel:()=>u.CamembertModel,CamembertPreTrainedModel:()=>u.CamembertPreTrainedModel,CamembertTokenizer:()=>d.CamembertTokenizer,CausalLMOutput:()=>u.CausalLMOutput,CausalLMOutputWithPast:()=>u.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>w.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>u.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>u.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>u.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>_.ClapFeatureExtractor,ClapModel:()=>u.ClapModel,ClapPreTrainedModel:()=>u.ClapPreTrainedModel,ClapTextModelWithProjection:()=>u.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>C.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>u.CodeGenForCausalLM,CodeGenModel:()=>u.CodeGenModel,CodeGenPreTrainedModel:()=>u.CodeGenPreTrainedModel,CodeGenTokenizer:()=>d.CodeGenTokenizer,CodeLlamaTokenizer:()=>d.CodeLlamaTokenizer,CohereForCausalLM:()=>u.CohereForCausalLM,CohereModel:()=>u.CohereModel,CoherePreTrainedModel:()=>u.CoherePreTrainedModel,CohereTokenizer:()=>d.CohereTokenizer,ConvBertForMaskedLM:()=>u.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>u.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>u.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>u.ConvBertForTokenClassification,ConvBertModel:()=>u.ConvBertModel,ConvBertPreTrainedModel:()=>u.ConvBertPreTrainedModel,ConvBertTokenizer:()=>d.ConvBertTokenizer,ConvNextFeatureExtractor:()=>w.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>u.ConvNextForImageClassification,ConvNextImageProcessor:()=>w.ConvNextImageProcessor,ConvNextModel:()=>u.ConvNextModel,ConvNextPreTrainedModel:()=>u.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>u.ConvNextV2ForImageClassification,ConvNextV2Model:()=>u.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>u.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>w.DPTFeatureExtractor,DPTForDepthEstimation:()=>u.DPTForDepthEstimation,DPTImageProcessor:()=>w.DPTImageProcessor,DPTModel:()=>u.DPTModel,DPTPreTrainedModel:()=>u.DPTPreTrainedModel,DebertaForMaskedLM:()=>u.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>u.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>u.DebertaForSequenceClassification,DebertaForTokenClassification:()=>u.DebertaForTokenClassification,DebertaModel:()=>u.DebertaModel,DebertaPreTrainedModel:()=>u.DebertaPreTrainedModel,DebertaTokenizer:()=>d.DebertaTokenizer,DebertaV2ForMaskedLM:()=>u.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>u.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>u.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>u.DebertaV2ForTokenClassification,DebertaV2Model:()=>u.DebertaV2Model,DebertaV2PreTrainedModel:()=>u.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>d.DebertaV2Tokenizer,DecisionTransformerModel:()=>u.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>u.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>w.DeiTFeatureExtractor,DeiTForImageClassification:()=>u.DeiTForImageClassification,DeiTImageProcessor:()=>w.DeiTImageProcessor,DeiTModel:()=>u.DeiTModel,DeiTPreTrainedModel:()=>u.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>u.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>u.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>l.DepthEstimationPipeline,DepthProForDepthEstimation:()=>u.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>u.DepthProPreTrainedModel,DetrFeatureExtractor:()=>w.DetrFeatureExtractor,DetrForObjectDetection:()=>u.DetrForObjectDetection,DetrForSegmentation:()=>u.DetrForSegmentation,DetrImageProcessor:()=>w.DetrImageProcessor,DetrModel:()=>u.DetrModel,DetrObjectDetectionOutput:()=>u.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>u.DetrPreTrainedModel,DetrSegmentationOutput:()=>u.DetrSegmentationOutput,Dinov2ForImageClassification:()=>u.Dinov2ForImageClassification,Dinov2Model:()=>u.Dinov2Model,Dinov2PreTrainedModel:()=>u.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>u.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>u.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>u.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>u.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>u.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>u.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>u.DistilBertForTokenClassification,DistilBertModel:()=>u.DistilBertModel,DistilBertPreTrainedModel:()=>u.DistilBertPreTrainedModel,DistilBertTokenizer:()=>d.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>l.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>w.DonutFeatureExtractor,DonutImageProcessor:()=>w.DonutImageProcessor,DonutSwinModel:()=>u.DonutSwinModel,DonutSwinPreTrainedModel:()=>u.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>u.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>w.EfficientNetImageProcessor,EfficientNetModel:()=>u.EfficientNetModel,EfficientNetPreTrainedModel:()=>u.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>u.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>u.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>u.ElectraForSequenceClassification,ElectraForTokenClassification:()=>u.ElectraForTokenClassification,ElectraModel:()=>u.ElectraModel,ElectraPreTrainedModel:()=>u.ElectraPreTrainedModel,ElectraTokenizer:()=>d.ElectraTokenizer,EosTokenCriteria:()=>$.EosTokenCriteria,EsmForMaskedLM:()=>u.EsmForMaskedLM,EsmForSequenceClassification:()=>u.EsmForSequenceClassification,EsmForTokenClassification:()=>u.EsmForTokenClassification,EsmModel:()=>u.EsmModel,EsmPreTrainedModel:()=>u.EsmPreTrainedModel,EsmTokenizer:()=>d.EsmTokenizer,ExaoneForCausalLM:()=>u.ExaoneForCausalLM,ExaoneModel:()=>u.ExaoneModel,ExaonePreTrainedModel:()=>u.ExaonePreTrainedModel,FFT:()=>f.FFT,FalconForCausalLM:()=>u.FalconForCausalLM,FalconModel:()=>u.FalconModel,FalconPreTrainedModel:()=>u.FalconPreTrainedModel,FalconTokenizer:()=>d.FalconTokenizer,FastViTForImageClassification:()=>u.FastViTForImageClassification,FastViTModel:()=>u.FastViTModel,FastViTPreTrainedModel:()=>u.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>l.FeatureExtractionPipeline,FeatureExtractor:()=>g.FeatureExtractor,FillMaskPipeline:()=>l.FillMaskPipeline,Florence2ForConditionalGeneration:()=>u.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>u.Florence2PreTrainedModel,Florence2Processor:()=>M.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>C.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>C.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>w.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>u.GLPNForDepthEstimation,GLPNModel:()=>u.GLPNModel,GLPNPreTrainedModel:()=>u.GLPNPreTrainedModel,GPT2LMHeadModel:()=>u.GPT2LMHeadModel,GPT2Model:()=>u.GPT2Model,GPT2PreTrainedModel:()=>u.GPT2PreTrainedModel,GPT2Tokenizer:()=>d.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>u.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>u.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>u.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>u.GPTJForCausalLM,GPTJModel:()=>u.GPTJModel,GPTJPreTrainedModel:()=>u.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>u.GPTNeoForCausalLM,GPTNeoModel:()=>u.GPTNeoModel,GPTNeoPreTrainedModel:()=>u.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>u.GPTNeoXForCausalLM,GPTNeoXModel:()=>u.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>u.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>d.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>u.Gemma2ForCausalLM,Gemma2Model:()=>u.Gemma2Model,Gemma2PreTrainedModel:()=>u.Gemma2PreTrainedModel,GemmaForCausalLM:()=>u.GemmaForCausalLM,GemmaModel:()=>u.GemmaModel,GemmaPreTrainedModel:()=>u.GemmaPreTrainedModel,GemmaTokenizer:()=>d.GemmaTokenizer,GlmForCausalLM:()=>u.GlmForCausalLM,GlmModel:()=>u.GlmModel,GlmPreTrainedModel:()=>u.GlmPreTrainedModel,GraniteForCausalLM:()=>u.GraniteForCausalLM,GraniteModel:()=>u.GraniteModel,GranitePreTrainedModel:()=>u.GranitePreTrainedModel,Grok1Tokenizer:()=>d.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>u.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>w.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>u.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>M.GroundingDinoProcessor,GroupViTModel:()=>u.GroupViTModel,GroupViTPreTrainedModel:()=>u.GroupViTPreTrainedModel,HeliumForCausalLM:()=>u.HeliumForCausalLM,HeliumModel:()=>u.HeliumModel,HeliumPreTrainedModel:()=>u.HeliumPreTrainedModel,HerbertTokenizer:()=>d.HerbertTokenizer,HieraForImageClassification:()=>u.HieraForImageClassification,HieraModel:()=>u.HieraModel,HieraPreTrainedModel:()=>u.HieraPreTrainedModel,HubertForCTC:()=>u.HubertForCTC,HubertForSequenceClassification:()=>u.HubertForSequenceClassification,HubertModel:()=>u.HubertModel,HubertPreTrainedModel:()=>u.HubertPreTrainedModel,IJepaForImageClassification:()=>u.IJepaForImageClassification,IJepaModel:()=>u.IJepaModel,IJepaPreTrainedModel:()=>u.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>u.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>w.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>u.Idefics3PreTrainedModel,Idefics3Processor:()=>M.Idefics3Processor,ImageClassificationPipeline:()=>l.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>l.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>_.ImageFeatureExtractor,ImageMattingOutput:()=>u.ImageMattingOutput,ImageProcessor:()=>y.ImageProcessor,ImageSegmentationPipeline:()=>l.ImageSegmentationPipeline,ImageToImagePipeline:()=>l.ImageToImagePipeline,ImageToTextPipeline:()=>l.ImageToTextPipeline,InterruptableStoppingCriteria:()=>$.InterruptableStoppingCriteria,JAISLMHeadModel:()=>u.JAISLMHeadModel,JAISModel:()=>u.JAISModel,JAISPreTrainedModel:()=>u.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>w.JinaCLIPImageProcessor,JinaCLIPModel:()=>u.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>u.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>M.JinaCLIPProcessor,JinaCLIPTextModel:()=>u.JinaCLIPTextModel,JinaCLIPVisionModel:()=>u.JinaCLIPVisionModel,LlamaForCausalLM:()=>u.LlamaForCausalLM,LlamaModel:()=>u.LlamaModel,LlamaPreTrainedModel:()=>u.LlamaPreTrainedModel,LlamaTokenizer:()=>d.LlamaTokenizer,LlavaForConditionalGeneration:()=>u.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>u.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>w.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>u.LlavaPreTrainedModel,LogitsProcessor:()=>C.LogitsProcessor,LogitsProcessorList:()=>C.LogitsProcessorList,LogitsWarper:()=>C.LogitsWarper,LongT5ForConditionalGeneration:()=>u.LongT5ForConditionalGeneration,LongT5Model:()=>u.LongT5Model,LongT5PreTrainedModel:()=>u.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>u.M2M100ForConditionalGeneration,M2M100Model:()=>u.M2M100Model,M2M100PreTrainedModel:()=>u.M2M100PreTrainedModel,M2M100Tokenizer:()=>d.M2M100Tokenizer,MBart50Tokenizer:()=>d.MBart50Tokenizer,MBartForCausalLM:()=>u.MBartForCausalLM,MBartForConditionalGeneration:()=>u.MBartForConditionalGeneration,MBartForSequenceClassification:()=>u.MBartForSequenceClassification,MBartModel:()=>u.MBartModel,MBartPreTrainedModel:()=>u.MBartPreTrainedModel,MBartTokenizer:()=>d.MBartTokenizer,MPNetForMaskedLM:()=>u.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>u.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>u.MPNetForSequenceClassification,MPNetForTokenClassification:()=>u.MPNetForTokenClassification,MPNetModel:()=>u.MPNetModel,MPNetPreTrainedModel:()=>u.MPNetPreTrainedModel,MPNetTokenizer:()=>d.MPNetTokenizer,MT5ForConditionalGeneration:()=>u.MT5ForConditionalGeneration,MT5Model:()=>u.MT5Model,MT5PreTrainedModel:()=>u.MT5PreTrainedModel,MarianMTModel:()=>u.MarianMTModel,MarianModel:()=>u.MarianModel,MarianPreTrainedModel:()=>u.MarianPreTrainedModel,MarianTokenizer:()=>d.MarianTokenizer,Mask2FormerImageProcessor:()=>w.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>w.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>u.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>w.MaskFormerImageProcessor,MaskFormerModel:()=>u.MaskFormerModel,MaskFormerPreTrainedModel:()=>u.MaskFormerPreTrainedModel,MaskedLMOutput:()=>u.MaskedLMOutput,MaxLengthCriteria:()=>$.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>u.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>u.MgpstrModelOutput,MgpstrPreTrainedModel:()=>u.MgpstrPreTrainedModel,MgpstrProcessor:()=>M.MgpstrProcessor,MgpstrTokenizer:()=>d.MgpstrTokenizer,MinLengthLogitsProcessor:()=>C.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>C.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>u.MistralForCausalLM,MistralModel:()=>u.MistralModel,MistralPreTrainedModel:()=>u.MistralPreTrainedModel,MobileBertForMaskedLM:()=>u.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>u.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>u.MobileBertForSequenceClassification,MobileBertModel:()=>u.MobileBertModel,MobileBertPreTrainedModel:()=>u.MobileBertPreTrainedModel,MobileBertTokenizer:()=>d.MobileBertTokenizer,MobileLLMForCausalLM:()=>u.MobileLLMForCausalLM,MobileLLMModel:()=>u.MobileLLMModel,MobileLLMPreTrainedModel:()=>u.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>w.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>u.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>w.MobileNetV1ImageProcessor,MobileNetV1Model:()=>u.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>u.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>w.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>u.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>w.MobileNetV2ImageProcessor,MobileNetV2Model:()=>u.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>u.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>w.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>u.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>w.MobileNetV3ImageProcessor,MobileNetV3Model:()=>u.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>u.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>w.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>u.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>w.MobileNetV4ImageProcessor,MobileNetV4Model:()=>u.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>u.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>w.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>u.MobileViTForImageClassification,MobileViTImageProcessor:()=>w.MobileViTImageProcessor,MobileViTModel:()=>u.MobileViTModel,MobileViTPreTrainedModel:()=>u.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>u.MobileViTV2ForImageClassification,MobileViTV2Model:()=>u.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>u.MobileViTV2PreTrainedModel,ModelOutput:()=>u.ModelOutput,ModernBertForMaskedLM:()=>u.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>u.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>u.ModernBertForTokenClassification,ModernBertModel:()=>u.ModernBertModel,ModernBertPreTrainedModel:()=>u.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>u.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>_.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>u.MoonshineForConditionalGeneration,MoonshineModel:()=>u.MoonshineModel,MoonshinePreTrainedModel:()=>u.MoonshinePreTrainedModel,MoonshineProcessor:()=>M.MoonshineProcessor,MptForCausalLM:()=>u.MptForCausalLM,MptModel:()=>u.MptModel,MptPreTrainedModel:()=>u.MptPreTrainedModel,MultiModalityCausalLM:()=>u.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>u.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>u.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>u.MusicgenForConditionalGeneration,MusicgenModel:()=>u.MusicgenModel,MusicgenPreTrainedModel:()=>u.MusicgenPreTrainedModel,NllbTokenizer:()=>d.NllbTokenizer,NoBadWordsLogitsProcessor:()=>C.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>C.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>u.NomicBertModel,NomicBertPreTrainedModel:()=>u.NomicBertPreTrainedModel,NougatImageProcessor:()=>w.NougatImageProcessor,NougatTokenizer:()=>d.NougatTokenizer,OPTForCausalLM:()=>u.OPTForCausalLM,OPTModel:()=>u.OPTModel,OPTPreTrainedModel:()=>u.OPTPreTrainedModel,ObjectDetectionPipeline:()=>l.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>u.Olmo2ForCausalLM,Olmo2Model:()=>u.Olmo2Model,Olmo2PreTrainedModel:()=>u.Olmo2PreTrainedModel,OlmoForCausalLM:()=>u.OlmoForCausalLM,OlmoModel:()=>u.OlmoModel,OlmoPreTrainedModel:()=>u.OlmoPreTrainedModel,OpenELMForCausalLM:()=>u.OpenELMForCausalLM,OpenELMModel:()=>u.OpenELMModel,OpenELMPreTrainedModel:()=>u.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>w.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>u.OwlViTForObjectDetection,OwlViTImageProcessor:()=>w.OwlViTImageProcessor,OwlViTModel:()=>u.OwlViTModel,OwlViTPreTrainedModel:()=>u.OwlViTPreTrainedModel,OwlViTProcessor:()=>M.OwlViTProcessor,Owlv2ForObjectDetection:()=>u.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>w.Owlv2ImageProcessor,Owlv2Model:()=>u.Owlv2Model,Owlv2PreTrainedModel:()=>u.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>u.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>u.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>M.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>u.PatchTSMixerForPrediction,PatchTSMixerModel:()=>u.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>u.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>u.PatchTSTForPrediction,PatchTSTModel:()=>u.PatchTSTModel,PatchTSTPreTrainedModel:()=>u.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>u.Phi3ForCausalLM,Phi3Model:()=>u.Phi3Model,Phi3PreTrainedModel:()=>u.Phi3PreTrainedModel,Phi3VForCausalLM:()=>u.Phi3VForCausalLM,Phi3VImageProcessor:()=>w.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>u.Phi3VPreTrainedModel,Phi3VProcessor:()=>M.Phi3VProcessor,PhiForCausalLM:()=>u.PhiForCausalLM,PhiModel:()=>u.PhiModel,PhiPreTrainedModel:()=>u.PhiPreTrainedModel,Pipeline:()=>l.Pipeline,PreTrainedModel:()=>u.PreTrainedModel,PreTrainedTokenizer:()=>d.PreTrainedTokenizer,PretrainedConfig:()=>c.PretrainedConfig,PretrainedMixin:()=>u.PretrainedMixin,Processor:()=>v.Processor,PvtForImageClassification:()=>u.PvtForImageClassification,PvtImageProcessor:()=>w.PvtImageProcessor,PvtModel:()=>u.PvtModel,PvtPreTrainedModel:()=>u.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>_.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>u.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>u.PyAnnoteModel,PyAnnotePreTrainedModel:()=>u.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>M.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>u.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>l.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>u.Qwen2ForCausalLM,Qwen2Model:()=>u.Qwen2Model,Qwen2PreTrainedModel:()=>u.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>d.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>u.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>w.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>u.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>M.Qwen2VLProcessor,RTDetrForObjectDetection:()=>u.RTDetrForObjectDetection,RTDetrImageProcessor:()=>w.RTDetrImageProcessor,RTDetrModel:()=>u.RTDetrModel,RTDetrObjectDetectionOutput:()=>u.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>u.RTDetrPreTrainedModel,RawAudio:()=>p.RawAudio,RawImage:()=>h.RawImage,RepetitionPenaltyLogitsProcessor:()=>C.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>u.ResNetForImageClassification,ResNetModel:()=>u.ResNetModel,ResNetPreTrainedModel:()=>u.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>u.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>u.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>u.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>u.RoFormerForTokenClassification,RoFormerModel:()=>u.RoFormerModel,RoFormerPreTrainedModel:()=>u.RoFormerPreTrainedModel,RoFormerTokenizer:()=>d.RoFormerTokenizer,RobertaForMaskedLM:()=>u.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>u.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>u.RobertaForSequenceClassification,RobertaForTokenClassification:()=>u.RobertaForTokenClassification,RobertaModel:()=>u.RobertaModel,RobertaPreTrainedModel:()=>u.RobertaPreTrainedModel,RobertaTokenizer:()=>d.RobertaTokenizer,SamImageProcessor:()=>w.SamImageProcessor,SamImageSegmentationOutput:()=>u.SamImageSegmentationOutput,SamModel:()=>u.SamModel,SamPreTrainedModel:()=>u.SamPreTrainedModel,SamProcessor:()=>M.SamProcessor,SapiensForDepthEstimation:()=>u.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>u.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>u.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>u.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>_.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>w.SegformerFeatureExtractor,SegformerForImageClassification:()=>u.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>u.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>w.SegformerImageProcessor,SegformerModel:()=>u.SegformerModel,SegformerPreTrainedModel:()=>u.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>u.Seq2SeqLMOutput,SequenceClassifierOutput:()=>u.SequenceClassifierOutput,SiglipImageProcessor:()=>w.SiglipImageProcessor,SiglipModel:()=>u.SiglipModel,SiglipPreTrainedModel:()=>u.SiglipPreTrainedModel,SiglipTextModel:()=>u.SiglipTextModel,SiglipTokenizer:()=>d.SiglipTokenizer,SiglipVisionModel:()=>u.SiglipVisionModel,SpeechT5FeatureExtractor:()=>_.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>u.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>u.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>u.SpeechT5HifiGan,SpeechT5Model:()=>u.SpeechT5Model,SpeechT5PreTrainedModel:()=>u.SpeechT5PreTrainedModel,SpeechT5Processor:()=>M.SpeechT5Processor,SpeechT5Tokenizer:()=>d.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>u.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>u.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>u.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>u.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>u.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>d.SqueezeBertTokenizer,StableLmForCausalLM:()=>u.StableLmForCausalLM,StableLmModel:()=>u.StableLmModel,StableLmPreTrainedModel:()=>u.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>u.Starcoder2ForCausalLM,Starcoder2Model:()=>u.Starcoder2Model,Starcoder2PreTrainedModel:()=>u.Starcoder2PreTrainedModel,StoppingCriteria:()=>$.StoppingCriteria,StoppingCriteriaList:()=>$.StoppingCriteriaList,StyleTextToSpeech2Model:()=>u.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>u.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>l.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>C.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>u.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>w.Swin2SRImageProcessor,Swin2SRModel:()=>u.Swin2SRModel,Swin2SRPreTrainedModel:()=>u.Swin2SRPreTrainedModel,SwinForImageClassification:()=>u.SwinForImageClassification,SwinModel:()=>u.SwinModel,SwinPreTrainedModel:()=>u.SwinPreTrainedModel,T5ForConditionalGeneration:()=>u.T5ForConditionalGeneration,T5Model:()=>u.T5Model,T5PreTrainedModel:()=>u.T5PreTrainedModel,T5Tokenizer:()=>d.T5Tokenizer,TableTransformerForObjectDetection:()=>u.TableTransformerForObjectDetection,TableTransformerModel:()=>u.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>u.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>u.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>C.TemperatureLogitsWarper,Tensor:()=>m.Tensor,Text2TextGenerationPipeline:()=>l.Text2TextGenerationPipeline,TextClassificationPipeline:()=>l.TextClassificationPipeline,TextGenerationPipeline:()=>l.TextGenerationPipeline,TextStreamer:()=>k.TextStreamer,TextToAudioPipeline:()=>l.TextToAudioPipeline,TokenClassificationPipeline:()=>l.TokenClassificationPipeline,TokenClassifierOutput:()=>u.TokenClassifierOutput,TokenizerModel:()=>d.TokenizerModel,TopKLogitsWarper:()=>C.TopKLogitsWarper,TopPLogitsWarper:()=>C.TopPLogitsWarper,TrOCRForCausalLM:()=>u.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>u.TrOCRPreTrainedModel,TranslationPipeline:()=>l.TranslationPipeline,UniSpeechForCTC:()=>u.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>u.UniSpeechForSequenceClassification,UniSpeechModel:()=>u.UniSpeechModel,UniSpeechPreTrainedModel:()=>u.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>u.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>u.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>u.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>u.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>u.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>M.VLChatProcessor,VLMImageProcessor:()=>w.VLMImageProcessor,ViTFeatureExtractor:()=>w.ViTFeatureExtractor,ViTForImageClassification:()=>u.ViTForImageClassification,ViTImageProcessor:()=>w.ViTImageProcessor,ViTMAEModel:()=>u.ViTMAEModel,ViTMAEPreTrainedModel:()=>u.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>u.ViTMSNForImageClassification,ViTMSNModel:()=>u.ViTMSNModel,ViTMSNPreTrainedModel:()=>u.ViTMSNPreTrainedModel,ViTModel:()=>u.ViTModel,ViTPreTrainedModel:()=>u.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>u.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>u.VitMatteForImageMatting,VitMatteImageProcessor:()=>w.VitMatteImageProcessor,VitMattePreTrainedModel:()=>u.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>u.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>w.VitPoseImageProcessor,VitPosePreTrainedModel:()=>u.VitPosePreTrainedModel,VitsModel:()=>u.VitsModel,VitsModelOutput:()=>u.VitsModelOutput,VitsPreTrainedModel:()=>u.VitsPreTrainedModel,VitsTokenizer:()=>d.VitsTokenizer,Wav2Vec2BertForCTC:()=>u.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>u.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>u.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>u.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>d.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>_.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>u.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>u.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>u.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>u.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>u.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>M.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>M.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>u.WavLMForAudioFrameClassification,WavLMForCTC:()=>u.WavLMForCTC,WavLMForSequenceClassification:()=>u.WavLMForSequenceClassification,WavLMForXVector:()=>u.WavLMForXVector,WavLMModel:()=>u.WavLMModel,WavLMPreTrainedModel:()=>u.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>_.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>u.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>u.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>_.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>u.WhisperForConditionalGeneration,WhisperModel:()=>u.WhisperModel,WhisperPreTrainedModel:()=>u.WhisperPreTrainedModel,WhisperProcessor:()=>M.WhisperProcessor,WhisperTextStreamer:()=>k.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>C.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>d.WhisperTokenizer,XLMForQuestionAnswering:()=>u.XLMForQuestionAnswering,XLMForSequenceClassification:()=>u.XLMForSequenceClassification,XLMForTokenClassification:()=>u.XLMForTokenClassification,XLMModel:()=>u.XLMModel,XLMPreTrainedModel:()=>u.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>u.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>u.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>u.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>u.XLMRobertaForTokenClassification,XLMRobertaModel:()=>u.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>u.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>d.XLMRobertaTokenizer,XLMTokenizer:()=>d.XLMTokenizer,XLMWithLMHeadModel:()=>u.XLMWithLMHeadModel,XVectorOutput:()=>u.XVectorOutput,YolosFeatureExtractor:()=>w.YolosFeatureExtractor,YolosForObjectDetection:()=>u.YolosForObjectDetection,YolosImageProcessor:()=>w.YolosImageProcessor,YolosModel:()=>u.YolosModel,YolosObjectDetectionOutput:()=>u.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>u.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>l.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>l.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>l.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>l.ZeroShotObjectDetectionPipeline,bankers_round:()=>f.bankers_round,cat:()=>m.cat,cos_sim:()=>f.cos_sim,dot:()=>f.dot,dynamic_time_warping:()=>f.dynamic_time_warping,env:()=>o.env,full:()=>m.full,full_like:()=>m.full_like,getKeyValueShapes:()=>c.getKeyValueShapes,hamming:()=>p.hamming,hanning:()=>p.hanning,interpolate:()=>m.interpolate,interpolate_4d:()=>m.interpolate_4d,interpolate_data:()=>f.interpolate_data,is_chinese_char:()=>d.is_chinese_char,layer_norm:()=>m.layer_norm,load_image:()=>h.load_image,log_softmax:()=>f.log_softmax,magnitude:()=>f.magnitude,matmul:()=>m.matmul,max:()=>f.max,mean:()=>m.mean,mean_pooling:()=>m.mean_pooling,medianFilter:()=>f.medianFilter,mel_filter_bank:()=>p.mel_filter_bank,min:()=>f.min,ones:()=>m.ones,ones_like:()=>m.ones_like,permute:()=>m.permute,permute_data:()=>f.permute_data,pipeline:()=>l.pipeline,quantize_embeddings:()=>m.quantize_embeddings,rand:()=>m.rand,read_audio:()=>p.read_audio,rfft:()=>m.rfft,round:()=>f.round,slice:()=>m.slice,softmax:()=>f.softmax,spectrogram:()=>p.spectrogram,stack:()=>m.stack,std_mean:()=>m.std_mean,topk:()=>m.topk,window_function:()=>p.window_function,zeros:()=>m.zeros,zeros_like:()=>m.zeros_like}),o=A("./src/env.js"),l=A("./src/pipelines.js"),u=A("./src/models.js"),d=A("./src/tokenizers.js"),c=A("./src/configs.js"),p=A("./src/utils/audio.js"),h=A("./src/utils/image.js"),m=A("./src/utils/tensor.js"),f=A("./src/utils/maths.js"),g=A("./src/base/feature_extraction_utils.js"),_=A("./src/models/feature_extractors.js"),b=A("./src/models/auto/feature_extraction_auto.js"),y=A("./src/base/image_processors_utils.js"),w=A("./src/models/image_processors.js"),x=A("./src/models/auto/image_processing_auto.js"),v=A("./src/base/processing_utils.js"),M=A("./src/models/processors.js"),T=A("./src/models/auto/processing_auto.js"),k=A("./src/generation/streamers.js"),$=A("./src/generation/stopping_criteria.js"),C=A("./src/generation/logits_process.js"),F.ASTFeatureExtractor,F.ASTForAudioClassification,F.ASTModel,F.ASTPreTrainedModel,F.AlbertForMaskedLM,F.AlbertForQuestionAnswering,F.AlbertForSequenceClassification,F.AlbertModel,F.AlbertPreTrainedModel,F.AlbertTokenizer,F.AudioClassificationPipeline,F.AutoConfig,F.AutoFeatureExtractor,F.AutoImageProcessor;var z=F.AutoModel;F.AutoModelForAudioClassification,F.AutoModelForAudioFrameClassification,F.AutoModelForCTC,F.AutoModelForCausalLM,F.AutoModelForDepthEstimation,F.AutoModelForDocumentQuestionAnswering,F.AutoModelForImageClassification,F.AutoModelForImageFeatureExtraction,F.AutoModelForImageMatting,F.AutoModelForImageSegmentation,F.AutoModelForImageToImage,F.AutoModelForMaskGeneration,F.AutoModelForMaskedLM,F.AutoModelForNormalEstimation,F.AutoModelForObjectDetection,F.AutoModelForPoseEstimation,F.AutoModelForQuestionAnswering,F.AutoModelForSemanticSegmentation,F.AutoModelForSeq2SeqLM,F.AutoModelForSequenceClassification,F.AutoModelForSpeechSeq2Seq,F.AutoModelForTextToSpectrogram,F.AutoModelForTextToWaveform,F.AutoModelForTokenClassification,F.AutoModelForUniversalSegmentation,F.AutoModelForVision2Seq,F.AutoModelForXVector,F.AutoModelForZeroShotObjectDetection;var O=F.AutoProcessor;F.AutoTokenizer,F.AutomaticSpeechRecognitionPipeline,F.BartForConditionalGeneration,F.BartForSequenceClassification,F.BartModel,F.BartPretrainedModel,F.BartTokenizer,F.BaseModelOutput,F.BaseStreamer,F.BeitFeatureExtractor,F.BeitForImageClassification,F.BeitModel,F.BeitPreTrainedModel,F.BertForMaskedLM,F.BertForQuestionAnswering,F.BertForSequenceClassification,F.BertForTokenClassification,F.BertModel,F.BertPreTrainedModel,F.BertTokenizer,F.BitImageProcessor,F.BlenderbotForConditionalGeneration,F.BlenderbotModel,F.BlenderbotPreTrainedModel,F.BlenderbotSmallForConditionalGeneration,F.BlenderbotSmallModel,F.BlenderbotSmallPreTrainedModel,F.BlenderbotSmallTokenizer,F.BlenderbotTokenizer,F.BloomForCausalLM,F.BloomModel,F.BloomPreTrainedModel,F.BloomTokenizer,F.CLIPFeatureExtractor,F.CLIPImageProcessor,F.CLIPModel,F.CLIPPreTrainedModel,F.CLIPSegForImageSegmentation,F.CLIPSegModel,F.CLIPSegPreTrainedModel,F.CLIPTextModel,F.CLIPTextModelWithProjection,F.CLIPTokenizer,F.CLIPVisionModel,F.CLIPVisionModelWithProjection,F.CamembertForMaskedLM,F.CamembertForQuestionAnswering,F.CamembertForSequenceClassification,F.CamembertForTokenClassification,F.CamembertModel,F.CamembertPreTrainedModel,F.CamembertTokenizer,F.CausalLMOutput,F.CausalLMOutputWithPast,F.ChineseCLIPFeatureExtractor,F.ChineseCLIPModel,F.ChineseCLIPPreTrainedModel,F.ClapAudioModelWithProjection,F.ClapFeatureExtractor,F.ClapModel,F.ClapPreTrainedModel,F.ClapTextModelWithProjection,F.ClassifierFreeGuidanceLogitsProcessor,F.CodeGenForCausalLM,F.CodeGenModel,F.CodeGenPreTrainedModel,F.CodeGenTokenizer,F.CodeLlamaTokenizer,F.CohereForCausalLM,F.CohereModel,F.CoherePreTrainedModel,F.CohereTokenizer,F.ConvBertForMaskedLM,F.ConvBertForQuestionAnswering,F.ConvBertForSequenceClassification,F.ConvBertForTokenClassification,F.ConvBertModel,F.ConvBertPreTrainedModel,F.ConvBertTokenizer,F.ConvNextFeatureExtractor,F.ConvNextForImageClassification,F.ConvNextImageProcessor,F.ConvNextModel,F.ConvNextPreTrainedModel,F.ConvNextV2ForImageClassification,F.ConvNextV2Model,F.ConvNextV2PreTrainedModel,F.DPTFeatureExtractor,F.DPTForDepthEstimation,F.DPTImageProcessor,F.DPTModel,F.DPTPreTrainedModel,F.DebertaForMaskedLM,F.DebertaForQuestionAnswering,F.DebertaForSequenceClassification,F.DebertaForTokenClassification,F.DebertaModel,F.DebertaPreTrainedModel,F.DebertaTokenizer,F.DebertaV2ForMaskedLM,F.DebertaV2ForQuestionAnswering,F.DebertaV2ForSequenceClassification,F.DebertaV2ForTokenClassification,F.DebertaV2Model,F.DebertaV2PreTrainedModel,F.DebertaV2Tokenizer,F.DecisionTransformerModel,F.DecisionTransformerPreTrainedModel,F.DeiTFeatureExtractor,F.DeiTForImageClassification,F.DeiTImageProcessor,F.DeiTModel,F.DeiTPreTrainedModel,F.DepthAnythingForDepthEstimation,F.DepthAnythingPreTrainedModel,F.DepthEstimationPipeline,F.DepthProForDepthEstimation,F.DepthProPreTrainedModel,F.DetrFeatureExtractor,F.DetrForObjectDetection,F.DetrForSegmentation,F.DetrImageProcessor,F.DetrModel,F.DetrObjectDetectionOutput,F.DetrPreTrainedModel,F.DetrSegmentationOutput,F.Dinov2ForImageClassification,F.Dinov2Model,F.Dinov2PreTrainedModel,F.Dinov2WithRegistersForImageClassification,F.Dinov2WithRegistersModel,F.Dinov2WithRegistersPreTrainedModel,F.DistilBertForMaskedLM,F.DistilBertForQuestionAnswering,F.DistilBertForSequenceClassification,F.DistilBertForTokenClassification,F.DistilBertModel,F.DistilBertPreTrainedModel,F.DistilBertTokenizer,F.DocumentQuestionAnsweringPipeline,F.DonutFeatureExtractor,F.DonutImageProcessor,F.DonutSwinModel,F.DonutSwinPreTrainedModel,F.EfficientNetForImageClassification,F.EfficientNetImageProcessor,F.EfficientNetModel,F.EfficientNetPreTrainedModel,F.ElectraForMaskedLM,F.ElectraForQuestionAnswering,F.ElectraForSequenceClassification,F.ElectraForTokenClassification,F.ElectraModel,F.ElectraPreTrainedModel,F.ElectraTokenizer,F.EosTokenCriteria,F.EsmForMaskedLM,F.EsmForSequenceClassification,F.EsmForTokenClassification,F.EsmModel,F.EsmPreTrainedModel,F.EsmTokenizer,F.ExaoneForCausalLM,F.ExaoneModel,F.ExaonePreTrainedModel,F.FFT,F.FalconForCausalLM,F.FalconModel,F.FalconPreTrainedModel,F.FalconTokenizer,F.FastViTForImageClassification,F.FastViTModel,F.FastViTPreTrainedModel,F.FeatureExtractionPipeline,F.FeatureExtractor,F.FillMaskPipeline,F.Florence2ForConditionalGeneration,F.Florence2PreTrainedModel,F.Florence2Processor,F.ForcedBOSTokenLogitsProcessor,F.ForcedEOSTokenLogitsProcessor,F.GLPNFeatureExtractor,F.GLPNForDepthEstimation,F.GLPNModel,F.GLPNPreTrainedModel,F.GPT2LMHeadModel,F.GPT2Model,F.GPT2PreTrainedModel,F.GPT2Tokenizer,F.GPTBigCodeForCausalLM,F.GPTBigCodeModel,F.GPTBigCodePreTrainedModel,F.GPTJForCausalLM,F.GPTJModel,F.GPTJPreTrainedModel,F.GPTNeoForCausalLM,F.GPTNeoModel,F.GPTNeoPreTrainedModel,F.GPTNeoXForCausalLM,F.GPTNeoXModel,F.GPTNeoXPreTrainedModel,F.GPTNeoXTokenizer,F.Gemma2ForCausalLM,F.Gemma2Model,F.Gemma2PreTrainedModel,F.GemmaForCausalLM,F.GemmaModel,F.GemmaPreTrainedModel,F.GemmaTokenizer,F.GlmForCausalLM,F.GlmModel,F.GlmPreTrainedModel,F.GraniteForCausalLM,F.GraniteModel,F.GranitePreTrainedModel,F.Grok1Tokenizer,F.GroundingDinoForObjectDetection,F.GroundingDinoImageProcessor,F.GroundingDinoPreTrainedModel,F.GroundingDinoProcessor,F.GroupViTModel,F.GroupViTPreTrainedModel,F.HeliumForCausalLM,F.HeliumModel,F.HeliumPreTrainedModel,F.HerbertTokenizer,F.HieraForImageClassification,F.HieraModel,F.HieraPreTrainedModel,F.HubertForCTC,F.HubertForSequenceClassification,F.HubertModel,F.HubertPreTrainedModel,F.IJepaForImageClassification,F.IJepaModel,F.IJepaPreTrainedModel,F.Idefics3ForConditionalGeneration,F.Idefics3ImageProcessor,F.Idefics3PreTrainedModel,F.Idefics3Processor,F.ImageClassificationPipeline,F.ImageFeatureExtractionPipeline,F.ImageFeatureExtractor,F.ImageMattingOutput,F.ImageProcessor,F.ImageSegmentationPipeline,F.ImageToImagePipeline,F.ImageToTextPipeline,F.InterruptableStoppingCriteria,F.JAISLMHeadModel,F.JAISModel,F.JAISPreTrainedModel,F.JinaCLIPImageProcessor,F.JinaCLIPModel,F.JinaCLIPPreTrainedModel,F.JinaCLIPProcessor,F.JinaCLIPTextModel,F.JinaCLIPVisionModel,F.LlamaForCausalLM,F.LlamaModel,F.LlamaPreTrainedModel,F.LlamaTokenizer,F.LlavaForConditionalGeneration,F.LlavaOnevisionForConditionalGeneration,F.LlavaOnevisionImageProcessor,F.LlavaPreTrainedModel,F.LogitsProcessor,F.LogitsProcessorList,F.LogitsWarper,F.LongT5ForConditionalGeneration,F.LongT5Model,F.LongT5PreTrainedModel,F.M2M100ForConditionalGeneration,F.M2M100Model,F.M2M100PreTrainedModel,F.M2M100Tokenizer,F.MBart50Tokenizer,F.MBartForCausalLM,F.MBartForConditionalGeneration,F.MBartForSequenceClassification,F.MBartModel,F.MBartPreTrainedModel,F.MBartTokenizer,F.MPNetForMaskedLM,F.MPNetForQuestionAnswering,F.MPNetForSequenceClassification,F.MPNetForTokenClassification,F.MPNetModel,F.MPNetPreTrainedModel,F.MPNetTokenizer,F.MT5ForConditionalGeneration,F.MT5Model,F.MT5PreTrainedModel,F.MarianMTModel,F.MarianModel,F.MarianPreTrainedModel,F.MarianTokenizer,F.Mask2FormerImageProcessor,F.MaskFormerFeatureExtractor,F.MaskFormerForInstanceSegmentation,F.MaskFormerImageProcessor,F.MaskFormerModel,F.MaskFormerPreTrainedModel,F.MaskedLMOutput,F.MaxLengthCriteria,F.MgpstrForSceneTextRecognition,F.MgpstrModelOutput,F.MgpstrPreTrainedModel,F.MgpstrProcessor,F.MgpstrTokenizer,F.MinLengthLogitsProcessor,F.MinNewTokensLengthLogitsProcessor,F.MistralForCausalLM,F.MistralModel,F.MistralPreTrainedModel,F.MobileBertForMaskedLM,F.MobileBertForQuestionAnswering,F.MobileBertForSequenceClassification,F.MobileBertModel,F.MobileBertPreTrainedModel,F.MobileBertTokenizer,F.MobileLLMForCausalLM,F.MobileLLMModel,F.MobileLLMPreTrainedModel,F.MobileNetV1FeatureExtractor,F.MobileNetV1ForImageClassification,F.MobileNetV1ImageProcessor,F.MobileNetV1Model,F.MobileNetV1PreTrainedModel,F.MobileNetV2FeatureExtractor,F.MobileNetV2ForImageClassification,F.MobileNetV2ImageProcessor,F.MobileNetV2Model,F.MobileNetV2PreTrainedModel,F.MobileNetV3FeatureExtractor,F.MobileNetV3ForImageClassification,F.MobileNetV3ImageProcessor,F.MobileNetV3Model,F.MobileNetV3PreTrainedModel,F.MobileNetV4FeatureExtractor,F.MobileNetV4ForImageClassification,F.MobileNetV4ImageProcessor,F.MobileNetV4Model,F.MobileNetV4PreTrainedModel,F.MobileViTFeatureExtractor,F.MobileViTForImageClassification,F.MobileViTImageProcessor,F.MobileViTModel,F.MobileViTPreTrainedModel,F.MobileViTV2ForImageClassification,F.MobileViTV2Model,F.MobileViTV2PreTrainedModel,F.ModelOutput,F.ModernBertForMaskedLM,F.ModernBertForSequenceClassification,F.ModernBertForTokenClassification,F.ModernBertModel,F.ModernBertPreTrainedModel,F.Moondream1ForConditionalGeneration,F.MoonshineFeatureExtractor,F.MoonshineForConditionalGeneration,F.MoonshineModel,F.MoonshinePreTrainedModel,F.MoonshineProcessor,F.MptForCausalLM,F.MptModel,F.MptPreTrainedModel,F.MultiModalityCausalLM,F.MultiModalityPreTrainedModel,F.MusicgenForCausalLM,F.MusicgenForConditionalGeneration,F.MusicgenModel,F.MusicgenPreTrainedModel,F.NllbTokenizer,F.NoBadWordsLogitsProcessor,F.NoRepeatNGramLogitsProcessor,F.NomicBertModel,F.NomicBertPreTrainedModel,F.NougatImageProcessor,F.NougatTokenizer,F.OPTForCausalLM,F.OPTModel,F.OPTPreTrainedModel,F.ObjectDetectionPipeline,F.Olmo2ForCausalLM,F.Olmo2Model,F.Olmo2PreTrainedModel,F.OlmoForCausalLM,F.OlmoModel,F.OlmoPreTrainedModel,F.OpenELMForCausalLM,F.OpenELMModel,F.OpenELMPreTrainedModel,F.OwlViTFeatureExtractor,F.OwlViTForObjectDetection,F.OwlViTImageProcessor,F.OwlViTModel,F.OwlViTPreTrainedModel,F.OwlViTProcessor,F.Owlv2ForObjectDetection,F.Owlv2ImageProcessor,F.Owlv2Model,F.Owlv2PreTrainedModel,F.PaliGemmaForConditionalGeneration,F.PaliGemmaPreTrainedModel,F.PaliGemmaProcessor,F.PatchTSMixerForPrediction,F.PatchTSMixerModel,F.PatchTSMixerPreTrainedModel,F.PatchTSTForPrediction,F.PatchTSTModel,F.PatchTSTPreTrainedModel,F.Phi3ForCausalLM,F.Phi3Model,F.Phi3PreTrainedModel,F.Phi3VForCausalLM,F.Phi3VImageProcessor,F.Phi3VPreTrainedModel,F.Phi3VProcessor,F.PhiForCausalLM,F.PhiModel,F.PhiPreTrainedModel,F.Pipeline,F.PreTrainedModel,F.PreTrainedTokenizer,F.PretrainedConfig,F.PretrainedMixin,F.Processor,F.PvtForImageClassification,F.PvtImageProcessor,F.PvtModel,F.PvtPreTrainedModel,F.PyAnnoteFeatureExtractor,F.PyAnnoteForAudioFrameClassification,F.PyAnnoteModel,F.PyAnnotePreTrainedModel,F.PyAnnoteProcessor,F.QuestionAnsweringModelOutput,F.QuestionAnsweringPipeline,F.Qwen2ForCausalLM,F.Qwen2Model,F.Qwen2PreTrainedModel,F.Qwen2Tokenizer,F.Qwen2VLForConditionalGeneration,F.Qwen2VLImageProcessor,F.Qwen2VLPreTrainedModel,F.Qwen2VLProcessor,F.RTDetrForObjectDetection,F.RTDetrImageProcessor,F.RTDetrModel,F.RTDetrObjectDetectionOutput,F.RTDetrPreTrainedModel,F.RawAudio;var L=F.RawImage;F.RepetitionPenaltyLogitsProcessor,F.ResNetForImageClassification,F.ResNetModel,F.ResNetPreTrainedModel,F.RoFormerForMaskedLM,F.RoFormerForQuestionAnswering,F.RoFormerForSequenceClassification,F.RoFormerForTokenClassification,F.RoFormerModel,F.RoFormerPreTrainedModel,F.RoFormerTokenizer,F.RobertaForMaskedLM,F.RobertaForQuestionAnswering,F.RobertaForSequenceClassification,F.RobertaForTokenClassification,F.RobertaModel,F.RobertaPreTrainedModel,F.RobertaTokenizer,F.SamImageProcessor,F.SamImageSegmentationOutput,F.SamModel,F.SamPreTrainedModel,F.SamProcessor,F.SapiensForDepthEstimation,F.SapiensForNormalEstimation,F.SapiensForSemanticSegmentation,F.SapiensPreTrainedModel,F.SeamlessM4TFeatureExtractor,F.SegformerFeatureExtractor,F.SegformerForImageClassification,F.SegformerForSemanticSegmentation,F.SegformerImageProcessor,F.SegformerModel,F.SegformerPreTrainedModel,F.Seq2SeqLMOutput,F.SequenceClassifierOutput,F.SiglipImageProcessor,F.SiglipModel,F.SiglipPreTrainedModel,F.SiglipTextModel,F.SiglipTokenizer,F.SiglipVisionModel,F.SpeechT5FeatureExtractor,F.SpeechT5ForSpeechToText,F.SpeechT5ForTextToSpeech,F.SpeechT5HifiGan,F.SpeechT5Model,F.SpeechT5PreTrainedModel,F.SpeechT5Processor,F.SpeechT5Tokenizer,F.SqueezeBertForMaskedLM,F.SqueezeBertForQuestionAnswering,F.SqueezeBertForSequenceClassification,F.SqueezeBertModel,F.SqueezeBertPreTrainedModel,F.SqueezeBertTokenizer,F.StableLmForCausalLM,F.StableLmModel,F.StableLmPreTrainedModel,F.Starcoder2ForCausalLM,F.Starcoder2Model,F.Starcoder2PreTrainedModel,F.StoppingCriteria,F.StoppingCriteriaList,F.StyleTextToSpeech2Model,F.StyleTextToSpeech2PreTrainedModel,F.SummarizationPipeline,F.SuppressTokensAtBeginLogitsProcessor,F.Swin2SRForImageSuperResolution,F.Swin2SRImageProcessor,F.Swin2SRModel,F.Swin2SRPreTrainedModel,F.SwinForImageClassification,F.SwinModel,F.SwinPreTrainedModel,F.T5ForConditionalGeneration,F.T5Model,F.T5PreTrainedModel,F.T5Tokenizer,F.TableTransformerForObjectDetection,F.TableTransformerModel,F.TableTransformerObjectDetectionOutput,F.TableTransformerPreTrainedModel,F.TemperatureLogitsWarper,F.Tensor,F.Text2TextGenerationPipeline,F.TextClassificationPipeline,F.TextGenerationPipeline,F.TextStreamer,F.TextToAudioPipeline,F.TokenClassificationPipeline,F.TokenClassifierOutput,F.TokenizerModel,F.TopKLogitsWarper,F.TopPLogitsWarper,F.TrOCRForCausalLM,F.TrOCRPreTrainedModel,F.TranslationPipeline,F.UniSpeechForCTC,F.UniSpeechForSequenceClassification,F.UniSpeechModel,F.UniSpeechPreTrainedModel,F.UniSpeechSatForAudioFrameClassification,F.UniSpeechSatForCTC,F.UniSpeechSatForSequenceClassification,F.UniSpeechSatModel,F.UniSpeechSatPreTrainedModel,F.VLChatProcessor,F.VLMImageProcessor,F.ViTFeatureExtractor,F.ViTForImageClassification,F.ViTImageProcessor,F.ViTMAEModel,F.ViTMAEPreTrainedModel,F.ViTMSNForImageClassification,F.ViTMSNModel,F.ViTMSNPreTrainedModel,F.ViTModel,F.ViTPreTrainedModel,F.VisionEncoderDecoderModel,F.VitMatteForImageMatting,F.VitMatteImageProcessor,F.VitMattePreTrainedModel,F.VitPoseForPoseEstimation,F.VitPoseImageProcessor,F.VitPosePreTrainedModel,F.VitsModel,F.VitsModelOutput,F.VitsPreTrainedModel,F.VitsTokenizer,F.Wav2Vec2BertForCTC,F.Wav2Vec2BertForSequenceClassification,F.Wav2Vec2BertModel,F.Wav2Vec2BertPreTrainedModel,F.Wav2Vec2CTCTokenizer,F.Wav2Vec2FeatureExtractor,F.Wav2Vec2ForAudioFrameClassification,F.Wav2Vec2ForCTC,F.Wav2Vec2ForSequenceClassification,F.Wav2Vec2Model,F.Wav2Vec2PreTrainedModel,F.Wav2Vec2Processor,F.Wav2Vec2ProcessorWithLM,F.WavLMForAudioFrameClassification,F.WavLMForCTC,F.WavLMForSequenceClassification,F.WavLMForXVector,F.WavLMModel,F.WavLMPreTrainedModel,F.WeSpeakerFeatureExtractor,F.WeSpeakerResNetModel,F.WeSpeakerResNetPreTrainedModel,F.WhisperFeatureExtractor,F.WhisperForConditionalGeneration,F.WhisperModel,F.WhisperPreTrainedModel,F.WhisperProcessor,F.WhisperTextStreamer,F.WhisperTimeStampLogitsProcessor,F.WhisperTokenizer,F.XLMForQuestionAnswering,F.XLMForSequenceClassification,F.XLMForTokenClassification,F.XLMModel,F.XLMPreTrainedModel,F.XLMRobertaForMaskedLM,F.XLMRobertaForQuestionAnswering,F.XLMRobertaForSequenceClassification,F.XLMRobertaForTokenClassification,F.XLMRobertaModel,F.XLMRobertaPreTrainedModel,F.XLMRobertaTokenizer,F.XLMTokenizer,F.XLMWithLMHeadModel,F.XVectorOutput,F.YolosFeatureExtractor,F.YolosForObjectDetection,F.YolosImageProcessor,F.YolosModel,F.YolosObjectDetectionOutput,F.YolosPreTrainedModel,F.ZeroShotAudioClassificationPipeline,F.ZeroShotClassificationPipeline,F.ZeroShotImageClassificationPipeline,F.ZeroShotObjectDetectionPipeline,F.bankers_round,F.cat,F.cos_sim,F.dot,F.dynamic_time_warping,F.env,F.full,F.full_like,F.getKeyValueShapes,F.hamming,F.hanning,F.interpolate,F.interpolate_4d,F.interpolate_data,F.is_chinese_char,F.layer_norm,F.load_image,F.log_softmax,F.magnitude,F.matmul,F.max,F.mean,F.mean_pooling,F.medianFilter,F.mel_filter_bank,F.min,F.ones,F.ones_like,F.permute,F.permute_data,F.pipeline,F.quantize_embeddings,F.rand,F.read_audio,F.rfft,F.round,F.slice,F.softmax,F.spectrogram,F.stack,F.std_mean,F.topk,F.window_function,F.zeros,F.zeros_like}}]);